#!/usr/bin/php
<?php

ini_set('memory_limit', '1G');

$index = '';
$path = realpath(dirname(__FILE__));
$escapedPath = str_replace(' ', '\ ', $path);

//Get the last version of the documentation from the php.net website
$gzFile = file_get_contents('http://es.php.net/get/php_manual_en.html.gz/from/this/mirror');

//Write it
file_put_contents($path . '/tmp_reference.html.gz', $gzFile);

//Extract the html
exec('gunzip ' . $escapedPath . '/tmp_reference.html.gz');

//Parse the file
$manual = file_get_contents($path . '/tmp_reference.html');

exec('tidy -o ' . $escapedPath . '/tmp_reference.xml -f /dev/null -asxhtml -numeric ' . $escapedPath . '/tmp_reference.html');

$xmlContents = file_get_contents($path . '/tmp_reference.xml');
$xmlContents = str_replace('xmlns=', 'ns=', $xmlContents);

//Load the xml
$xml = new SimpleXMLElement($xmlContents);
$functions = $xml->xpath('//div[@class="refentry"]');

foreach($functions as $f){
    $funcName = $f->div[0]->h1;
    $funcVer = $f->div[0]->p[0];
    $funcSignature = str_replace("\n", ' ', strip_tags($f->div[1]->div->asXML()));
    $funcSignature = preg_replace('/\s[\s]*/', ' ', $funcSignature);
    $funcSignature = str_replace(' , ', ', ', $funcSignature);
    $funcDescription = str_replace("\n", ' ', strip_tags($f->div[1]->p));
    $funcDescription = preg_replace('/\s[\s]*/', ' ', $funcDescription);
    $funcDescription = str_replace(' , ', ', ', $funcDescription);
    
    $index .= serialize(array(
        htmlspecialchars_decode($funcName), 
        htmlspecialchars_decode($funcVer), 
        htmlspecialchars_decode($funcSignature), 
        htmlspecialchars_decode($funcDescription))
    ) . PHP_EOL;
}

//Write the index
file_put_contents($path . '/index.txt', $index);

//Remove the temporal documentation
unlink($path . '/tmp_reference.html');
unlink($path . '/tmp_reference.xml');

echo 'PHP Documentation updated successfully';