a:4:{i:0;s:22:"Exception::__construct";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:23:"Construct the exception";i:3;s:50:"final public string Exception::getMessage ( void )";}
a:4:{i:0;s:22:"Exception::getPrevious";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:26:"Returns previous Exception";i:3;s:54:"final public Exception Exception::getPrevious ( void )";}
a:4:{i:0;s:18:"Exception::getCode";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:23:"Gets the Exception code";i:3;s:44:"final public int Exception::getCode ( void )";}
a:4:{i:0;s:18:"Exception::getFile";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:45:"Gets the file in which the exception occurred";i:3;s:47:"final public string Exception::getFile ( void )";}
a:4:{i:0;s:18:"Exception::getLine";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:45:"Gets the line in which the exception occurred";i:3;s:44:"final public int Exception::getLine ( void )";}
a:4:{i:0;s:19:"Exception::getTrace";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:20:"Gets the stack trace";i:3;s:47:"final public array Exception::getTrace ( void )";}
a:4:{i:0;s:27:"Exception::getTraceAsString";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:32:"Gets the stack trace as a string";i:3;s:56:"final public string Exception::getTraceAsString ( void )";}
a:4:{i:0;s:21:"Exception::__toString";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:38:"String representation of the exception";i:3;s:44:"public string Exception::__toString ( void )";}
a:4:{i:0;s:18:"Exception::__clone";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:19:"Clone the exception";i:3;s:46:"final private void Exception::__clone ( void )";}
a:4:{i:0;s:27:"ErrorException::__construct";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:23:"Construct the exception";i:3;s:53:"final public int ErrorException::getSeverity ( void )";}
a:4:{i:0;s:17:"Iterator::current";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:26:"Return the current element";i:3;s:48:"abstract public boolean Iterator::valid ( void )";}
a:4:{i:0;s:30:"IteratorAggregate::getIterator";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:29:"Retrieve an external iterator";i:3;s:67:"abstract public Traversable IteratorAggregate::getIterator ( void )";}
a:4:{i:0;s:25:"ArrayAccess::offsetExists";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:23:"Whether a offset exists";i:3;s:67:"abstract public boolean ArrayAccess::offsetExists ( mixed $offset )";}
a:4:{i:0;s:22:"ArrayAccess::offsetGet";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:18:"Offset to retrieve";i:3;s:62:"abstract public mixed ArrayAccess::offsetGet ( mixed $offset )";}
a:4:{i:0;s:22:"ArrayAccess::offsetSet";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:13:"Offset to set";i:3;s:76:"abstract public void ArrayAccess::offsetSet ( mixed $offset , mixed $value )";}
a:4:{i:0;s:24:"ArrayAccess::offsetUnset";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:15:"Offset to unset";i:3;s:63:"abstract public void ArrayAccess::offsetUnset ( mixed $offset )";}
a:4:{i:0;s:23:"Serializable::serialize";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:31:"String representation of object";i:3;s:70:"abstract public mixed Serializable::unserialize ( string $serialized )";}
a:4:{i:0;s:7:"apc_add";i:1;s:18:"PECL apc >= 3.0.13";i:2;s:36:" Cache a variable in the data store ";i:3;s:59:"bool apc_add ( string $key , mixed $var [, int $ttl = 0 ] )";}
a:4:{i:0;s:12:"apc_bin_dump";i:1;s:17:"PECL apc >= 3.1.4";i:2;s:55:"Get a binary dump of the given files and user variables";i:3;s:50:"bool apc_bin_load ( string $data [, int $flags ] )";}
a:4:{i:0;s:7:"apc_cas";i:1;s:17:"PECL apc >= 3.1.1";i:2;s:7:"apc_cas";i:3;s:49:"int apc_cas ( string $key , int $old , int $new )";}
a:4:{i:0;s:15:"apc_clear_cache";i:1;s:17:"PECL apc >= 2.0.0";i:2;s:22:" Clears the APC cache ";i:3;s:46:"bool apc_clear_cache ([ string $cache_type ] )";}
a:4:{i:0;s:7:"apc_dec";i:1;s:17:"PECL apc >= 3.1.1";i:2;s:24:"Decrease a stored number";i:3;s:65:"int apc_dec ( string $key [, int $step = 1 [, bool &$success ]] )";}
a:4:{i:0;s:15:"apc_delete_file";i:1;s:17:"PECL apc >= 3.1.1";i:2;s:35:"Deletes files from the opcode cache";i:3;s:37:"mixed apc_delete_file ( mixed $keys )";}
a:4:{i:0;s:10:"apc_delete";i:1;s:17:"PECL apc >= 3.0.0";i:2;s:42:" Removes a stored variable from the cache ";i:3;s:31:"bool apc_delete ( string $key )";}
a:4:{i:0;s:10:"apc_exists";i:1;s:17:"PECL apc >= 3.1.4";i:2;s:24:"Checks if APC key exists";i:3;s:32:"mixed apc_exists ( mixed $keys )";}
a:4:{i:0;s:9:"apc_fetch";i:1;s:17:"PECL apc >= 3.0.0";i:2;s:40:" Fetch a stored variable from the cache ";i:3;s:50:"mixed apc_fetch ( mixed $key [, bool &$success ] )";}
a:4:{i:0;s:7:"apc_inc";i:1;s:17:"PECL apc >= 3.1.1";i:2;s:24:"Increase a stored number";i:3;s:65:"int apc_inc ( string $key [, int $step = 1 [, bool &$success ]] )";}
a:4:{i:0;s:18:"apc_load_constants";i:1;s:17:"PECL apc >= 3.0.0";i:2;s:41:" Loads a set of constants from the cache ";i:3;s:72:"bool apc_load_constants ( string $key [, bool $case_sensitive = true ] )";}
a:4:{i:0;s:9:"apc_store";i:1;s:17:"PECL apc >= 3.0.0";i:2;s:36:" Cache a variable in the data store ";i:3;s:61:"bool apc_store ( string $key , mixed $var [, int $ttl = 0 ] )";}
a:4:{i:0;s:24:"APCIterator::__construct";i:1;s:17:"PECL apc >= 3.1.1";i:2;s:41:"Constructs an APCIterator iterator object";i:3;s:124:"APCIterator::__construct ( string $cache [, mixed $search = null [, int $format [, int $chunk_size = 100 [, int $list ]]]] )";}
a:4:{i:0;s:20:"APCIterator::current";i:1;s:17:"PECL apc >= 3.1.1";i:2;s:16:"Get current item";i:3;s:50:"public integer APCIterator::getTotalCount ( void )";}
a:4:{i:0;s:25:"APCIterator::getTotalHits";i:1;s:17:"PECL apc >= 3.1.1";i:2;s:20:"Get total cache hits";i:3;s:49:"public integer APCIterator::getTotalHits ( void )";}
a:4:{i:0;s:25:"APCIterator::getTotalSize";i:1;s:17:"PECL apc >= 3.1.1";i:2;s:20:"Get total cache size";i:3;s:45:"public int APCIterator::getTotalSize ( void )";}
a:4:{i:0;s:16:"APCIterator::key";i:1;s:17:"PECL apc >= 3.1.1";i:2;s:16:"Get iterator key";i:3;s:39:"public void APCIterator::valid ( void )";}
a:4:{i:0;s:14:"apd_breakpoint";i:1;s:15:"PECL apd >= 0.2";i:2;s:55:"Stops the interpreter and waits on a CR from the socket";i:3;s:40:"bool apd_breakpoint ( int $debug_level )";}
a:4:{i:0;s:13:"apd_callstack";i:1;s:16:"PECL apd 0.2-0.4";i:2;s:42:"Returns the current call stack as an array";i:3;s:28:"array apd_callstack ( void )";}
a:4:{i:0;s:9:"apd_clunk";i:1;s:16:"PECL apd 0.2-0.4";i:2;s:31:"Throw a warning and a callstack";i:3;s:57:"void apd_clunk ( string $warning [, string $delimiter ] )";}
a:4:{i:0;s:12:"apd_continue";i:1;s:15:"PECL apd >= 0.2";i:2;s:24:"Restarts the interpreter";i:3;s:38:"bool apd_continue ( int $debug_level )";}
a:4:{i:0;s:23:"apd_dump_function_table";i:1;s:7:"Unknown";i:2;s:34:"Outputs the current function table";i:3;s:37:"void apd_dump_function_table ( void )";}
a:4:{i:0;s:29:"apd_dump_persistent_resources";i:1;s:16:"PECL apd 0.2-0.4";i:2;s:43:"Return all persistent resources as an array";i:3;s:44:"array apd_dump_persistent_resources ( void )";}
a:4:{i:0;s:26:"apd_dump_regular_resources";i:1;s:16:"PECL apd 0.2-0.4";i:2;s:48:"Return all current regular resources as an array";i:3;s:41:"array apd_dump_regular_resources ( void )";}
a:4:{i:0;s:8:"apd_echo";i:1;s:15:"PECL apd >= 0.2";i:2;s:28:"Echo to the debugging socket";i:3;s:32:"bool apd_echo ( string $output )";}
a:4:{i:0;s:22:"apd_get_active_symbols";i:1;s:12:"PECL apd 0.2";i:2;s:62:"Get an array of the current variables names in the local scope";i:3;s:37:"array apd_get_active_symbols ( void )";}
a:4:{i:0;s:19:"apd_set_pprof_trace";i:1;s:15:"PECL apd >= 0.2";i:2;s:28:"Starts the session debugging";i:3;s:87:"string apd_set_pprof_trace ([ string $dump_directory [, string $fragment = "pprof" ]] )";}
a:4:{i:0;s:28:"apd_set_session_trace_socket";i:1;s:15:"PECL apd >= 0.2";i:2;s:35:"Starts the remote session debugging";i:3;s:106:"bool apd_set_session_trace_socket ( string $tcp_server , int $socket_type , int $port , int $debug_level )";}
a:4:{i:0;s:21:"apd_set_session_trace";i:1;s:16:"PECL apd 0.2-0.4";i:2;s:28:"Starts the session debugging";i:3;s:75:"void apd_set_session_trace ( int $debug_level [, string $dump_directory ] )";}
a:4:{i:0;s:15:"apd_set_session";i:1;s:16:"PECL apd 0.2-0.4";i:2;s:43:"Changes or sets the current debugging level";i:3;s:41:"void apd_set_session ( int $debug_level )";}
a:4:{i:0;s:15:"rename_function";i:1;s:15:"PECL apd >= 0.2";i:2;s:58:"Renames orig_name to new_name in the global function table";i:3;s:65:"bool rename_function ( string $original_name , string $new_name )";}
a:4:{i:0;s:18:"bcompiler_load_exe";i:1;s:21:"PECL bcompiler >= 0.4";i:2;s:51:"Reads and creates classes from a bcompiler exe file";i:3;s:44:"bool bcompiler_load_exe ( string $filename )";}
a:4:{i:0;s:14:"bcompiler_load";i:1;s:21:"PECL bcompiler >= 0.4";i:2;s:51:"Reads and creates classes from a bz compressed file";i:3;s:40:"bool bcompiler_load ( string $filename )";}
a:4:{i:0;s:21:"bcompiler_parse_class";i:1;s:21:"PECL bcompiler >= 0.4";i:2;s:64:"Reads the bytecodes of a class and calls back to a user function";i:3;s:63:"bool bcompiler_parse_class ( string $class , string $callback )";}
a:4:{i:0;s:14:"bcompiler_read";i:1;s:21:"PECL bcompiler >= 0.4";i:2;s:43:"Reads and creates classes from a filehandle";i:3;s:44:"bool bcompiler_read ( resource $filehandle )";}
a:4:{i:0;s:21:"bcompiler_write_class";i:1;s:21:"PECL bcompiler >= 0.4";i:2;s:36:"Writes an defined class as bytecodes";i:3;s:92:"bool bcompiler_write_class ( resource $filehandle , string $className [, string $extends ] )";}
a:4:{i:0;s:24:"bcompiler_write_constant";i:1;s:21:"PECL bcompiler >= 0.5";i:2;s:38:"Writes a defined constant as bytecodes";i:3;s:77:"bool bcompiler_write_constant ( resource $filehandle , string $constantName )";}
a:4:{i:0;s:20:"bcompiler_write_file";i:1;s:21:"PECL bcompiler >= 0.6";i:2;s:37:"Writes a php source file as bytecodes";i:3;s:69:"bool bcompiler_write_file ( resource $filehandle , string $filename )";}
a:4:{i:0;s:24:"bcompiler_write_function";i:1;s:21:"PECL bcompiler >= 0.5";i:2;s:39:"Writes an defined function as bytecodes";i:3;s:77:"bool bcompiler_write_function ( resource $filehandle , string $functionName )";}
a:4:{i:0;s:35:"bcompiler_write_functions_from_file";i:1;s:21:"PECL bcompiler >= 0.5";i:2;s:51:"Writes all functions defined in a file as bytecodes";i:3;s:84:"bool bcompiler_write_functions_from_file ( resource $filehandle , string $fileName )";}
a:4:{i:0;s:22:"bcompiler_write_header";i:1;s:21:"PECL bcompiler >= 0.3";i:2;s:27:"Writes the bcompiler header";i:3;s:75:"bool bcompiler_write_header ( resource $filehandle [, string $write_ver ] )";}
a:4:{i:0;s:33:"bcompiler_write_included_filename";i:1;s:21:"PECL bcompiler >= 0.5";i:2;s:36:"Writes an included file as bytecodes";i:3;s:82:"bool bcompiler_write_included_filename ( resource $filehandle , string $filename )";}
a:4:{i:0;s:15:"debug_backtrace";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:21:"Generates a backtrace";i:3;s:56:"array debug_backtrace ([ bool $provide_object = true ] )";}
a:4:{i:0;s:21:"debug_print_backtrace";i:1;s:5:"PHP 5";i:2;s:20:" Prints a backtrace ";i:3;s:35:"void debug_print_backtrace ( void )";}
a:4:{i:0;s:14:"error_get_last";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:27:"Get the last occurred error";i:3;s:29:"array error_get_last ( void )";}
a:4:{i:0;s:9:"error_log";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"Send an error message somewhere";i:3;s:111:"bool error_log ( string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]] )";}
a:4:{i:0;s:15:"error_reporting";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Sets which PHP errors are reported";i:3;s:37:"int error_reporting ([ int $level ] )";}
a:4:{i:0;s:21:"restore_error_handler";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:44:"Restores the previous error handler function";i:3;s:35:"bool restore_error_handler ( void )";}
a:4:{i:0;s:25:"restore_exception_handler";i:1;s:5:"PHP 5";i:2;s:60:" Restores the previously defined exception handler function ";i:3;s:39:"bool restore_exception_handler ( void )";}
a:4:{i:0;s:16:"inclued_get_data";i:1;s:21:"PECL inclued >= 0.1.0";i:2;s:20:"Get the inclued data";i:3;s:31:"array inclued_get_data ( void )";}
a:4:{i:0;s:2:"dl";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Loads a PHP extension at runtime";i:3;s:27:"bool dl ( string $library )";}
a:4:{i:0;s:16:"extension_loaded";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Find out whether an extension is loaded";i:3;s:38:"bool extension_loaded ( string $name )";}
a:4:{i:0;s:17:"gc_collect_cycles";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:48:"Forces collection of any existing garbage cycles";i:3;s:32:"string get_current_user ( void )";}
a:4:{i:0;s:21:"get_defined_constants";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:81:"Returns an associative array with the names of all the constants and their values";i:3;s:59:"array get_defined_constants ([ bool $categorize = false ] )";}
a:4:{i:0;s:19:"get_extension_funcs";i:1;s:12:"PHP 4, PHP 5";i:2;s:60:"Returns an array with the names of the functions of a module";i:3;s:49:"array get_extension_funcs ( string $module_name )";}
a:4:{i:0;s:16:"get_include_path";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:50:"Gets the current include_path configuration option";i:3;s:32:"string get_include_path ( void )";}
a:4:{i:0;s:18:"get_included_files";i:1;s:12:"PHP 4, PHP 5";i:2;s:61:"Returns an array with the names of included or required files";i:3;s:33:"array get_included_files ( void )";}
a:4:{i:0;s:21:"get_loaded_extensions";i:1;s:12:"PHP 4, PHP 5";i:2;s:66:"Returns an array with the names of all modules compiled and loaded";i:3;s:64:"array get_loaded_extensions ([ bool $zend_extensions = false ] )";}
a:4:{i:0;s:20:"get_magic_quotes_gpc";i:1;s:12:"PHP 4, PHP 5";i:2;s:58:"Gets the current configuration setting of magic_quotes_gpc";i:3;s:33:"int get_magic_quotes_gpc ( void )";}
a:4:{i:0;s:24:"get_magic_quotes_runtime";i:1;s:12:"PHP 4, PHP 5";i:2;s:69:"Gets the current active configuration setting of magic_quotes_runtime";i:3;s:37:"int get_magic_quotes_runtime ( void )";}
a:4:{i:0;s:6:"getenv";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Gets the value of an environment variable";i:3;s:33:"string getenv ( string $varname )";}
a:4:{i:0;s:10:"getlastmod";i:1;s:12:"PHP 4, PHP 5";i:2;s:35:"Gets time of last page modification";i:3;s:23:"int getlastmod ( void )";}
a:4:{i:0;s:10:"getmyinode";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Gets the inode of the current script";i:3;s:23:"int getmyinode ( void )";}
a:4:{i:0;s:6:"getopt";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:48:"Gets options from the command line argument list";i:3;s:53:"array getopt ( string $options [, array $longopts ] )";}
a:4:{i:0;s:9:"getrusage";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Gets the current resource usages";i:3;s:35:"array getrusage ([ int $who = 0 ] )";}
a:4:{i:0;s:11:"ini_get_all";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:30:"Gets all configuration options";i:3;s:67:"array ini_get_all ([ string $extension [, bool $details = true ]] )";}
a:4:{i:0;s:7:"ini_get";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Gets the value of a configuration option";i:3;s:34:"string ini_get ( string $varname )";}
a:4:{i:0;s:11:"ini_restore";i:1;s:12:"PHP 4, PHP 5";i:2;s:44:"Restores the value of a configuration option";i:3;s:36:"void ini_restore ( string $varname )";}
a:4:{i:0;s:7:"ini_set";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Sets the value of a configuration option";i:3;s:53:"string ini_set ( string $varname , string $newvalue )";}
a:4:{i:0;s:21:"memory_get_peak_usage";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:43:"Returns the peak of memory allocated by PHP";i:3;s:52:"int memory_get_usage ([ bool $real_usage = false ] )";}
a:4:{i:0;s:19:"php_ini_loaded_file";i:1;s:14:"PHP 5 >= 5.2.4";i:2;s:42:"Retrieve a path to the loaded php.ini file";i:3;s:35:"string php_ini_loaded_file ( void )";}
a:4:{i:0;s:21:"php_ini_scanned_files";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:62:"Return a list of .ini files parsed from the additional ini dir";i:3;s:37:"string php_ini_scanned_files ( void )";}
a:4:{i:0;s:13:"php_logo_guid";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Gets the logo guid";i:3;s:29:"string php_logo_guid ( void )";}
a:4:{i:0;s:13:"php_sapi_name";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:56:"Returns the type of interface between web server and PHP";i:3;s:29:"string php_sapi_name ( void )";}
a:4:{i:0;s:9:"php_uname";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:64:"Returns information about the operating system PHP is running on";i:3;s:42:"string php_uname ([ string $mode = "a" ] )";}
a:4:{i:0;s:10:"phpcredits";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Prints out the credits for PHP";i:3;s:46:"bool phpcredits ([ int $flag = CREDITS_ALL ] )";}
a:4:{i:0;s:10:"phpversion";i:1;s:12:"PHP 4, PHP 5";i:2;s:28:"Gets the current PHP version";i:3;s:42:"string phpversion ([ string $extension ] )";}
a:4:{i:0;s:6:"putenv";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Sets the value of an environment variable";i:3;s:31:"bool putenv ( string $setting )";}
a:4:{i:0;s:20:"restore_include_path";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:59:"Restores the value of the include_path configuration option";i:3;s:34:"void restore_include_path ( void )";}
a:4:{i:0;s:16:"set_include_path";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:42:"Sets the include_path configuration option";i:3;s:52:"string set_include_path ( string $new_include_path )";}
a:4:{i:0;s:24:"set_magic_quotes_runtime";i:1;s:12:"PHP 4, PHP 5";i:2;s:69:"Sets the current active configuration setting of magic_quotes_runtime";i:3;s:51:"bool set_magic_quotes_runtime ( bool $new_setting )";}
a:4:{i:0;s:14:"set_time_limit";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Limits the maximum execution time";i:3;s:32:"string sys_get_temp_dir ( void )";}
a:4:{i:0;s:14:"zend_logo_guid";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Gets the Zend guid";i:3;s:30:"string zend_logo_guid ( void )";}
a:4:{i:0;s:14:"zend_thread_id";i:1;s:5:"PHP 5";i:2;s:50:"Returns a unique identifier for the current thread";i:3;s:27:"int zend_thread_id ( void )";}
a:4:{i:0;s:12:"zend_version";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:"Gets the version of the current Zend engine";i:3;s:28:"string zend_version ( void )";}
a:4:{i:0;s:8:"overload";i:1;s:14:"PHP 4 >= 4.3.0";i:2;s:55:"Enable property and method call overloading for a class";i:3;s:36:"void overload ( string $class_name )";}
a:4:{i:0;s:5:"flush";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Flush the output buffer";i:3;s:26:"bool ob_end_clean ( void )";}
a:4:{i:0;s:12:"ob_get_clean";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:60:"Get current buffer contents and delete current output buffer";i:3;s:28:"string ob_get_clean ( void )";}
a:4:{i:0;s:15:"ob_get_contents";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Return the contents of the output buffer";i:3;s:31:"string ob_get_contents ( void )";}
a:4:{i:0;s:13:"ob_get_length";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:38:"Return the length of the output buffer";i:3;s:26:"int ob_get_length ( void )";}
a:4:{i:0;s:12:"ob_get_level";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:58:"Return the nesting level of the output buffering mechanism";i:3;s:50:"string ob_gzhandler ( string $buffer , int $mode )";}
a:4:{i:0;s:16:"ob_list_handlers";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:31:"List all output handlers in use";i:3;s:31:"array ob_list_handlers ( void )";}
a:4:{i:0;s:8:"ob_start";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Turn on output buffering";i:3;s:82:"bool ob_start ([ callback $output_callback [, int $chunk_size [, bool $erase ]]] )";}
a:4:{i:0;s:22:"output_add_rewrite_var";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:23:"Add URL rewriter values";i:3;s:60:"bool output_add_rewrite_var ( string $name , string $value )";}
a:4:{i:0;s:25:"output_reset_rewrite_vars";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:25:"Reset URL rewriter values";i:3;s:39:"bool output_reset_rewrite_vars ( void )";}
a:4:{i:0;s:24:"runkit_constant_redefine";i:1;s:20:"PECL runkit >= 0.7.0";i:2;s:38:" Redefine an already defined constant ";i:3;s:78:"bool runkit_function_add ( string $funcname , string $arglist , string $code )";}
a:4:{i:0;s:20:"runkit_function_copy";i:1;s:20:"PECL runkit >= 0.7.0";i:2;s:40:" Copy a function to a new function name ";i:3;s:67:"bool runkit_function_copy ( string $funcname , string $targetname )";}
a:4:{i:0;s:24:"runkit_function_redefine";i:1;s:20:"PECL runkit >= 0.7.0";i:2;s:57:" Replace a function definition with a new implementation ";i:3;s:83:"bool runkit_function_redefine ( string $funcname , string $arglist , string $code )";}
a:4:{i:0;s:22:"runkit_function_remove";i:1;s:20:"PECL runkit >= 0.7.0";i:2;s:30:" Remove a function definition ";i:3;s:48:"bool runkit_function_remove ( string $funcname )";}
a:4:{i:0;s:16:"runkit_lint_file";i:1;s:20:"PECL runkit >= 0.7.0";i:2;s:44:" Check the PHP syntax of the specified file ";i:3;s:131:"bool runkit_method_add ( string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC ] )";}
a:4:{i:0;s:18:"runkit_method_copy";i:1;s:20:"PECL runkit >= 0.7.0";i:2;s:37:"Copies a method from class to another";i:3;s:98:"bool runkit_method_copy ( string $dClass , string $dMethod , string $sClass [, string $sMethod ] )";}
a:4:{i:0;s:22:"runkit_method_redefine";i:1;s:20:"PECL runkit >= 0.7.0";i:2;s:48:"Dynamically changes the code of the given method";i:3;s:136:"bool runkit_method_redefine ( string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC ] )";}
a:4:{i:0;s:20:"runkit_method_remove";i:1;s:20:"PECL runkit >= 0.7.0";i:2;s:36:"Dynamically removes the given method";i:3;s:68:"bool runkit_method_remove ( string $classname , string $methodname )";}
a:4:{i:0;s:20:"runkit_method_rename";i:1;s:20:"PECL runkit >= 0.7.0";i:2;s:48:"Dynamically changes the name of the given method";i:3;s:86:"bool runkit_method_rename ( string $classname , string $methodname , string $newname )";}
a:4:{i:0;s:24:"runkit_return_value_used";i:1;s:20:"PECL runkit >= 0.8.0";i:2;s:61:"Determines if the current functions return value will be used";i:3;s:38:"bool runkit_return_value_used ( void )";}
a:4:{i:0;s:19:"runkit_superglobals";i:1;s:20:"PECL runkit >= 0.7.0";i:2;s:61:" Return numerically indexed array of registered superglobals ";i:3;s:34:"array runkit_superglobals ( void )";}
a:4:{i:0;s:24:"wincache_fcache_fileinfo";i:1;s:22:"PECL wincache >= 1.0.0";i:2;s:60:" Retrieves information about files cached in the file cache ";i:3;s:63:"array wincache_fcache_fileinfo ([ bool $summaryonly = false ] )";}
a:4:{i:0;s:23:"wincache_fcache_meminfo";i:1;s:22:"PECL wincache >= 1.0.0";i:2;s:53:" Retrieves information about file cache memory usage ";i:3;s:38:"array wincache_fcache_meminfo ( void )";}
a:4:{i:0;s:13:"wincache_lock";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:43:" Acquires an exclusive lock on a given key ";i:3;s:62:"bool wincache_lock ( string $key [, bool $isglobal = false ] )";}
a:4:{i:0;s:24:"wincache_ocache_fileinfo";i:1;s:22:"PECL wincache >= 1.0.0";i:2;s:62:" Retrieves information about files cached in the opcode cache ";i:3;s:63:"array wincache_ocache_fileinfo ([ bool $summaryonly = false ] )";}
a:4:{i:0;s:23:"wincache_ocache_meminfo";i:1;s:22:"PECL wincache >= 1.0.0";i:2;s:55:" Retrieves information about opcode cache memory usage ";i:3;s:38:"array wincache_ocache_meminfo ( void )";}
a:4:{i:0;s:27:"wincache_refresh_if_changed";i:1;s:22:"PECL wincache >= 1.0.0";i:2;s:50:" Refreshes the cache entries for the cached files ";i:3;s:52:"bool wincache_refresh_if_changed ([ array $files ] )";}
a:4:{i:0;s:24:"wincache_rplist_fileinfo";i:1;s:22:"PECL wincache >= 1.0.0";i:2;s:53:" Retrieves information about resolve file path cache ";i:3;s:39:"array wincache_rplist_fileinfo ( void )";}
a:4:{i:0;s:23:"wincache_rplist_meminfo";i:1;s:22:"PECL wincache >= 1.0.0";i:2;s:73:" Retrieves information about memory usage by the resolve file path cache ";i:3;s:38:"array wincache_rplist_meminfo ( void )";}
a:4:{i:0;s:20:"wincache_scache_info";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:63:" Retrieves information about files cached in the session cache ";i:3;s:59:"array wincache_scache_info ([ bool $summaryonly = false ] )";}
a:4:{i:0;s:23:"wincache_scache_meminfo";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:56:" Retrieves information about session cache memory usage ";i:3;s:38:"array wincache_scache_meminfo ( void )";}
a:4:{i:0;s:19:"wincache_ucache_add";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:84:" Adds a variable in user cache only if variable does not already exist in the cache ";i:3;s:72:"bool wincache_ucache_add ( mixed $key , mixed $value [, int $ttl = 0 ] )";}
a:4:{i:0;s:19:"wincache_ucache_cas";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:66:" Compares the variable with old value and assigns new value to it ";i:3;s:77:"mixed wincache_ucache_cas ( string $key , long $old_value , long $new_value )";}
a:4:{i:0;s:21:"wincache_ucache_clear";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:42:" Deletes entire content of the user cache ";i:3;s:35:"bool wincache_ucache_clear ( void )";}
a:4:{i:0;s:19:"wincache_ucache_dec";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:46:" Decrements the value associated with the key ";i:3;s:82:"mixed wincache_ucache_dec ( string $key [, long $dec_by = 1 [, bool &$success ]] )";}
a:4:{i:0;s:22:"wincache_ucache_delete";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:39:" Deletes variables from the user cache ";i:3;s:42:"bool wincache_ucache_delete ( mixed $key )";}
a:4:{i:0;s:22:"wincache_ucache_exists";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:47:" Checks if a variable exists in the user cache ";i:3;s:43:"bool wincache_ucache_exists ( string $key )";}
a:4:{i:0;s:19:"wincache_ucache_get";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:42:" Gets a variable stored in the user cache ";i:3;s:60:"mixed wincache_ucache_get ( mixed $key [, bool &$success ] )";}
a:4:{i:0;s:19:"wincache_ucache_inc";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:46:" Increments the value associated with the key ";i:3;s:82:"mixed wincache_ucache_inc ( string $key [, long $inc_by = 1 [, bool &$success ]] )";}
a:4:{i:0;s:20:"wincache_ucache_info";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:59:" Retrieves information about data stored in the user cache ";i:3;s:75:"array wincache_ucache_info ([ bool $summaryonly = false [, string $key ]] )";}
a:4:{i:0;s:23:"wincache_ucache_meminfo";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:53:" Retrieves information about user cache memory usage ";i:3;s:38:"array wincache_ucache_meminfo ( void )";}
a:4:{i:0;s:19:"wincache_ucache_set";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:91:" Adds a variable in user cache and overwrites a variable if it already exists in the cache ";i:3;s:72:"bool wincache_ucache_set ( mixed $key , mixed $value [, int $ttl = 0 ] )";}
a:4:{i:0;s:15:"wincache_unlock";i:1;s:22:"PECL wincache >= 1.1.0";i:2;s:43:" Releases an exclusive lock on a given key ";i:3;s:36:"bool wincache_unlock ( string $key )";}
a:4:{i:0;s:23:"id3_get_frame_long_name";i:1;s:15:"PECL id3 >= 0.2";i:2;s:35:"Get the long name of an ID3v2 frame";i:3;s:50:"string id3_get_frame_long_name ( string $frameId )";}
a:4:{i:0;s:24:"id3_get_frame_short_name";i:1;s:15:"PECL id3 >= 0.2";i:2;s:36:"Get the short name of an ID3v2 frame";i:3;s:51:"string id3_get_frame_short_name ( string $frameId )";}
a:4:{i:0;s:16:"id3_get_genre_id";i:1;s:15:"PECL id3 >= 0.1";i:2;s:22:"Get the id for a genre";i:3;s:38:"int id3_get_genre_id ( string $genre )";}
a:4:{i:0;s:18:"id3_get_genre_list";i:1;s:15:"PECL id3 >= 0.1";i:2;s:29:"Get all possible genre values";i:3;s:33:"array id3_get_genre_list ( void )";}
a:4:{i:0;s:18:"id3_get_genre_name";i:1;s:15:"PECL id3 >= 0.1";i:2;s:27:"Get the name for a genre id";i:3;s:43:"string id3_get_genre_name ( int $genre_id )";}
a:4:{i:0;s:11:"id3_get_tag";i:1;s:15:"PECL id3 >= 0.1";i:2;s:40:"Get all information stored in an ID3 tag";i:3;s:67:"array id3_get_tag ( string $filename [, int $version = ID3_BEST ] )";}
a:4:{i:0;s:15:"id3_get_version";i:1;s:15:"PECL id3 >= 0.1";i:2;s:25:"Get version of an ID3 tag";i:3;s:40:"int id3_get_version ( string $filename )";}
a:4:{i:0;s:14:"id3_remove_tag";i:1;s:15:"PECL id3 >= 0.1";i:2;s:26:"Remove an existing ID3 tag";i:3;s:69:"bool id3_remove_tag ( string $filename [, int $version = ID3_V1_0 ] )";}
a:4:{i:0;s:11:"id3_set_tag";i:1;s:15:"PECL id3 >= 0.1";i:2;s:39:"Update information stored in an ID3 tag";i:3;s:79:"bool id3_set_tag ( string $filename , array $tag [, int $version = ID3_V1_0 ] )";}
a:4:{i:0;s:30:"KTaglib_MPEG_File::__construct";i:1;s:5:"0.0.1";i:2;s:16:"Opens a new file";i:3;s:53:"KTaglib_MPEG_File::__construct() ( string $filename )";}
a:4:{i:0;s:37:"KTaglib_MPEG_File::getAudioProperties";i:1;s:5:"0.0.1";i:2;s:62:"Returns an object that provides access to the audio properties";i:3;s:83:"public KTaglib_ID3v2_Tag KTaglib_MPEG_File::getID3v2Tag ([ bool $create = false ] )";}
a:4:{i:0;s:40:"KTaglib_MPEG_AudioProperties::getBitrate";i:1;s:5:"0.0.1";i:2;s:36:"Returns the bitrate of the MPEG file";i:3;s:70:"public bool KTaglib_MPEG_AudioProperties::isProtectionEnabled ( void )";}
a:4:{i:0;s:21:"KTaglib_Tag::getAlbum";i:1;s:5:"0.0.1";i:2;s:39:"Returns the title string from a ID3 tag";i:3;s:41:"public bool KTaglib_Tag::isEmpty ( void )";}
a:4:{i:0;s:27:"KTaglib_ID3v2_Tag::addFrame";i:1;s:5:"0.0.1";i:2;s:28:"Add a frame to the ID3v2 tag";i:3;s:53:"public array KTaglib_ID3v2_Tag::getFrameList ( void )";}
a:4:{i:0;s:28:"KTaglib_ID3v2_Frame::getSize";i:1;s:5:"0.0.1";i:2;s:38:"Returns the size of the frame in bytes";i:3;s:54:"public string KTaglib_ID3v2_Frame::__toString ( void )";}
a:4:{i:0;s:50:"KTaglib_ID3v2_AttachedPictureFrame::getDescription";i:1;s:5:"0.0.1";i:2;s:56:"Returns a description for the picture in a picture frame";i:3;s:69:"public void KTaglib_ID3v2_AttachedPictureFrame::setType ( int $type )";}
a:4:{i:0;s:20:"openal_buffer_create";i:1;s:20:"PECL openal >= 0.1.0";i:2;s:24:" Generate OpenAL buffer ";i:3;s:69:"resource openal_stream ( resource $source , int $format , int $rate )";}
a:4:{i:0;s:22:"kadm5_create_principal";i:1;s:19:"PECL kadm5 >= 0.2.3";i:2;s:54:"Creates a kerberos principal with the given parameters";i:3;s:109:"bool kadm5_create_principal ( resource $handle , string $principal [, string $password [, array $options ]] )";}
a:4:{i:0;s:22:"kadm5_delete_principal";i:1;s:19:"PECL kadm5 >= 0.2.3";i:2;s:28:"Deletes a kerberos principal";i:3;s:68:"bool kadm5_delete_principal ( resource $handle , string $principal )";}
a:4:{i:0;s:13:"kadm5_destroy";i:1;s:19:"PECL kadm5 >= 0.2.3";i:2;s:76:"Closes the connection to the admin server and releases all related resources";i:3;s:45:"array kadm5_get_policies ( resource $handle )";}
a:4:{i:0;s:20:"kadm5_get_principals";i:1;s:19:"PECL kadm5 >= 0.2.3";i:2;s:46:"Gets all principals from the Kerberos database";i:3;s:47:"array kadm5_get_principals ( resource $handle )";}
a:4:{i:0;s:24:"kadm5_init_with_password";i:1;s:19:"PECL kadm5 >= 0.2.3";i:2;s:39:"Opens a connection to the KADM5 library";i:3;s:113:"resource kadm5_init_with_password ( string $admin_server , string $realm , string $principal , string $password )";}
a:4:{i:0;s:22:"kadm5_modify_principal";i:1;s:19:"PECL kadm5 >= 0.2.3";i:2;s:55:"Modifies a kerberos principal with the given parameters";i:3;s:85:"bool kadm5_modify_principal ( resource $handle , string $principal , array $options )";}
a:4:{i:0;s:16:"radius_acct_open";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:38:"Creates a Radius handle for accounting";i:3;s:34:"resource radius_acct_open ( void )";}
a:4:{i:0;s:17:"radius_add_server";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:13:"Adds a server";i:3;s:130:"bool radius_add_server ( resource $radius_handle , string $hostname , int $port , string $secret , int $timeout , int $max_tries )";}
a:4:{i:0;s:16:"radius_auth_open";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:42:"Creates a Radius handle for authentication";i:3;s:34:"resource radius_auth_open ( void )";}
a:4:{i:0;s:12:"radius_close";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:20:"Frees all ressources";i:3;s:61:"bool radius_config ( resource $radius_handle , string $file )";}
a:4:{i:0;s:21:"radius_create_request";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:43:"Create accounting or authentication request";i:3;s:66:"bool radius_create_request ( resource $radius_handle , int $type )";}
a:4:{i:0;s:14:"radius_cvt_int";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:28:"Converts raw data to integer";i:3;s:35:"int radius_cvt_int ( string $data )";}
a:4:{i:0;s:17:"radius_cvt_string";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:27:"Converts raw data to string";i:3;s:41:"string radius_cvt_string ( string $data )";}
a:4:{i:0;s:15:"radius_demangle";i:1;s:20:"PECL radius >= 1.2.0";i:2;s:14:"Demangles data";i:3;s:49:"mixed radius_get_attr ( resource $radius_handle )";}
a:4:{i:0;s:22:"radius_get_vendor_attr";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:36:"Extracts a vendor specific attribute";i:3;s:45:"array radius_get_vendor_attr ( string $data )";}
a:4:{i:0;s:15:"radius_put_attr";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:27:"Attaches a binary attribute";i:3;s:76:"bool radius_put_attr ( resource $radius_handle , int $type , string $value )";}
a:4:{i:0;s:14:"radius_put_int";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:29:"Attaches an integer attribute";i:3;s:72:"bool radius_put_int ( resource $radius_handle , int $type , int $value )";}
a:4:{i:0;s:17:"radius_put_string";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:27:"Attaches a string attribute";i:3;s:78:"bool radius_put_string ( resource $radius_handle , int $type , string $value )";}
a:4:{i:0;s:22:"radius_put_vendor_attr";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:43:"Attaches a vendor specific binary attribute";i:3;s:97:"bool radius_put_vendor_attr ( resource $radius_handle , int $vendor , int $type , string $value )";}
a:4:{i:0;s:21:"radius_put_vendor_int";i:1;s:20:"PECL radius >= 1.1.0";i:2;s:44:"Attaches a vendor specific integer attribute";i:3;s:50:"string radius_strerror ( resource $radius_handle )";}
a:4:{i:0;s:17:"cal_days_in_month";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:66:"Return the number of days in a month for a given year and calendar";i:3;s:64:"int cal_days_in_month ( int $calendar , int $month , int $year )";}
a:4:{i:0;s:11:"cal_from_jd";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:54:"Converts from Julian Day Count to a supported calendar";i:3;s:45:"array cal_from_jd ( int $jd , int $calendar )";}
a:4:{i:0;s:8:"cal_info";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:47:"Returns information about a particular calendar";i:3;s:40:"array cal_info ([ int $calendar = -1 ] )";}
a:4:{i:0;s:9:"cal_to_jd";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:54:"Converts from a supported calendar to Julian Day Count";i:3;s:32:"int easter_date ([ int $year ] )";}
a:4:{i:0;s:11:"easter_days";i:1;s:12:"PHP 4, PHP 5";i:2;s:72:"Get number of days after March 21 on which Easter falls for a given year";i:3;s:69:"int easter_days ([ int $year [, int $method = CAL_EASTER_DEFAULT ]] )";}
a:4:{i:0;s:10:"FrenchToJD";i:1;s:12:"PHP 4, PHP 5";i:2;s:73:"Converts a date from the French Republican Calendar to a Julian Day Count";i:3;s:52:"int frenchtojd ( int $month , int $day , int $year )";}
a:4:{i:0;s:13:"GregorianToJD";i:1;s:12:"PHP 4, PHP 5";i:2;s:45:"Converts a Gregorian date to Julian Day Count";i:3;s:55:"int gregoriantojd ( int $month , int $day , int $year )";}
a:4:{i:0;s:11:"JDDayOfWeek";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Returns the day of the week";i:3;s:83:"string jdtojewish ( int $juliandaycount [, bool $hebrew = false [, int $fl = 0 ]] )";}
a:4:{i:0;s:10:"JDToJulian";i:1;s:12:"PHP 4, PHP 5";i:2;s:53:"Converts a Julian Day Count to a Julian Calendar Date";i:3;s:43:"int unixtojd ([ int $timestamp = time() ] )";}
a:4:{i:0;s:21:"DateTime::__construct";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:27:"Returns new DateTime object";i:3;s:82:"DateTime date_create ([ string $time = "now" [, DateTimeZone $timezone = NULL ]] )";}
a:4:{i:0;s:26:"DateTime::createFromFormat";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:71:"Returns new DateTime object formatted according to the specified format";i:3;s:94:"DateTime date_create_from_format ( string $format , string $time [, DateTimeZone $timezone ] )";}
a:4:{i:0;s:14:"DateTime::diff";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:51:"Returns the difference between two DateTime objects";i:3;s:96:"DateInterval date_diff ( DateTime $datetime1 , DateTime $datetime2 [, bool $absolute = false ] )";}
a:4:{i:0;s:16:"DateTime::format";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:48:"Returns date formatted according to given format";i:3;s:56:"string date_format ( DateTime $object , string $format )";}
a:4:{i:0;s:23:"DateTime::getLastErrors";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:31:"Returns the warnings and errors";i:3;s:35:"array date_get_last_errors ( void )";}
a:4:{i:0;s:19:"DateTime::getOffset";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:27:"Returns the timezone offset";i:3;s:40:"int date_offset_get ( DateTime $object )";}
a:4:{i:0;s:22:"DateTime::getTimestamp";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:23:"Gets the Unix timestamp";i:3;s:43:"int date_timestamp_get ( DateTime $object )";}
a:4:{i:0;s:21:"DateTime::getTimezone";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:43:"Return time zone relative to given DateTime";i:3;s:51:"DateTimeZone date_timezone_get ( DateTime $object )";}
a:4:{i:0;s:16:"DateTime::modify";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:20:"Alters the timestamp";i:3;s:58:"DateTime date_modify ( DateTime $object , string $modify )";}
a:4:{i:0;s:21:"DateTime::__set_state";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:23:"The __set_state handler";i:3;s:79:"DateTime date_date_set ( DateTime $object , int $year , int $month , int $day )";}
a:4:{i:0;s:20:"DateTime::setISODate";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:17:"Sets the ISO date";i:3;s:88:"DateTime date_isodate_set ( DateTime $object , int $year , int $week [, int $day = 1 ] )";}
a:4:{i:0;s:17:"DateTime::setTime";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:13:"Sets the time";i:3;s:90:"DateTime date_time_set ( DateTime $object , int $hour , int $minute [, int $second = 0 ] )";}
a:4:{i:0;s:22:"DateTime::setTimestamp";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:49:"Sets the date and time based on an Unix timestamp";i:3;s:69:"DateTime date_timestamp_set ( DateTime $object , int $unixtimestamp )";}
a:4:{i:0;s:21:"DateTime::setTimezone";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:42:"Sets the time zone for the DateTime object";i:3;s:72:"DateTime date_timezone_set ( DateTime $object , DateTimeZone $timezone )";}
a:4:{i:0;s:18:"DateTime::__wakeup";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:20:"The __wakeup handler";i:3;s:43:"public DateTime DateTime::__wakeup ( void )";}
a:4:{i:0;s:25:"DateTimeZone::__construct";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:31:"Creates new DateTimeZone object";i:3;s:47:"DateTimeZone timezone_open ( string $timezone )";}
a:4:{i:0;s:25:"DateTimeZone::getLocation";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:43:"Returns location information for a timezone";i:3;s:36:"array timezone_location_get ( void )";}
a:4:{i:0;s:21:"DateTimeZone::getName";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:32:"Returns the name of the timezone";i:3;s:69:"int timezone_offset_get ( DateTimeZone $object , DateTime $datetime )";}
a:4:{i:0;s:28:"DateTimeZone::getTransitions";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:40:"Returns all transitions for the timezone";i:3;s:104:"array timezone_transitions_get ( DateTimeZone $object [, int $timestamp_begin [, int $timestamp_end ]] )";}
a:4:{i:0;s:29:"DateTimeZone::listIdentifiers";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:61:"Returns numerically index array with all timezone identifiers";i:3;s:95:"array timezone_identifiers_list ([ int $what = DateTimeZone::ALL [, string $country = NULL ]] )";}
a:4:{i:0;s:25:"DateInterval::__construct";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:31:"Creates new DateInterval object";i:3;s:60:"public DateInterval::__construct() ( string $interval_spec )";}
a:4:{i:0;s:34:"DateInterval::createFromDateString";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:60:"Sets up a DateInterval from the relative parts of the string";i:3;s:53:"public string DateInterval::format ( string $format )";}
a:4:{i:0;s:23:"DatePeriod::__construct";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:29:"Creates new DatePeriod object";i:3;s:69:"public DatePeriod::__construct() ( string $isostr [, int $options ] )";}
a:4:{i:0;s:9:"checkdate";i:1;s:12:"PHP 4, PHP 5";i:2;s:25:"Validate a Gregorian date";i:3;s:52:"bool checkdate ( int $month , int $day , int $year )";}
a:4:{i:0;s:22:"date_parse_from_format";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:25:"Get info about given date";i:3;s:62:"array date_parse_from_format ( string $format , string $date )";}
a:4:{i:0;s:10:"date_parse";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:61:"Returns associative array with detailed info about given date";i:3;s:33:"array date_parse ( string $date )";}
a:4:{i:0;s:12:"date_sunrise";i:1;s:5:"PHP 5";i:2;s:52:"Returns time of sunrise for a given day and location";i:3;s:265:"mixed date_sunrise ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get("date.default_latitude") [, float $longitude = ini_get("date.default_longitude") [, float $zenith = ini_get("date.sunrise_zenith") [, float $gmt_offset = 0 ]]]]] )";}
a:4:{i:0;s:11:"date_sunset";i:1;s:5:"PHP 5";i:2;s:53:" Returns time of sunset for a given day and location ";i:3;s:263:"mixed date_sunset ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get("date.default_latitude") [, float $longitude = ini_get("date.default_longitude") [, float $zenith = ini_get("date.sunset_zenith") [, float $gmt_offset = 0 ]]]]] )";}
a:4:{i:0;s:12:"gettimeofday";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Get current time";i:3;s:44:"mixed gettimeofday ([ bool $return_float ] )";}
a:4:{i:0;s:8:"gmmktime";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Get Unix timestamp for a GMT date";i:3;s:208:"int gmmktime ([ int $hour = gmdate("H") [, int $minute = gmdate("i") [, int $second = gmdate("s") [, int $month = gmdate("n") [, int $day = gmdate("j") [, int $year = gmdate("Y") [, int $is_dst = -1 ]]]]]]] )";}
a:4:{i:0;s:9:"localtime";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Get the local time";i:3;s:79:"array localtime ([ int $timestamp = time() [, bool $is_associative = false ]] )";}
a:4:{i:0;s:9:"microtime";i:1;s:12:"PHP 4, PHP 5";i:2;s:47:"Return current Unix timestamp with microseconds";i:3;s:41:"mixed microtime ([ bool $get_as_float ] )";}
a:4:{i:0;s:6:"mktime";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Get Unix timestamp for a date";i:3;s:194:"int mktime ([ int $hour = date("H") [, int $minute = date("i") [, int $second = date("s") [, int $month = date("n") [, int $day = date("j") [, int $year = date("Y") [, int $is_dst = -1 ]]]]]]] )";}
a:4:{i:0;s:9:"strtotime";i:1;s:12:"PHP 4, PHP 5";i:2;s:74:"Parse about any English textual datetime description into a Unix timestamp";i:3;s:44:"int strtotime ( string $time [, int $now ] )";}
a:4:{i:0;s:4:"time";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Return current Unix timestamp";i:3;s:17:"int time ( void )";}
a:4:{i:0;s:23:"timezone_name_from_abbr";i:1;s:14:"PHP 5 >= 5.1.3";i:2;s:43:"Returns the timezone name from abbreviation";i:3;s:92:"string timezone_name_from_abbr ( string $abbr [, int $gmtOffset = -1 [, int $isdst = -1 ]] )";}
a:4:{i:0;s:20:"timezone_version_get";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:36:" Gets the version of the timezonedb ";i:3;s:36:"string timezone_version_get ( void )";}
a:4:{i:0;s:9:"newt_bell";i:1;s:16:"PECL newt >= 0.1";i:2;s:27:"Send a beep to the terminal";i:3;s:60:"resource newt_button ( int $left , int $top , string $text )";}
a:4:{i:0;s:20:"newt_centered_window";i:1;s:16:"PECL newt >= 0.1";i:2;s:44:"Open a centered window of the specified size";i:3;s:35:"void newt_clear_key_buffer ( void )";}
a:4:{i:0;s:19:"newt_draw_root_text";i:1;s:16:"PECL newt >= 0.1";i:2;s:50:"Displays the string text at the position indicated";i:3;s:64:"void newt_draw_root_text ( int $left , int $top , string $text )";}
a:4:{i:0;s:13:"newt_finished";i:1;s:16:"PECL newt >= 0.1";i:2;s:28:"Uninitializes newt interface";i:3;s:69:"void newt_form_add_component ( resource $form , resource $component )";}
a:4:{i:0;s:24:"newt_form_add_components";i:1;s:16:"PECL newt >= 0.1";i:2;s:34:"Add several components to the form";i:3;s:68:"void newt_form_add_components ( resource $form , array $components )";}
a:4:{i:0;s:17:"newt_form_destroy";i:1;s:16:"PECL newt >= 0.1";i:2;s:15:"Destroys a form";i:3;s:76:"resource newt_form ([ resource $vert_bar [, string $help [, int $flags ]]] )";}
a:4:{i:0;s:20:"newt_get_screen_size";i:1;s:16:"PECL newt >= 0.1";i:2;s:68:"Fills in the passed references with the current size of the terminal";i:3;s:53:"void newt_get_screen_size ( int &$cols , int &$rows )";}
a:4:{i:0;s:9:"newt_init";i:1;s:16:"PECL newt >= 0.1";i:2;s:15:"Initialize newt";i:3;s:67:"void newt_set_suspend_callback ( callback $function , mixed $data )";}
a:4:{i:0;s:12:"newt_suspend";i:1;s:16:"PECL newt >= 0.1";i:2;s:54:"Tells newt to return the terminal to its initial state";i:3;s:0:"";}
a:4:{i:0;s:13:"ncurses_addch";i:1;s:52:"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0";i:2;s:53:"Add character at current position and advance cursor ";i:3;s:138:"int ncurses_border ( int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner )";}
a:4:{i:0;s:20:"ncurses_bottom_panel";i:1;s:52:"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0";i:2;s:48:"Moves a visible panel to the bottom of the stack";i:3;s:35:"int ncurses_color_set ( int $pair )";}
a:4:{i:0;s:16:"ncurses_curs_set";i:1;s:52:"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0";i:2;s:17:"Set cursor state ";i:3;s:40:"bool ncurses_getmouse ( array &$mevent )";}
a:4:{i:0;s:13:"ncurses_getyx";i:1;s:52:"PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0";i:2;s:48:"Returns the current cursor position for a window";i:3;s:32:"bool ncurses_has_colors ( void )";}
a:4:{i:0;s:15:"ncurses_has_key";i:1;s:52:"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0";i:2;s:58:"Check for presence of a function key on terminal keyboard ";i:3;s:55:"int ncurses_init_pair ( int $pair , int $fg , int $bg )";}
a:4:{i:0;s:12:"ncurses_init";i:1;s:52:"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0";i:2;s:18:"Initialize ncurses";i:3;s:54:"int ncurses_mousemask ( int $newmask , int &$oldmask )";}
a:4:{i:0;s:12:"ncurses_move";i:1;s:52:"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0";i:2;s:21:"Move output position ";i:3;s:32:"int ncurses_start_color ( void )";}
a:4:{i:0;s:17:"ncurses_termattrs";i:1;s:52:"PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0";i:2;s:66:"Returns a logical OR of all attribute flags supported by terminal ";i:3;s:64:"int ncurses_wvline ( resource $window , int $charattr , int $n )";}
a:4:{i:0;s:20:"readline_add_history";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Adds a line to the history";i:3;s:78:"bool readline_callback_handler_install ( string $prompt , callback $callback )";}
a:4:{i:0;s:32:"readline_callback_handler_remove";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:78:"Removes a previously installed callback handler and restores terminal settings";i:3;s:37:"string readline ([ string $prompt ] )";}
a:4:{i:0;s:7:"bzclose";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:18:"Close a bzip2 file";i:3;s:83:"mixed bzcompress ( string $source [, int $blocksize = 4 [, int $workfactor = 0 ]] )";}
a:4:{i:0;s:12:"bzdecompress";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:31:"Decompresses bzip2 encoded data";i:3;s:57:"mixed bzdecompress ( string $source [, int $small = 0 ] )";}
a:4:{i:0;s:7:"bzerrno";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:28:"Returns a bzip2 error number";i:3;s:30:"array bzerror ( resource $bz )";}
a:4:{i:0;s:8:"bzerrstr";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:28:"Returns a bzip2 error string";i:3;s:51:"resource bzopen ( string $filename , string $mode )";}
a:4:{i:0;s:6:"bzread";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:27:"Binary safe bzip2 file read";i:3;s:54:"string bzread ( resource $bz [, int $length = 1024 ] )";}
a:4:{i:0;s:7:"bzwrite";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:28:"Binary safe bzip2 file write";i:3;s:60:"int bzwrite ( resource $bz , string $data [, int $length ] )";}
a:4:{i:0;s:12:"lzf_compress";i:1;s:17:"PECL lzf >= 0.1.0";i:2;s:17:" LZF compression ";i:3;s:30:"int lzf_optimized_for ( void )";}
a:4:{i:0;s:17:"Phar::addEmptyDir";i:1;s:7:"Unknown";i:2;s:42:"Add an empty directory to the phar archive";i:3;s:42:"void Phar::addEmptyDir ( string $dirname )";}
a:4:{i:0;s:13:"Phar::addFile";i:1;s:7:"Unknown";i:2;s:50:"Add a file from the filesystem to the phar archive";i:3;s:58:"void Phar::addFile ( string $file [, string $localname ] )";}
a:4:{i:0;s:19:"Phar::addFromString";i:1;s:7:"Unknown";i:2;s:50:"Add a file from the filesystem to the phar archive";i:3;s:65:"void Phar::addFromString ( string $localname , string $contents )";}
a:4:{i:0;s:16:"Phar::apiVersion";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:23:"Returns the api version";i:3;s:32:"string Phar::apiVersion ( void )";}
a:4:{i:0;s:24:"Phar::buildFromDirectory";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:59:"Construct a phar archive from the files within a directory.";i:3;s:70:"array Phar::buildFromDirectory ( string $base_dir [, string $regex ] )";}
a:4:{i:0;s:23:"Phar::buildFromIterator";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:42:"Construct a phar archive from an iterator.";i:3;s:76:"array Phar::buildFromIterator ( Iterator $iter [, string $base_directory ] )";}
a:4:{i:0;s:17:"Phar::canCompress";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:78:"Returns whether phar extension supports compression using either zlib or bzip2";i:3;s:43:"bool Phar::canCompress ([ int $type = 0 ] )";}
a:4:{i:0;s:14:"Phar::canWrite";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:66:"Returns whether phar extension supports writing and creating phars";i:3;s:28:"bool Phar::canWrite ( void )";}
a:4:{i:0;s:14:"Phar::compress";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:66:"Compresses the entire Phar archive using Gzip or Bzip2 compression";i:3;s:65:"object Phar::compress ( int $compression [, string $extension ] )";}
a:4:{i:0;s:27:"Phar::compressAllFilesBZIP2";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:72:"Compresses all files in the current Phar archive using Bzip2 compression";i:3;s:41:"bool Phar::compressAllFilesBZIP2 ( void )";}
a:4:{i:0;s:24:"Phar::compressAllFilesGZ";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:71:"Compresses all files in the current Phar archive using Gzip compression";i:3;s:38:"bool Phar::compressAllFilesGZ ( void )";}
a:4:{i:0;s:19:"Phar::compressFiles";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:48:"Compresses all files in the current Phar archive";i:3;s:45:"void Phar::compressFiles ( int $compression )";}
a:4:{i:0;s:17:"Phar::__construct";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:31:"Construct a Phar archive object";i:3;s:74:"void Phar::__construct ( string $fname [, int $flags [, string $alias ]] )";}
a:4:{i:0;s:25:"Phar::convertToExecutable";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:69:"Convert a phar archive to another executable phar archive file format";i:3;s:112:"Phar Phar::convertToExecutable ([ int $format = 9021976 [, int $compression = 9021976 [, string $extension ]]] )";}
a:4:{i:0;s:10:"Phar::copy";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:76:"Copy a file internal to the phar archive to another new file within the phar";i:3;s:53:"bool Phar::copy ( string $oldfile , string $newfile )";}
a:4:{i:0;s:16:"Phar::decompress";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:36:"Decompresses the entire Phar archive";i:3;s:48:"object Phar::decompress ([ string $extension ] )";}
a:4:{i:0;s:21:"Phar::decompressFiles";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:50:"Decompresses all files in the current Phar archive";i:3;s:35:"bool Phar::decompressFiles ( void )";}
a:4:{i:0;s:17:"Phar::delMetadata";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.2.0";i:2;s:39:"Deletes the global metadata of the phar";i:3;s:31:"bool Phar::delMetadata ( void )";}
a:4:{i:0;s:12:"Phar::delete";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:35:"Delete a file within a phar archive";i:3;s:35:"bool Phar::delete ( string $entry )";}
a:4:{i:0;s:15:"Phar::extractTo";i:1;s:7:"Unknown";i:2;s:53:"Extract the contents of a phar archive to a directory";i:3;s:0:"";}
a:4:{i:0;s:17:"Phar::getModified";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:32:"Return whether phar was modified";i:3;s:29:"string Phar::getStub ( void )";}
a:4:{i:0;s:29:"Phar::getSupportedCompression";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.2.0";i:2;s:48:"Return array of supported compression algorithms";i:3;s:31:"bool Phar::hasMetadata ( void )";}
a:4:{i:0;s:25:"Phar::isValidPharFilename";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.2.0";i:2;s:59:"Returns whether the given filename is a valid phar filename";i:3;s:59:"bool Phar::loadPhar ( string $filename [, string $alias ] )";}
a:4:{i:0;s:11:"Phar::mount";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:76:"Mount an external path or file to a virtual location within the phar archive";i:3;s:60:"void Phar::mount ( string $pharpath , string $externalpath )";}
a:4:{i:0;s:18:"Phar::offsetExists";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:44:"determines whether a file exists in the phar";i:3;s:42:"bool Phar::offsetExists ( string $offset )";}
a:4:{i:0;s:15:"Phar::offsetSet";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:65:"set the contents of an internal file to those of an external file";i:3;s:55:"void Phar::offsetSet ( string $offset , string $value )";}
a:4:{i:0;s:17:"Phar::offsetUnset";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:25:"remove a file from a phar";i:3;s:41:"bool Phar::offsetUnset ( string $offset )";}
a:4:{i:0;s:13:"Phar::running";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:86:"Returns the full path on disk or full phar URL to the currently executing Phar archive";i:3;s:48:"string Phar::running ([ bool $retphar = true ] )";}
a:4:{i:0;s:14:"Phar::setAlias";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.2.1";i:2;s:34:"Set the alias for the Phar archive";i:3;s:37:"bool Phar::setAlias ( string $alias )";}
a:4:{i:0;s:20:"Phar::setDefaultStub";i:1;s:7:"Unknown";i:2;s:84:"Used to set the PHP loader or bootstrap stub of a Phar archive to the default loader";i:3;s:67:"bool Phar::setDefaultStub ([ string $index [, string $webindex ]] )";}
a:4:{i:0;s:27:"Phar::setSignatureAlgorithm";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.1.0";i:2;s:52:"set the signature algorithm for a phar and apply it.";i:3;s:73:"void Phar::setSignatureAlgorithm ( int $sigtype [, string $privatekey ] )";}
a:4:{i:0;s:13:"Phar::setStub";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:62:"Used to set the PHP loader or bootstrap stub of a Phar archive";i:3;s:35:"bool Phar::setStub ( string $stub )";}
a:4:{i:0;s:24:"Phar::uncompressAllFiles";i:1;s:17:"PECL phar < 2.0.0";i:2;s:50:"Uncompresses all files in the current Phar archive";i:3;s:38:"bool Phar::uncompressAllFiles ( void )";}
a:4:{i:0;s:19:"Phar::unlinkArchive";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:58:"Completely remove a phar archive from disk and from memory";i:3;s:44:"bool Phar::unlinkArchive ( string $archive )";}
a:4:{i:0;s:27:"PharData::buildFromIterator";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:48:"Construct a tar or zip archive from an iterator.";i:3;s:80:"array PharData::buildFromIterator ( Iterator $iter [, string $base_directory ] )";}
a:4:{i:0;s:14:"PharData::copy";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:76:"Copy a file internal to the phar archive to another new file within the phar";i:3;s:57:"bool PharData::copy ( string $oldfile , string $newfile )";}
a:4:{i:0;s:20:"PharData::decompress";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:36:"Decompresses the entire Phar archive";i:3;s:52:"object PharData::decompress ([ string $extension ] )";}
a:4:{i:0;s:25:"PharData::decompressFiles";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:49:"Decompresses all files in the current zip archive";i:3;s:39:"bool PharData::decompressFiles ( void )";}
a:4:{i:0;s:21:"PharData::delMetadata";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:44:"Deletes the global metadata of a zip archive";i:3;s:34:"int PharData::delMetadata ( void )";}
a:4:{i:0;s:27:"Phar::setSignatureAlgorithm";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.1.0";i:2;s:56:"set the signature algorithm for a phar and apply it. The";i:3;s:39:"void PharData::setStub ( string $stub )";}
a:4:{i:0;s:22:"PharFileInfo::compress";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:71:"Compresses the current Phar entry with either zlib or bzip2 compression";i:3;s:48:"bool PharFileInfo::compress ( int $compression )";}
a:4:{i:0;s:25:"PharFileInfo::__construct";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:29:"Construct a Phar entry object";i:3;s:48:"void PharFileInfo::__construct ( string $entry )";}
a:4:{i:0;s:24:"PharFileInfo::decompress";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 2.0.0";i:2;s:51:"Decompresses the current Phar entry within the phar";i:3;s:38:"bool PharFileInfo::decompress ( void )";}
a:4:{i:0;s:25:"PharFileInfo::delMetadata";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.2.0";i:2;s:33:"Deletes the metadata of the entry";i:3;s:39:"bool PharFileInfo::delMetadata ( void )";}
a:4:{i:0;s:22:"PharFileInfo::getCRC32";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:70:"Returns CRC32 code or throws an exception if CRC has not been verified";i:3;s:35:"int PharFileInfo::getCRC32 ( void )";}
a:4:{i:0;s:26:"PharFileInfo::getPharFlags";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:33:"Returns the Phar file entry flags";i:3;s:39:"int PharFileInfo::getPharFlags ( void )";}
a:4:{i:0;s:25:"PharFileInfo::hasMetadata";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.2.0";i:2;s:33:"Returns the metadata of the entry";i:3;s:40:"bool PharFileInfo::isCRCChecked ( void )";}
a:4:{i:0;s:26:"PharFileInfo::isCompressed";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:39:"Returns whether the entry is compressed";i:3;s:70:"bool PharFileInfo::isCompressed ([ int $compression_type = 9021976 ] )";}
a:4:{i:0;s:31:"PharFileInfo::isCompressedBZIP2";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:51:"Returns whether the entry is compressed using bzip2";i:3;s:45:"bool PharFileInfo::isCompressedBZIP2 ( void )";}
a:4:{i:0;s:28:"PharFileInfo::isCompressedGZ";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:48:"Returns whether the entry is compressed using gz";i:3;s:42:"bool PharFileInfo::isCompressedGZ ( void )";}
a:4:{i:0;s:32:"PharFileInfo::setCompressedBZIP2";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:73:"Compresses the current Phar entry within the phar using Bzip2 compression";i:3;s:46:"bool PharFileInfo::setCompressedBZIP2 ( void )";}
a:4:{i:0;s:29:"PharFileInfo::setCompressedGZ";i:1;s:32:"PHP >= 5.3.0, PECL phar >= 1.0.0";i:2;s:70:"Compresses the current Phar entry within the phar using gz compression";i:3;s:43:"bool PharFileInfo::setCompressedGZ ( void )";}
a:4:{i:0;s:23:"rar_wrapper_cache_stats";i:1;s:17:"PECL rar >= 3.0.0";i:2;s:41:"Cache hits and misses for the URL wrapper";i:3;s:39:"string rar_wrapper_cache_stats ( void )";}
a:4:{i:0;s:26:"RarArchive::setAllowBroken";i:1;s:17:"PECL rar >= 3.0.0";i:2;s:42:"Whether opening broken archives is allowed";i:3;s:70:"bool rar_allow_broken_set ( RarArchive $rarfile , bool $allow_broken )";}
a:4:{i:0;s:22:"RarArchive::__toString";i:1;s:17:"PECL rar >= 2.0.0";i:2;s:23:"Get text representation";i:3;s:43:"public void RarArchive::__toString ( void )";}
a:4:{i:0;s:17:"RarEntry::extract";i:1;s:15:"PECL rar >= 0.1";i:2;s:30:"Extract entry from the archive";i:3;s:142:"public bool RarEntry::extract ( string $dir [, string $filepath = &#039;&#039; [, string $password = NULL [, bool $extended_data = false ]]] )";}
a:4:{i:0;s:17:"RarEntry::getAttr";i:1;s:15:"PECL rar >= 0.1";i:2;s:27:"Get attributes of the entry";i:3;s:37:"public int RarEntry::getAttr ( void )";}
a:4:{i:0;s:16:"RarEntry::getCrc";i:1;s:15:"PECL rar >= 0.1";i:2;s:20:"Get CRC of the entry";i:3;s:39:"public int RarEntry::getHostOs ( void )";}
a:4:{i:0;s:19:"RarEntry::getMethod";i:1;s:15:"PECL rar >= 0.1";i:2;s:28:"Get pack method of the entry";i:3;s:39:"public int RarEntry::getMethod ( void )";}
a:4:{i:0;s:17:"RarEntry::getName";i:1;s:15:"PECL rar >= 0.1";i:2;s:21:"Get name of the entry";i:3;s:40:"public string RarEntry::getName ( void )";}
a:4:{i:0;s:23:"RarEntry::getPackedSize";i:1;s:15:"PECL rar >= 0.1";i:2;s:28:"Get packed size of the entry";i:3;s:43:"public int RarEntry::getPackedSize ( void )";}
a:4:{i:0;s:19:"RarEntry::getStream";i:1;s:17:"PECL rar >= 2.0.0";i:2;s:26:"Get file handler for entry";i:3;s:59:"public resource RarEntry::getStream ([ string $password ] )";}
a:4:{i:0;s:25:"RarEntry::getUnpackedSize";i:1;s:15:"PECL rar >= 0.1";i:2;s:30:"Get unpacked size of the entry";i:3;s:45:"public int RarEntry::getUnpackedSize ( void )";}
a:4:{i:0;s:20:"RarEntry::getVersion";i:1;s:15:"PECL rar >= 0.1";i:2;s:63:"Get minimum version of RAR program required to unpack the entry";i:3;s:40:"public int RarEntry::getVersion ( void )";}
a:4:{i:0;s:21:"RarEntry::isDirectory";i:1;s:17:"PECL rar >= 2.0.0";i:2;s:44:"Test whether an entry represents a directory";i:3;s:42:"public bool RarEntry::isDirectory ( void )";}
a:4:{i:0;s:21:"RarEntry::isEncrypted";i:1;s:17:"PECL rar >= 2.0.0";i:2;s:34:"Test whether an entry is encrypted";i:3;s:43:"public string RarEntry::__toString ( void )";}
a:4:{i:0;s:31:"RarException::isUsingExceptions";i:1;s:17:"PECL rar >= 2.0.0";i:2;s:54:"Check whether error handling with exceptions is in use";i:3;s:59:"public static bool RarException::isUsingExceptions ( void )";}
a:4:{i:0;s:32:"RarException::setUsingExceptions";i:1;s:17:"PECL rar >= 2.0.0";i:2;s:54:"Activate and deactivate error handling with exceptions";i:3;s:78:"public static void RarException::setUsingExceptions ( bool $using_exceptions )";}
a:4:{i:0;s:23:"ZipArchive::addEmptyDir";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.8.0";i:2;s:19:"Add a new directory";i:3;s:48:"bool ZipArchive::addEmptyDir ( string $dirname )";}
a:4:{i:0;s:19:"ZipArchive::addFile";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.1.0";i:2;s:48:"Adds a file to a ZIP archive from the given path";i:3;s:68:"bool ZipArchive::addFile ( string $filename [, string $localname ] )";}
a:4:{i:0;s:25:"ZipArchive::addFromString";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.1.0";i:2;s:46:"Add a file to a ZIP archive using its contents";i:3;s:71:"bool ZipArchive::addFromString ( string $localname , string $contents )";}
a:4:{i:0;s:23:"ZipArchive::deleteIndex";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.5.0";i:2;s:46:"delete an entry in the archive using its index";i:3;s:43:"bool ZipArchive::deleteIndex ( int $index )";}
a:4:{i:0;s:22:"ZipArchive::deleteName";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.5.0";i:2;s:45:"delete an entry in the archive using its name";i:3;s:44:"bool ZipArchive::deleteName ( string $name )";}
a:4:{i:0;s:21:"ZipArchive::extractTo";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.1.0";i:2;s:28:"Extract the archive contents";i:3;s:70:"bool ZipArchive::extractTo ( string $destination [, mixed $entries ] )";}
a:4:{i:0;s:29:"ZipArchive::getArchiveComment";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.1.0";i:2;s:31:"Returns the Zip archive comment";i:3;s:45:"string ZipArchive::getArchiveComment ( void )";}
a:4:{i:0;s:27:"ZipArchive::getCommentIndex";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.4.0";i:2;s:53:"Returns the comment of an entry using the entry index";i:3;s:65:"string ZipArchive::getCommentIndex ( int $index [, int $flags ] )";}
a:4:{i:0;s:26:"ZipArchive::getCommentName";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.4.0";i:2;s:52:"Returns the comment of an entry using the entry name";i:3;s:66:"string ZipArchive::getCommentName ( string $name [, int $flags ] )";}
a:4:{i:0;s:24:"ZipArchive::getFromIndex";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.3.0";i:2;s:42:"Returns the entry contents using its index";i:3;s:61:"mixed ZipArchive::getFromIndex ( int $index [, int $flags ] )";}
a:4:{i:0;s:23:"ZipArchive::getFromName";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.1.0";i:2;s:41:"Returns the entry contents using its name";i:3;s:62:"mixed ZipArchive::getFromName ( string $name [, int $flags ] )";}
a:4:{i:0;s:24:"ZipArchive::getNameIndex";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.5.0";i:2;s:44:"Returns the name of an entry using its index";i:3;s:47:"resource ZipArchive::getStream ( string $name )";}
a:4:{i:0;s:22:"ZipArchive::locateName";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.5.0";i:2;s:45:"Returns the index of the entry in the archive";i:3;s:61:"mixed ZipArchive::locateName ( string $name [, int $flags ] )";}
a:4:{i:0;s:16:"ZipArchive::open";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.1.0";i:2;s:23:"Open a ZIP file archive";i:3;s:59:"mixed ZipArchive::open ( string $filename [, int $flags ] )";}
a:4:{i:0;s:23:"ZipArchive::renameIndex";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.5.0";i:2;s:37:"Renames an entry defined by its index";i:3;s:61:"bool ZipArchive::renameIndex ( int $index , string $newname )";}
a:4:{i:0;s:22:"ZipArchive::renameName";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.5.0";i:2;s:36:"Renames an entry defined by its name";i:3;s:62:"bool ZipArchive::renameName ( string $name , string $newname )";}
a:4:{i:0;s:29:"ZipArchive::setArchiveComment";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.4.0";i:2;s:32:"Set the comment of a ZIP archive";i:3;s:55:"mixed ZipArchive::setArchiveComment ( string $comment )";}
a:4:{i:0;s:27:"ZipArchive::setCommentIndex";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.4.0";i:2;s:48:"Set the comment of an entry defined by its index";i:3;s:66:"mixed ZipArchive::setCommentIndex ( int $index , string $comment )";}
a:4:{i:0;s:26:"ZipArchive::setCommentName";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.4.0";i:2;s:47:"Set the comment of an entry defined by its name";i:3;s:67:"mixed ZipArchive::setCommentName ( string $name , string $comment )";}
a:4:{i:0;s:21:"ZipArchive::statIndex";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.1.0";i:2;s:49:"Get the details of an entry defined by its index.";i:3;s:58:"mixed ZipArchive::statIndex ( int $index [, int $flags ] )";}
a:4:{i:0;s:20:"ZipArchive::statName";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.5.0";i:2;s:48:"Get the details of an entry defined by its name.";i:3;s:57:"mixed ZipArchive::statName ( name $name [, int $flags ] )";}
a:4:{i:0;s:23:"ZipArchive::unchangeAll";i:1;s:33:"PHP 5 >= 5.2.0, PECL zip >= 1.1.0";i:2;s:36:"Undo all changes done in the archive";i:3;s:47:"mixed ZipArchive::unchangeName ( string $name )";}
a:4:{i:0;s:9:"zip_close";i:1;s:49:"PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0";i:2;s:24:"Close a ZIP file archive";i:3;s:32:"mixed zip_read ( resource $zip )";}
a:4:{i:0;s:10:"gzcompress";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:17:"Compress a string";i:3;s:55:"string gzcompress ( string $data [, int $level = -1 ] )";}
a:4:{i:0;s:8:"gzdecode";i:1;s:54:"No version information available, might only be in SVN";i:2;s:32:"Decodes a gzip compressed string";i:3;s:54:"string gzdeflate ( string $data [, int $level = -1 ] )";}
a:4:{i:0;s:8:"gzencode";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:31:"Create a gzip compressed string";i:3;s:89:"string gzencode ( string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP ]] )";}
a:4:{i:0;s:6:"gzgets";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Get line from file pointer";i:3;s:44:"string gzgets ( resource $zp , int $length )";}
a:4:{i:0;s:9:"gzinflate";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:25:"Inflate a deflated string";i:3;s:54:"string gzinflate ( string $data [, int $length = 0 ] )";}
a:4:{i:0;s:12:"gzuncompress";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:30:"Uncompress a compressed string";i:3;s:57:"string gzuncompress ( string $data [, int $length = 0 ] )";}
a:4:{i:0;s:20:"zlib_get_coding_type";i:1;s:21:"PHP 4 >= 4.3.2, PHP 5";i:2;s:51:"Returns the coding type used for output compression";i:3;s:36:"string zlib_get_coding_type ( void )";}
a:4:{i:0;s:13:"m_checkstatus";i:1;s:50:"PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0";i:2;s:43:"Check to see if a transaction has completed";i:3;s:49:"bool m_verifysslcert ( resource $conn , int $tf )";}
a:4:{i:0;s:11:"crack_check";i:1;s:17:"PECL crack >= 0.1";i:2;s:49:"Performs an obscure check with the given password";i:3;s:46:"resource crack_opendict ( string $dictionary )";}
a:4:{i:0;s:10:"hash_algos";i:1;s:32:"PHP 5 >= 5.1.2, PECL hash >= 1.1";i:2;s:46:"Return a list of registered hashing algorithms";i:3;s:25:"array hash_algos ( void )";}
a:4:{i:0;s:9:"hash_copy";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:20:"Copy hashing context";i:3;s:40:"resource hash_copy ( resource $context )";}
a:4:{i:0;s:9:"hash_file";i:1;s:32:"PHP 5 >= 5.1.2, PECL hash >= 1.1";i:2;s:56:"Generate a hash value using the contents of a given file";i:3;s:82:"string hash_file ( string $algo , string $filename [, bool $raw_output = false ] )";}
a:4:{i:0;s:10:"hash_final";i:1;s:32:"PHP 5 >= 5.1.2, PECL hash >= 1.1";i:2;s:56:"Finalize an incremental hash and return resulting digest";i:3;s:69:"string hash_final ( resource $context [, bool $raw_output = false ] )";}
a:4:{i:0;s:14:"hash_hmac_file";i:1;s:32:"PHP 5 >= 5.1.2, PECL hash >= 1.1";i:2;s:82:"Generate a keyed hash value using the HMAC method and the contents of a given file";i:3;s:101:"string hash_hmac_file ( string $algo , string $filename , string $key [, bool $raw_output = false ] )";}
a:4:{i:0;s:9:"hash_hmac";i:1;s:32:"PHP 5 >= 5.1.2, PECL hash >= 1.1";i:2;s:49:"Generate a keyed hash value using the HMAC method";i:3;s:92:"string hash_hmac ( string $algo , string $data , string $key [, bool $raw_output = false ] )";}
a:4:{i:0;s:9:"hash_init";i:1;s:32:"PHP 5 >= 5.1.2, PECL hash >= 1.1";i:2;s:41:"Initialize an incremental hashing context";i:3;s:80:"resource hash_init ( string $algo [, int $options = 0 [, string $key = NULL ]] )";}
a:4:{i:0;s:16:"hash_update_file";i:1;s:32:"PHP 5 >= 5.1.2, PECL hash >= 1.1";i:2;s:52:"Pump data into an active hashing context from a file";i:3;s:85:"int hash_update_stream ( resource $context , resource $handle [, int $length = -1 ] )";}
a:4:{i:0;s:11:"hash_update";i:1;s:32:"PHP 5 >= 5.1.2, PECL hash >= 1.1";i:2;s:40:"Pump data into an active hashing context";i:3;s:73:"string hash ( string $algo , string $data [, bool $raw_output = false ] )";}
a:4:{i:0;s:14:"mcrypt_decrypt";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:40:"Decrypts crypttext with given parameters";i:3;s:100:"string mcrypt_decrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] )";}
a:4:{i:0;s:30:"mcrypt_enc_get_algorithms_name";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:40:"Returns the name of the opened algorithm";i:3;s:54:"string mcrypt_enc_get_algorithms_name ( resource $td )";}
a:4:{i:0;s:25:"mcrypt_enc_get_block_size";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:45:"Returns the blocksize of the opened algorithm";i:3;s:49:"string mcrypt_enc_get_modes_name ( resource $td )";}
a:4:{i:0;s:34:"mcrypt_enc_get_supported_key_sizes";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:68:"Returns an array with the supported keysizes of the opened algorithm";i:3;s:57:"array mcrypt_enc_get_supported_key_sizes ( resource $td )";}
a:4:{i:0;s:34:"mcrypt_enc_is_block_algorithm_mode";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:64:"Checks whether the encryption of the opened mode works on blocks";i:3;s:100:"string mcrypt_encrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] )";}
a:4:{i:0;s:21:"mcrypt_generic_deinit";i:1;s:21:"PHP 4 >= 4.0.7, PHP 5";i:2;s:48:"This function deinitializes an encryption module";i:3;s:53:"string mcrypt_generic ( resource $td , string $data )";}
a:4:{i:0;s:21:"mcrypt_get_block_size";i:1;s:12:"PHP 4, PHP 5";i:2;s:42:"Get the block size of the specified cipher";i:3;s:61:"int mcrypt_get_block_size ( string $cipher , string $module )";}
a:4:{i:0;s:22:"mcrypt_get_cipher_name";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Get the name of the specified cipher";i:3;s:48:"string mcrypt_get_cipher_name ( string $cipher )";}
a:4:{i:0;s:19:"mcrypt_get_key_size";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Get the key size of the specified cipher";i:3;s:59:"int mcrypt_get_key_size ( string $cipher , string $module )";}
a:4:{i:0;s:22:"mcrypt_list_algorithms";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:37:"Get an array of all supported ciphers";i:3;s:86:"array mcrypt_list_algorithms ([ string $lib_dir = ini_get("mcrypt.algorithms_dir") ] )";}
a:4:{i:0;s:17:"mcrypt_list_modes";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:35:"Get an array of all supported modes";i:3;s:76:"array mcrypt_list_modes ([ string $lib_dir = ini_get("mcrypt.modes_dir") ] )";}
a:4:{i:0;s:19:"mcrypt_module_close";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:23:"Close the mcrypt module";i:3;s:119:"resource mcrypt_module_open ( string $algorithm , string $algorithm_directory , string $mode , string $mode_directory )";}
a:4:{i:0;s:23:"mcrypt_module_self_test";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:54:"This function runs a self test on the specified module";i:3;s:71:"bool mcrypt_module_self_test ( string $algorithm [, string $lib_dir ] )";}
a:4:{i:0;s:16:"mdecrypt_generic";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:12:"Decrypt data";i:3;s:55:"string mdecrypt_generic ( resource $td , string $data )";}
a:4:{i:0;s:11:"mhash_count";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Get the highest available hash id";i:3;s:24:"int mhash_count ( void )";}
a:4:{i:0;s:20:"mhash_get_block_size";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Get the block size of the specified hash";i:3;s:38:"int mhash_get_block_size ( int $hash )";}
a:4:{i:0;s:19:"mhash_get_hash_name";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Get the name of the specified hash";i:3;s:40:"string mhash_get_hash_name ( int $hash )";}
a:4:{i:0;s:16:"mhash_keygen_s2k";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:15:"Generates a key";i:3;s:58:"string mhash ( int $hash , string $data [, string $key ] )";}
a:4:{i:0;s:26:"openssl_csr_export_to_file";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:23:"Exports a CSR to a file";i:3;s:103:"mixed openssl_csr_new ( array $dn , resource &$privkey [, array $configargs [, array $extraattribs ]] )";}
a:4:{i:0;s:15:"openssl_decrypt";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:13:"Decrypts data";i:3;s:36:"string openssl_error_string ( void )";}
a:4:{i:0;s:16:"openssl_free_key";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:17:"Free key resource";i:3;s:61:"array openssl_get_cipher_methods ([ bool $aliases = false ] )";}
a:4:{i:0;s:22:"openssl_get_md_methods";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:29:"Gets available digest methods";i:3;s:57:"array openssl_get_md_methods ([ bool $aliases = false ] )";}
a:4:{i:0;s:12:"openssl_open";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:16:"Open sealed data";i:3;s:101:"bool openssl_open ( string $sealed_data , string &$open_data , string $env_key , mixed $priv_key_id )";}
a:4:{i:0;s:27:"openssl_pkey_export_to_file";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:55:"Gets an exportable representation of a key into a file ";i:3;s:79:"string openssl_random_pseudo_bytes ( string $length [, bool &$crypto_strong ] )";}
a:4:{i:0;s:12:"openssl_sign";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:18:"Generate signature";i:3;s:120:"bool openssl_sign ( string $data , string &$signature , mixed $priv_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ] )";}
a:4:{i:0;s:14:"openssl_verify";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:16:"Verify signature";i:3;s:119:"int openssl_verify ( string $data , string $signature , mixed $pub_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ] )";}
a:4:{i:0;s:30:"openssl_x509_check_private_key";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:52:"Checks if a private key corresponds to a certificate";i:3;s:119:"int openssl_x509_checkpurpose ( mixed $x509cert , int $purpose [, array $cainfo = array() [, string $untrustedfile ]] )";}
a:4:{i:0;s:27:"openssl_x509_export_to_file";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:29:"Exports a certificate to file";i:3;s:50:"resource openssl_x509_read ( mixed $x509certdata )";}
a:4:{i:0;s:9:"dba_close";i:1;s:12:"PHP 4, PHP 5";i:2;s:20:"Close a DBA database";i:3;s:49:"array dba_handlers ([ bool $full_info = false ] )";}
a:4:{i:0;s:10:"dba_insert";i:1;s:12:"PHP 4, PHP 5";i:2;s:12:"Insert entry";i:3;s:34:"bool dba_sync ( resource $handle )";}
a:4:{i:0;s:11:"dbx_compare";i:1;s:49:"PHP 4 >= 4.1.0, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0";i:2;s:37:"Compare two rows for sorting purposes";i:3;s:0:"";}
a:4:{i:0;s:9:"dbx_error";i:1;s:49:"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0";i:2;s:68:" Report the error message of the latest function call in the module ";i:3;s:44:"string dbx_error ( object $link_identifier )";}
a:4:{i:0;s:8:"dbx_sort";i:1;s:49:"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0";i:2;s:58:" Sort a result from a dbx_query by a custom sort function ";i:3;s:64:"bool dbx_sort ( object $result , string $user_compare_function )";}
a:4:{i:0;s:15:"odbc_autocommit";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Toggle autocommit behaviour";i:3;s:137:"resource odbc_columnprivileges ( resource $connection_id , string $qualifier , string $owner , string $table_name , string $column_name )";}
a:4:{i:0;s:12:"odbc_columns";i:1;s:12:"PHP 4, PHP 5";i:2;s:42:"Lists the column names in specified tables";i:3;s:138:"resource odbc_columns ( resource $connection_id [, string $qualifier [, string $schema [, string $table_name [, string $column_name ]]]] )";}
a:4:{i:0;s:11:"odbc_commit";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Commit an ODBC transaction";i:3;s:93:"resource odbc_connect ( string $dsn , string $user , string $password [, int $cursor_type ] )";}
a:4:{i:0;s:11:"odbc_cursor";i:1;s:12:"PHP 4, PHP 5";i:2;s:14:"Get cursorname";i:3;s:70:"bool odbc_execute ( resource $result_id [, array $parameters_array ] )";}
a:4:{i:0;s:16:"odbc_fetch_array";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:42:"Fetch a result row as an associative array";i:3;s:86:"int odbc_fetch_into ( resource $result_id , array &$result_array [, int $rownumber ] )";}
a:4:{i:0;s:17:"odbc_fetch_object";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:31:"Fetch a result row as an object";i:3;s:45:"bool odbc_next_result ( resource $result_id )";}
a:4:{i:0;s:15:"odbc_num_fields";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Number of columns in a result";i:3;s:72:"resource odbc_prepare ( resource $connection_id , string $query_string )";}
a:4:{i:0;s:16:"odbc_primarykeys";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Gets the primary keys for a table";i:3;s:126:"resource odbc_procedurecolumns ( resource $connection_id , string $qualifier , string $owner , string $proc , string $column )";}
a:4:{i:0;s:15:"odbc_procedures";i:1;s:12:"PHP 4, PHP 5";i:2;s:59:"Get the list of procedures stored in a specific data source";i:3;s:103:"resource odbc_procedures ( resource $connection_id , string $qualifier , string $owner , string $name )";}
a:4:{i:0;s:15:"odbc_result_all";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Print result as HTML table";i:3;s:56:"mixed odbc_result ( resource $result_id , mixed $field )";}
a:4:{i:0;s:13:"odbc_rollback";i:1;s:12:"PHP 4, PHP 5";i:2;s:22:"Rollback a transaction";i:3;s:79:"bool odbc_setoption ( resource $id , int $function , int $option , int $param )";}
a:4:{i:0;s:19:"odbc_specialcolumns";i:1;s:12:"PHP 4, PHP 5";i:2;s:25:"Retrieves special columns";i:3;s:108:"resource odbc_tableprivileges ( resource $connection_id , string $qualifier , string $owner , string $name )";}
a:4:{i:0;s:11:"odbc_tables";i:1;s:12:"PHP 4, PHP 5";i:2;s:60:"Get the list of table names stored in a specific data source";i:3;s:124:"resource odbc_tables ( resource $connection_id [, string $qualifier [, string $owner [, string $name [, string $types ]]]] )";}
a:4:{i:0;s:21:"PDO::beginTransaction";i:1;s:33:"PHP 5 >= 5.1.0, PECL pdo >= 0.1.0";i:2;s:25:" Initiates a transaction ";i:3;s:35:"bool PDO::beginTransaction ( void )";}
a:4:{i:0;s:11:"PDO::commit";i:1;s:33:"PHP 5 >= 5.1.0, PECL pdo >= 0.1.0";i:2;s:23:" Commits a transaction ";i:3;s:25:"bool PDO::commit ( void )";}
a:4:{i:0;s:16:"PDO::__construct";i:1;s:33:"PHP 5 >= 5.1.0, PECL pdo >= 0.1.0";i:2;s:64:" Creates a PDO instance representing a connection to a database ";i:3;s:103:"PDO::__construct() ( string $dsn [, string $username [, string $password [, array $driver_options ]]] )";}
a:4:{i:0;s:14:"PDO::errorCode";i:1;s:33:"PHP 5 >= 5.1.0, PECL pdo >= 0.1.0";i:2;s:78:" Fetch the SQLSTATE associated with the last operation on the database handle ";i:3;s:29:"mixed PDO::errorCode ( void )";}
a:4:{i:0;s:14:"PDO::errorInfo";i:1;s:33:"PHP 5 >= 5.1.0, PECL pdo >= 0.1.0";i:2;s:92:" Fetch extended error information associated with the last operation on the database handle ";i:3;s:29:"array PDO::errorInfo ( void )";}
a:4:{i:0;s:9:"PDO::exec";i:1;s:33:"PHP 5 >= 5.1.0, PECL pdo >= 0.1.0";i:2;s:65:" Execute an SQL statement and return the number of affected rows ";i:3;s:35:"int PDO::exec ( string $statement )";}
a:4:{i:0;s:17:"PDO::getAttribute";i:1;s:33:"PHP 5 >= 5.1.0, PECL pdo >= 0.2.0";i:2;s:42:" Retrieve a database connection attribute ";i:3;s:42:"mixed PDO::getAttribute ( int $attribute )";}
a:4:{i:0;s:24:"PDO::getAvailableDrivers";i:1;s:33:"PHP 5 >= 5.1.3, PECL pdo >= 1.0.3";i:2;s:42:" Return an array of available PDO drivers ";i:3;s:26:"array pdo_drivers ( void )";}
a:4:{i:0;s:18:"PDO::inTransaction";i:1;s:33:"PHP 5 >= 5.3.3, Bundled pdo_pgsql";i:2;s:32:" Checks if inside a transaction ";i:3;s:84:"PDOStatement PDO::prepare ( string $statement [, array $driver_options = array() ] )";}
a:4:{i:0;s:10:"PDO::quote";i:1;s:33:"PHP 5 >= 5.1.0, PECL pdo >= 0.2.1";i:2;s:37:" Quotes a string for use in a query. ";i:3;s:78:"string PDO::quote ( string $string [, int $parameter_type = PDO::PARAM_STR ] )";}
a:4:{i:0;s:13:"PDO::rollBack";i:1;s:33:"PHP 5 >= 5.1.0, PECL pdo >= 0.1.0";i:2;s:26:" Rolls back a transaction ";i:3;s:27:"bool PDO::rollBack ( void )";}
a:4:{i:0;s:17:"PDO::setAttribute";i:1;s:33:"PHP 5 >= 5.1.0, PECL pdo >= 0.1.0";i:2;s:18:" Set an attribute ";i:3;s:56:"bool PDO::setAttribute ( int $attribute , mixed $value )";}
a:4:{i:0;s:18:"PDO::cubrid_schema";i:1;s:54:"No version information available, might only be in SVN";i:2;s:47:"Is used to get the requested schema information";i:3;s:90:"array PDO::cubrid_schema ( int $schema_type [, string $table_name [, string $col_name ]] )";}
a:4:{i:0;s:19:"PDO::pgsqlLOBCreate";i:1;s:39:"PHP 5 >= 5.1.2, PECL pdo_pgsql >= 1.0.2";i:2;s:26:"Creates a new large object";i:3;s:35:"string PDO::pgsqlLOBCreate ( void )";}
a:4:{i:0;s:17:"PDO::pgsqlLOBOpen";i:1;s:39:"PHP 5 >= 5.1.2, PECL pdo_pgsql >= 1.0.2";i:2;s:37:"Opens an existing large object stream";i:3;s:67:"resource PDO::pgsqlLOBOpen ( string $oid [, string $mode = "rb" ] )";}
a:4:{i:0;s:19:"PDO::pgsqlLOBUnlink";i:1;s:39:"PHP 5 >= 5.1.2, PECL pdo_pgsql >= 1.0.2";i:2;s:24:"Deletes the large object";i:3;s:40:"bool PDO::pgsqlLOBUnlink ( string $oid )";}
a:4:{i:0;s:26:"PDO::sqliteCreateAggregate";i:1;s:40:"PHP 5 >= 5.1.0, PECL pdo_sqlite >= 1.0.0";i:2;s:74:" Registers an aggregating User Defined Function for use in SQL statements ";i:3;s:40:"fini ( mixed $context , int $rownumber )";}
a:4:{i:0;s:25:"PDO::sqliteCreateFunction";i:1;s:40:"PHP 5 >= 5.1.0, PECL pdo_sqlite >= 1.0.0";i:2;s:61:" Registers a User Defined Function for use in SQL statements ";i:3;s:96:"bool PDO::sqliteCreateFunction ( string $function_name , callback $callback [, int $num_args ] )";}
a:4:{i:0;s:20:"cubrid_affected_rows";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:56:"Get number of affected rows in previous Cubrid operation";i:3;s:53:"int cubrid_affected_rows ( resource $req_identifier )";}
a:4:{i:0;s:11:"cubrid_bind";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:22:"Is used to bind values";i:3;s:112:"int cubrid_bind ( resource $req_identifier , int $bind_index , string $bind_value [, string $bind_value_type ] )";}
a:4:{i:0;s:20:"cubrid_close_prepare";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:26:"Closes the request handle ";i:3;s:53:"int cubrid_close_prepare ( resource $req_identifier )";}
a:4:{i:0;s:20:"cubrid_close_request";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:26:"Closes the request handle ";i:3;s:53:"int cubrid_close_request ( resource $req_identifier )";}
a:4:{i:0;s:14:"cubrid_col_get";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:39:"Is used to get contents of the elements";i:3;s:84:"array cubrid_col_get ( resource $conn_identifier , string $oid , string $attr_name )";}
a:4:{i:0;s:15:"cubrid_col_size";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:37:"Is used to get the number of elements";i:3;s:83:"int cubrid_col_size ( resource $conn_identifier , string $oid , string $attr_name )";}
a:4:{i:0;s:19:"cubrid_column_names";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:32:"Is used to get the column names ";i:3;s:54:"array cubrid_column_names ( resource $req_identifier )";}
a:4:{i:0;s:19:"cubrid_column_types";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:18:"Gets column types ";i:3;s:54:"array cubrid_column_types ( resource $req_identifier )";}
a:4:{i:0;s:13:"cubrid_commit";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:44:"Is used to execute commit on the transaction";i:3;s:47:"int cubrid_commit ( resource $conn_identifier )";}
a:4:{i:0;s:23:"cubrid_connect_with_url";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:67:"Is used to establish the environment for connecting to your server ";i:3;s:92:"resource cubrid_connect_with_url ( string $conn_url [, string $userid [, string $passwd ]] )";}
a:4:{i:0;s:14:"cubrid_connect";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:67:"Is used to establish the environment for connecting to your server ";i:3;s:108:"resource cubrid_connect ( string $host , int $port , string $dbname [, string $userid [, string $passwd ]] )";}
a:4:{i:0;s:18:"cubrid_current_oid";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:53:"Is used to get the oid of the current cursor location";i:3;s:54:"string cubrid_current_oid ( resource $req_identifier )";}
a:4:{i:0;s:16:"cubrid_data_seek";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:51:"Moves the internal row pointer of the CUBRID result";i:3;s:68:"bool cubrid_data_seek ( resource $req_identifier , int $row_number )";}
a:4:{i:0;s:17:"cubrid_disconnect";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:41:"Ends the transaction currently on process";i:3;s:51:"int cubrid_disconnect ( resource $conn_identifier )";}
a:4:{i:0;s:11:"cubrid_drop";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:30:"Is used to delete an instance ";i:3;s:59:"int cubrid_drop ( resource $conn_identifier , string $oid )";}
a:4:{i:0;s:26:"cubrid_error_code_facility";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:32:"Is used to get the facility code";i:3;s:39:"int cubrid_error_code_facility ( void )";}
a:4:{i:0;s:17:"cubrid_error_code";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:30:"Is used to get the error code ";i:3;s:30:"int cubrid_error_code ( void )";}
a:4:{i:0;s:16:"cubrid_error_msg";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:32:"Is used to get the error message";i:3;s:32:"string cubrid_error_msg ( void )";}
a:4:{i:0;s:14:"cubrid_execute";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:42:"Is used to execute the given SQL sentence.";i:3;s:68:"int cubrid_execute ( resource $request_identifier [, int $option ] )";}
a:4:{i:0;s:18:"cubrid_fetch_assoc";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:65:"Returns the associative array that corresponds to the fetched row";i:3;s:53:"array cubrid_fetch_assoc ( resource $req_identifier )";}
a:4:{i:0;s:18:"cubrid_fetch_field";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:41:"Returns an object with certain properties";i:3;s:81:"object cubrid_fetch_field ( resource $req_identifier [, int $field_offset = 0 ] )";}
a:4:{i:0;s:20:"cubrid_fetch_lengths";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:82:"Returns an array with the lengths of the values of each field from the current row";i:3;s:55:"array cubrid_fetch_lengths ( resource $req_identifier )";}
a:4:{i:0;s:19:"cubrid_fetch_object";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:39:"Returns an object with the column names";i:3;s:55:"object cubrid_fetch_object ( resource $req_identifier )";}
a:4:{i:0;s:16:"cubrid_fetch_row";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:60:"Returns a numerical array with the values of the current row";i:3;s:51:"array cubrid_fetch_row ( resource $req_identifier )";}
a:4:{i:0;s:12:"cubrid_fetch";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:27:"Is used to get a single row";i:3;s:62:"mixed cubrid_fetch ( resource $req_identifier [, int $type ] )";}
a:4:{i:0;s:18:"cubrid_field_flags";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:57:"Returns a string with the flags of the given field offset";i:3;s:74:"string cubrid_field_flags ( resource $req_identifier , int $field_offset )";}
a:4:{i:0;s:16:"cubrid_field_len";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:49:"Returns the maximum length of the specified field";i:3;s:69:"int cubrid_field_len ( resource $req_identifier , int $field_offset )";}
a:4:{i:0;s:17:"cubrid_field_name";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:45:"Returns the name of the specified field index";i:3;s:73:"string cubrid_field_name ( resource $req_identifier , int $field_offset )";}
a:4:{i:0;s:17:"cubrid_field_seek";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:57:"Moves the result set cursor to the specified field offset";i:3;s:71:"bool cubrid_field_seek ( resource $req_identifier , int $field_offset )";}
a:4:{i:0;s:18:"cubrid_field_table";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:52:"Returns the name of the table of the specified field";i:3;s:74:"string cubrid_field_table ( resource $req_identifier , int $field_offset )";}
a:4:{i:0;s:17:"cubrid_field_type";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:70:"Returns the type of the column corresponding to the given field offset";i:3;s:73:"string cubrid_field_type ( resource $req_identifier , int $field_offset )";}
a:4:{i:0;s:18:"cubrid_free_result";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:44:"Frees the memory occupied by the result data";i:3;s:52:"bool cubrid_free_result ( resource $req_identifier )";}
a:4:{i:0;s:18:"cubrid_get_charset";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:45:"Returns the current CUBRID connection charset";i:3;s:55:"string cubrid_get_charset ( resource $conn_identifier )";}
a:4:{i:0;s:21:"cubrid_get_class_name";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:29:"Is used to get the class name";i:3;s:72:"string cubrid_get_class_name ( resource $conn_identifier , string $oid )";}
a:4:{i:0;s:22:"cubrid_get_client_info";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:59:"Returns a string that represents the client library version";i:3;s:38:"string cubrid_get_client_info ( void )";}
a:4:{i:0;s:23:"cubrid_get_db_parameter";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:38:"Returns the CUBRID database parameters";i:3;s:59:"array cubrid_get_db_parameter ( resource $conn_identifier )";}
a:4:{i:0;s:22:"cubrid_get_server_info";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:58:"Returns a string that represents the CUBRID server version";i:3;s:59:"string cubrid_get_server_info ( resource $conn_identifier )";}
a:4:{i:0;s:10:"cubrid_get";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:28:"Is used to get the attribute";i:3;s:77:"mixed cubrid_get ( resource $conn_identifier , string $oid [, mixed $attr ] )";}
a:4:{i:0;s:18:"cubrid_is_instance";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:37:"Is used to check whether the instance";i:3;s:66:"int cubrid_is_instance ( resource $conn_identifier , string $oid )";}
a:4:{i:0;s:15:"cubrid_list_dbs";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:63:"Returns an array with the list of all existing Cubrid databases";i:3;s:51:"array cubrid_list_dbs ( resource $conn_identifier )";}
a:4:{i:0;s:20:"cubrid_load_from_glo";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:22:"Is used to read a data";i:3;s:88:"int cubrid_load_from_glo ( resource $conn_identifier , string $oid , string $file_name )";}
a:4:{i:0;s:16:"cubrid_lock_read";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:24:"Is used to put read lock";i:3;s:64:"int cubrid_lock_read ( resource $conn_identifier , string $oid )";}
a:4:{i:0;s:17:"cubrid_lock_write";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:25:"Is used to put write lock";i:3;s:65:"int cubrid_lock_write ( resource $conn_identifier , string $oid )";}
a:4:{i:0;s:18:"cubrid_move_cursor";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:43:"Is used to move the current cursor location";i:3;s:82:"int cubrid_move_cursor ( resource $req_identifier , int $offset [, int $origin ] )";}
a:4:{i:0;s:14:"cubrid_new_glo";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:32:"Is used to create a glo instance";i:3;s:92:"string cubrid_new_glo ( resource $conn_identifier , string $class_name , string $file_name )";}
a:4:{i:0;s:15:"cubrid_num_cols";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:36:"Is used to get the number of columns";i:3;s:48:"int cubrid_num_cols ( resource $req_identifier )";}
a:4:{i:0;s:17:"cubrid_num_fields";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:47:"Returns the number of columns in the result set";i:3;s:50:"int cubrid_num_fields ( resource $req_identifier )";}
a:4:{i:0;s:15:"cubrid_num_rows";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:33:"Is used to get the number of rows";i:3;s:48:"int cubrid_num_rows ( resource $req_identifier )";}
a:4:{i:0;s:14:"cubrid_prepare";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:48:"Is a sort of API which represents SQL statements";i:3;s:93:"resource cubrid_prepare ( resource $conn_identifier , string $prepare_stmt [, int $option ] )";}
a:4:{i:0;s:10:"cubrid_put";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:30:"Is used to update an attribute";i:3;s:90:"int cubrid_put ( resource $conn_identifier , string $oid [, string $attr ], mixed $value )";}
a:4:{i:0;s:25:"cubrid_real_escape_string";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:54:"Returns the escaped string version of the given string";i:3;s:92:"string cubrid_real_escape_string ( string $unescaped_string [, resource $conn_identifier ] )";}
a:4:{i:0;s:13:"cubrid_result";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:55:"Returns the value of a specific field in a specific row";i:3;s:82:"string cubrid_result ( resource $req_identifier , int $row [, mixed $field = 0 ] )";}
a:4:{i:0;s:15:"cubrid_rollback";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:36:"Executes rollback on the transaction";i:3;s:49:"int cubrid_rollback ( resource $conn_identifier )";}
a:4:{i:0;s:18:"cubrid_save_to_glo";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:30:"Is used to save requested file";i:3;s:86:"int cubrid_save_to_glo ( resource $conn_identifier , string $oid , string $file_name )";}
a:4:{i:0;s:13:"cubrid_schema";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:47:"Is used to get the requested schema information";i:3;s:114:"array cubrid_schema ( resource $conn_identifier , int $schema_type [, string $class_name [, string $attr_name ]] )";}
a:4:{i:0;s:15:"cubrid_send_glo";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:29:"Is used to read data from glo";i:3;s:63:"int cubrid_send_glo ( resource $conn_identifier , string $oid )";}
a:4:{i:0;s:15:"cubrid_seq_drop";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:28:"Is used to delete an element";i:3;s:96:"int cubrid_seq_drop ( resource $conn_identifier , string $oid , string $attr_name , int $index )";}
a:4:{i:0;s:17:"cubrid_seq_insert";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:42:"Is used to insert an element to a sequence";i:3;s:120:"int cubrid_seq_insert ( resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element )";}
a:4:{i:0;s:14:"cubrid_seq_put";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:29:"Is used to update the content";i:3;s:117:"int cubrid_seq_put ( resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element )";}
a:4:{i:0;s:14:"cubrid_set_add";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:34:"Is used to insert a single element";i:3;s:104:"int cubrid_set_add ( resource $conn_identifier , string $oid , string $attr_name , string $set_element )";}
a:4:{i:0;s:15:"cubrid_set_drop";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:28:"Is used to delete an element";i:3;s:105:"int cubrid_set_drop ( resource $conn_identifier , string $oid , string $attr_name , string $set_element )";}
a:4:{i:0;s:23:"cubrid_unbuffered_query";i:1;s:20:"PECL CUBRID >= 8.3.0";i:2;s:57:"Performs a query without fetching the results into memory";i:3;s:81:"resource cubrid_unbuffered_query ( string $query [, resource $conn_identifier ] )";}
a:4:{i:0;s:16:"dbase_add_record";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Adds a record to a database";i:3;s:63:"bool dbase_add_record ( int $dbase_identifier , array $record )";}
a:4:{i:0;s:11:"dbase_close";i:1;s:12:"PHP 4, PHP 5";i:2;s:17:"Closes a database";i:3;s:42:"bool dbase_close ( int $dbase_identifier )";}
a:4:{i:0;s:12:"dbase_create";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Creates a database";i:3;s:53:"int dbase_create ( string $filename , array $fields )";}
a:4:{i:0;s:19:"dbase_delete_record";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Deletes a record from a database";i:3;s:53:"array dbase_get_header_info ( int $dbase_identifier )";}
a:4:{i:0;s:27:"dbase_get_record_with_names";i:1;s:12:"PHP 4, PHP 5";i:2;s:55:" Gets a record from a database as an associative array ";i:3;s:80:"array dbase_get_record_with_names ( int $dbase_identifier , int $record_number )";}
a:4:{i:0;s:16:"dbase_get_record";i:1;s:12:"PHP 4, PHP 5";i:2;s:51:" Gets a record from a database as an indexed array ";i:3;s:45:"int dbase_numfields ( int $dbase_identifier )";}
a:4:{i:0;s:16:"dbase_numrecords";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Gets the number of records in a database";i:3;s:46:"int dbase_numrecords ( int $dbase_identifier )";}
a:4:{i:0;s:10:"dbase_open";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Opens a database";i:3;s:47:"int dbase_open ( string $filename , int $mode )";}
a:4:{i:0;s:10:"dbase_pack";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Packs a database";i:3;s:41:"bool dbase_pack ( int $dbase_identifier )";}
a:4:{i:0;s:20:"dbase_replace_record";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"Replaces a record in a database";i:3;s:88:"bool dbase_replace_record ( int $dbase_identifier , array $record , int $record_number )";}
a:4:{i:0;s:10:"dbplus_add";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:25:"Add a tuple to a relation";i:3;s:52:"int dbplus_add ( resource $relation , array $tuple )";}
a:4:{i:0;s:10:"dbplus_aql";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:17:"Perform AQL query";i:3;s:76:"resource dbplus_aql ( string $query [, string $server [, string $dbpath ]] )";}
a:4:{i:0;s:12:"dbplus_close";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:16:"Close a relation";i:3;s:54:"int dbplus_curr ( resource $relation , array &$tuple )";}
a:4:{i:0;s:14:"dbplus_errcode";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:50:"Get error string for given errorcode or last error";i:3;s:39:"string dbplus_errcode ([ int $errno ] )";}
a:4:{i:0;s:12:"dbplus_errno";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:33:"Get error code for last operation";i:3;s:25:"int dbplus_errno ( void )";}
a:4:{i:0;s:11:"dbplus_find";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:30:"Set a constraint on a relation";i:3;s:74:"int dbplus_find ( resource $relation , array $constraints , mixed $tuple )";}
a:4:{i:0;s:12:"dbplus_first";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:29:"Get first tuple from relation";i:3;s:55:"int dbplus_first ( resource $relation , array &$tuple )";}
a:4:{i:0;s:12:"dbplus_flush";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:36:"Flush all changes made on a relation";i:3;s:39:"int dbplus_flush ( resource $relation )";}
a:4:{i:0;s:19:"dbplus_freealllocks";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:34:"Free all locks held by this client";i:3;s:59:"int dbplus_getunique ( resource $relation , int $uniqueid )";}
a:4:{i:0;s:11:"dbplus_info";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:32:"Get information about a relation";i:3;s:54:"int dbplus_last ( resource $relation , array &$tuple )";}
a:4:{i:0;s:14:"dbplus_lockrel";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:30:"Request write lock on relation";i:3;s:54:"int dbplus_next ( resource $relation , array &$tuple )";}
a:4:{i:0;s:11:"dbplus_open";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:18:"Open relation file";i:3;s:54:"int dbplus_prev ( resource $relation , array &$tuple )";}
a:4:{i:0;s:14:"dbplus_rchperm";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:27:"Change relation permissions";i:3;s:84:"int dbplus_rchperm ( resource $relation , int $mask , string $user , string $group )";}
a:4:{i:0;s:16:"dbplus_rcrtexact";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:63:"Creates an exact but empty copy of a relation including indices";i:3;s:60:"resource dbplus_rquery ( string $query [, string $dbpath ] )";}
a:4:{i:0;s:14:"dbplus_rrename";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:17:"Rename a relation";i:3;s:47:"string dbplus_tcl ( int $sid , string $script )";}
a:4:{i:0;s:14:"dbplus_tremove";i:1;s:34:"PHP 4 <= 4.1.0, PECL dbplus >= 0.9";i:2;s:41:"Remove tuple and return new current tuple";i:3;s:44:"int dbplus_xunlockrel ( resource $relation )";}
a:4:{i:0;s:19:"fbsql_affected_rows";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:59:"Get number of affected rows in previous FrontBase operation";i:3;s:49:"bool fbsql_close ([ resource $link_identifier ] )";}
a:4:{i:0;s:12:"fbsql_commit";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:37:"Commits a transaction to the database";i:3;s:188:"resource fbsql_connect ([ string $hostname = ini_get("fbsql.default_host") [, string $username = ini_get("fbsql.default_user") [, string $password = ini_get("fbsql.default_password") ]]] )";}
a:4:{i:0;s:17:"fbsql_create_blob";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:13:"Create a BLOB";i:3;s:77:"string fbsql_create_blob ( string $blob_data [, resource $link_identifier ] )";}
a:4:{i:0;s:17:"fbsql_create_clob";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:13:"Create a CLOB";i:3;s:77:"string fbsql_create_clob ( string $clob_data [, resource $link_identifier ] )";}
a:4:{i:0;s:15:"fbsql_create_db";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:27:"Create a FrontBase database";i:3;s:106:"bool fbsql_create_db ( string $database_name [, resource $link_identifier [, string $database_options ]] )";}
a:4:{i:0;s:15:"fbsql_data_seek";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:28:"Move internal result pointer";i:3;s:59:"bool fbsql_data_seek ( resource $result , int $row_number )";}
a:4:{i:0;s:23:"fbsql_database_password";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:55:"Sets or retrieves the password for a FrontBase database";i:3;s:91:"string fbsql_database_password ( resource $link_identifier [, string $database_password ] )";}
a:4:{i:0;s:14:"fbsql_database";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:51:"Get or set the database name used with a connection";i:3;s:48:"int fbsql_errno ([ resource $link_identifier ] )";}
a:4:{i:0;s:11:"fbsql_error";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:49:"Returns the error message from previous operation";i:3;s:51:"string fbsql_error ([ resource $link_identifier ] )";}
a:4:{i:0;s:17:"fbsql_fetch_assoc";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:42:"Fetch a result row as an associative array";i:3;s:44:"array fbsql_fetch_assoc ( resource $result )";}
a:4:{i:0;s:17:"fbsql_fetch_field";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:60:"Get column information from a result and return as an object";i:3;s:68:"object fbsql_fetch_field ( resource $result [, int $field_offset ] )";}
a:4:{i:0;s:19:"fbsql_fetch_lengths";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:41:"Get the length of each output in a result";i:3;s:46:"object fbsql_fetch_object ( resource $result )";}
a:4:{i:0;s:15:"fbsql_fetch_row";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:39:"Get a result row as an enumerated array";i:3;s:66:"string fbsql_field_name ( resource $result [, int $field_index ] )";}
a:4:{i:0;s:16:"fbsql_field_seek";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:46:"Set result pointer to a specified field offset";i:3;s:67:"string fbsql_field_type ( resource $result [, int $field_offset ] )";}
a:4:{i:0;s:17:"fbsql_free_result";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:18:"Free result memory";i:3;s:56:"resource fbsql_list_dbs ([ resource $link_identifier ] )";}
a:4:{i:0;s:17:"fbsql_list_fields";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:28:"List FrontBase result fields";i:3;s:104:"resource fbsql_list_fields ( string $database_name , string $table_name [, resource $link_identifier ] )";}
a:4:{i:0;s:17:"fbsql_list_tables";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:35:"List tables in a FrontBase database";i:3;s:43:"bool fbsql_next_result ( resource $result )";}
a:4:{i:0;s:16:"fbsql_num_fields";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:30:"Get number of fields in result";i:3;s:39:"int fbsql_num_rows ( resource $result )";}
a:4:{i:0;s:14:"fbsql_password";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:51:"Get or set the user password used with a connection";i:3;s:89:"resource fbsql_query ( string $query [, resource $link_identifier [, int $batch_size ]] )";}
a:4:{i:0;s:15:"fbsql_read_blob";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:29:"Read a BLOB from the database";i:3;s:77:"string fbsql_read_blob ( string $blob_handle [, resource $link_identifier ] )";}
a:4:{i:0;s:15:"fbsql_read_clob";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:29:"Read a CLOB from the database";i:3;s:77:"string fbsql_read_clob ( string $clob_handle [, resource $link_identifier ] )";}
a:4:{i:0;s:12:"fbsql_result";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:15:"Get result data";i:3;s:60:"bool fbsql_set_lob_mode ( resource $result , int $lob_mode )";}
a:4:{i:0;s:18:"fbsql_set_password";i:1;s:5:"PHP 5";i:2;s:36:"Change the password for a given user";i:3;s:57:"string fbsql_table_name ( resource $result , int $index )";}
a:4:{i:0;s:14:"fbsql_username";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:42:"Get or set the username for the connection";i:3;s:38:"bool fbsql_warnings ([ bool $OnOff ] )";}
a:4:{i:0;s:18:"filepro_fieldcount";i:1;s:21:"PHP 4, PHP 5 <= 5.1.6";i:2;s:50:"Find out how many fields are in a filePro database";i:3;s:34:"bool filepro ( string $directory )";}
a:4:{i:0;s:19:"ibase_affected_rows";i:1;s:5:"PHP 5";i:2;s:66:"Return the number of rows that were affected by the previous query";i:3;s:58:"string ibase_blob_get ( resource $blob_handle , int $len )";}
a:4:{i:0;s:15:"ibase_blob_info";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Return blob length and other useful info";i:3;s:173:"resource ibase_connect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] )";}
a:4:{i:0;s:13:"ibase_db_info";i:1;s:5:"PHP 5";i:2;s:35:"Request statistics about a database";i:3;s:78:"resource ibase_execute ( resource $query [, mixed $bind_arg [, mixed $... ]] )";}
a:4:{i:0;s:17:"ibase_fetch_assoc";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:55:"Fetch a result row from a query as an associative array";i:3;s:74:"object ibase_fetch_object ( resource $result_id [, int $fetch_flag = 0 ] )";}
a:4:{i:0;s:15:"ibase_fetch_row";i:1;s:12:"PHP 4, PHP 5";i:2;s:38:"Fetch a row from an InterBase database";i:3;s:63:"array ibase_field_info ( resource $result , int $field_number )";}
a:4:{i:0;s:24:"ibase_free_event_handler";i:1;s:5:"PHP 5";i:2;s:34:"Cancels a registered event handler";i:3;s:58:"bool ibase_name_result ( resource $result , string $name )";}
a:4:{i:0;s:16:"ibase_num_fields";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Get the number of fields in a result set";i:3;s:44:"int ibase_num_fields ( resource $result_id )";}
a:4:{i:0;s:16:"ibase_num_params";i:1;s:5:"PHP 5";i:2;s:51:"Return the number of parameters in a prepared query";i:3;s:174:"resource ibase_pconnect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] )";}
a:4:{i:0;s:13:"ibase_prepare";i:1;s:12:"PHP 4, PHP 5";i:2;s:73:"Prepare a query for later binding of parameter placeholders and execution";i:3;s:88:"resource ibase_query ([ resource $link_identifier ], string $query [, int $bind_args ] )";}
a:4:{i:0;s:13:"ibase_restore";i:1;s:5:"PHP 5";i:2;s:71:"Initiates a restore task in the service manager and returns immediately";i:3;s:146:"resource ibase_set_event_handler ( resource $connection , callback $event_handler , string $event_name1 [, string $event_name2 [, string $... ]] )";}
a:4:{i:0;s:11:"ibase_trans";i:1;s:12:"PHP 4, PHP 5";i:2;s:19:"Begin a transaction";i:3;s:73:"resource ibase_trans ([ resource $link_identifier [, int $trans_args ]] )";}
a:4:{i:0;s:16:"ibase_wait_event";i:1;s:5:"PHP 5";i:2;s:46:"Wait for an event to be posted by the database";i:3;s:111:"string ibase_wait_event ( resource $connection , string $event_name1 [, string $event_name2 [, string $... ]] )";}
a:4:{i:0;s:17:"ifx_affected_rows";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:38:"Get number of rows affected by a query";i:3;s:45:"int ifx_affected_rows ( resource $result_id )";}
a:4:{i:0;s:19:"ifx_blobinfile_mode";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:48:"Set the default blob mode for all select queries";i:3;s:47:"bool ifx_close ([ resource $link_identifier ] )";}
a:4:{i:0;s:11:"ifx_connect";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:31:"Open Informix server connection";i:3;s:84:"resource ifx_connect ([ string $database [, string $userid [, string $password ]]] )";}
a:4:{i:0;s:13:"ifx_copy_blob";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:32:"Duplicates the given blob object";i:3;s:35:"bool ifx_do ( resource $result_id )";}
a:4:{i:0;s:9:"ifx_error";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:40:"Returns error code of last Informix call";i:3;s:49:"string ifx_error ([ resource $link_identifier ] )";}
a:4:{i:0;s:12:"ifx_errormsg";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:43:"Returns error message of last Informix call";i:3;s:41:"string ifx_errormsg ([ int $errorcode ] )";}
a:4:{i:0;s:13:"ifx_fetch_row";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:31:"Get row as an associative array";i:3;s:64:"array ifx_fetch_row ( resource $result_id [, mixed $position ] )";}
a:4:{i:0;s:19:"ifx_fieldproperties";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:27:"List of SQL fieldproperties";i:3;s:49:"array ifx_fieldproperties ( resource $result_id )";}
a:4:{i:0;s:14:"ifx_fieldtypes";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:27:"List of Informix SQL fields";i:3;s:44:"array ifx_fieldtypes ( resource $result_id )";}
a:4:{i:0;s:13:"ifx_free_blob";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:23:"Deletes the blob object";i:3;s:44:"bool ifx_free_result ( resource $result_id )";}
a:4:{i:0;s:12:"ifx_get_blob";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:35:"Return the content of a blob object";i:3;s:42:"array ifx_getsqlca ( resource $result_id )";}
a:4:{i:0;s:18:"ifx_htmltbl_result";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:45:"Formats all rows of a query into a HTML table";i:3;s:78:"int ifx_htmltbl_result ( resource $result_id [, string $html_table_options ] )";}
a:4:{i:0;s:14:"ifx_nullformat";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:44:"Sets the default return value on a fetch row";i:3;s:42:"int ifx_num_fields ( resource $result_id )";}
a:4:{i:0;s:12:"ifx_num_rows";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:43:"Count the rows already fetched from a query";i:3;s:40:"int ifx_num_rows ( resource $result_id )";}
a:4:{i:0;s:12:"ifx_pconnect";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:35:"Open persistent Informix connection";i:3;s:107:"resource ifx_prepare ( string $query , resource $link_identifier [, int $cursor_def ], mixed $blobidarray )";}
a:4:{i:0;s:9:"ifx_query";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:19:"Send Informix query";i:3;s:109:"resource ifx_query ( string $query , resource $link_identifier [, int $cursor_type [, mixed $blobidarray ]] )";}
a:4:{i:0;s:17:"ifx_textasvarchar";i:1;s:18:"PHP 4, PHP <=5.2.0";i:2;s:25:"Set the default text mode";i:3;s:51:"int ifxus_write_slob ( int $bid , string $content )";}
a:4:{i:0;s:14:"db2_autocommit";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:64:" Returns or sets the AUTOCOMMIT state for a database connection ";i:3;s:62:"mixed db2_autocommit ( resource $connection [, bool $value ] )";}
a:4:{i:0;s:14:"db2_bind_param";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:52:" Binds a PHP variable to an SQL statement parameter ";i:3;s:177:"bool db2_bind_param ( resource $stmt , int $parameter-number , string $variable-name [, int $parameter-type [, int $data-type = 0 [, int $precision = -1 [, int $scale = 0 ]]]] )";}
a:4:{i:0;s:15:"db2_client_info";i:1;s:21:"PECL ibm_db2 >= 1.1.1";i:2;s:71:"Returns an object with properties that describe the DB2 database client";i:3;s:47:"object db2_client_info ( resource $connection )";}
a:4:{i:0;s:9:"db2_close";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:30:" Closes a database connection ";i:3;s:39:"bool db2_close ( resource $connection )";}
a:4:{i:0;s:21:"db2_column_privileges";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:80:" Returns a result set listing the columns and associated privileges for a table ";i:3;s:134:"resource db2_columns ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $column-name ]]]] )";}
a:4:{i:0;s:10:"db2_commit";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:23:" Commits a transaction ";i:3;s:49:"string db2_conn_error ([ resource $connection ] )";}
a:4:{i:0;s:17:"db2_conn_errormsg";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:61:" Returns the last connection error message and SQLCODE value ";i:3;s:52:"string db2_conn_errormsg ([ resource $connection ] )";}
a:4:{i:0;s:11:"db2_connect";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:36:" Returns a connection to a database ";i:3;s:99:"resource db2_connect ( string $database , string $username , string $password [, array $options ] )";}
a:4:{i:0;s:15:"db2_cursor_type";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:54:" Returns the cursor type used by a statement resource ";i:3;s:51:"string db2_escape_string ( string $string_literal )";}
a:4:{i:0;s:8:"db2_exec";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:36:" Executes an SQL statement directly ";i:3;s:82:"resource db2_exec ( resource $connection , string $statement [, array $options ] )";}
a:4:{i:0;s:11:"db2_execute";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:35:" Executes a prepared SQL statement ";i:3;s:58:"bool db2_execute ( resource $stmt [, array $parameters ] )";}
a:4:{i:0;s:16:"db2_fetch_object";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:75:" Returns an object with properties representing columns in the fetched row ";i:3;s:68:"object db2_fetch_object ( resource $stmt [, int $row_number = -1 ] )";}
a:4:{i:0;s:13:"db2_fetch_row";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:62:" Sets the result set pointer to the next row or requested row ";i:3;s:58:"bool db2_fetch_row ( resource $stmt [, int $row_number ] )";}
a:4:{i:0;s:22:"db2_field_display_size";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:66:" Returns the maximum number of bytes required to display a column ";i:3;s:61:"string db2_get_option ( resource $resource , string $option )";}
a:4:{i:0;s:18:"db2_last_insert_id";i:1;s:21:"PECL ibm_db2 >= 1.7.1";i:2;s:100:"Returns the auto generated ID of the last insert query that successfully executed on this connection";i:3;s:45:"int db2_last_insert_id ( resource $resource )";}
a:4:{i:0;s:12:"db2_lob_read";i:1;s:21:"PECL ibm_db2 >= 1.6.0";i:2;s:60:" Gets a user defined size of LOB files with each invocation ";i:3;s:66:"string db2_lob_read ( resource $stmt , int $colnum , int $length )";}
a:4:{i:0;s:15:"db2_next_result";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:54:" Requests the next result set from a stored procedure ";i:3;s:43:"resource db2_next_result ( resource $stmt )";}
a:4:{i:0;s:14:"db2_num_fields";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:56:" Returns the number of fields contained in a result set ";i:3;s:37:"int db2_num_fields ( resource $stmt )";}
a:4:{i:0;s:12:"db2_num_rows";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:57:" Returns the number of rows affected by an SQL statement ";i:3;s:35:"int db2_num_rows ( resource $stmt )";}
a:4:{i:0;s:10:"db2_pclose";i:1;s:21:"PECL ibm_db2 >= 1.8.0";i:2;s:39:"Closes a persistent database connection";i:3;s:38:"bool db2_pclose ( resource $resource )";}
a:4:{i:0;s:12:"db2_pconnect";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:47:" Returns a persistent connection to a database ";i:3;s:100:"resource db2_pconnect ( string $database , string $username , string $password [, array $options ] )";}
a:4:{i:0;s:11:"db2_prepare";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:42:" Prepares an SQL statement to be executed ";i:3;s:85:"resource db2_prepare ( resource $connection , string $statement [, array $options ] )";}
a:4:{i:0;s:16:"db2_primary_keys";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:55:" Returns a result set listing primary keys for a table ";i:3;s:132:"resource db2_procedure_columns ( resource $connection , string $qualifier , string $schema , string $procedure , string $parameter )";}
a:4:{i:0;s:14:"db2_procedures";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:77:" Returns a result set listing the stored procedures registered in a database ";i:3;s:105:"resource db2_procedures ( resource $connection , string $qualifier , string $schema , string $procedure )";}
a:4:{i:0;s:10:"db2_result";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:54:" Returns a single column from a row in the result set ";i:3;s:51:"mixed db2_result ( resource $stmt , mixed $column )";}
a:4:{i:0;s:12:"db2_rollback";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:26:" Rolls back a transaction ";i:3;s:42:"bool db2_rollback ( resource $connection )";}
a:4:{i:0;s:15:"db2_server_info";i:1;s:21:"PECL ibm_db2 >= 1.1.1";i:2;s:71:"Returns an object with properties that describe the DB2 database server";i:3;s:47:"object db2_server_info ( resource $connection )";}
a:4:{i:0;s:14:"db2_set_option";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:49:"Set options for connection or statement resources";i:3;s:71:"bool db2_set_option ( resource $resource , array $options , int $type )";}
a:4:{i:0;s:19:"db2_special_columns";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:76:" Returns a result set listing the unique row identifier columns for a table ";i:3;s:43:"string db2_stmt_error ([ resource $stmt ] )";}
a:4:{i:0;s:17:"db2_stmt_errormsg";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:66:" Returns a string containing the last SQL statement error message ";i:3;s:119:"resource db2_table_privileges ( resource $connection [, string $qualifier [, string $schema [, string $table_name ]]] )";}
a:4:{i:0;s:10:"db2_tables";i:1;s:21:"PECL ibm_db2 >= 1.0.0";i:2;s:79:" Returns a result set listing the tables and associated metadata in a database ";i:3;s:132:"resource db2_tables ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $table-type ]]]] )";}
a:4:{i:0;s:23:"ingres_autocommit_state";i:1;s:20:"PECL ingres >= 2.0.0";i:2;s:42:"Test if the connection is using autocommit";i:3;s:40:"string ingres_charset ( resource $link )";}
a:4:{i:0;s:12:"ingres_close";i:1;s:52:"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0";i:2;s:35:"Close an Ingres database connection";i:3;s:108:"resource ingres_connect ([ string $database [, string $username [, string $password [, array $options ]]]] )";}
a:4:{i:0;s:13:"ingres_cursor";i:1;s:20:"PECL ingres >= 1.1.0";i:2;s:45:"Get a cursor name for a given result resource";i:3;s:41:"string ingres_cursor ( resource $result )";}
a:4:{i:0;s:12:"ingres_errno";i:1;s:20:"PECL ingres >= 1.1.0";i:2;s:42:"Get the last Ingres error number generated";i:3;s:38:"int ingres_errno ([ resource $link ] )";}
a:4:{i:0;s:12:"ingres_error";i:1;s:20:"PECL ingres >= 1.1.0";i:2;s:59:"Get a meaningful error message for the last error generated";i:3;s:41:"string ingres_error ([ resource $link ] )";}
a:4:{i:0;s:18:"ingres_errsqlstate";i:1;s:20:"PECL ingres >= 1.1.0";i:2;s:42:"Get the last SQLSTATE error code generated";i:3;s:47:"string ingres_errsqlstate ([ resource $link ] )";}
a:4:{i:0;s:20:"ingres_escape_string";i:1;s:20:"PECL ingres >= 2.1.0";i:2;s:44:"Escape special characters for use in a query";i:3;s:70:"string ingres_escape_string ( resource $link , string $source_string )";}
a:4:{i:0;s:14:"ingres_execute";i:1;s:20:"PECL ingres >= 1.1.0";i:2;s:24:"Execute a prepared query";i:3;s:67:"array ingres_fetch_array ( resource $result [, int $result_type ] )";}
a:4:{i:0;s:18:"ingres_fetch_assoc";i:1;s:20:"PECL ingres >= 2.2.2";i:2;s:47:"Fetch a row of result into an associative array";i:3;s:45:"array ingres_fetch_assoc ( resource $result )";}
a:4:{i:0;s:19:"ingres_fetch_object";i:1;s:52:"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0";i:2;s:36:"Fetch a row of result into an object";i:3;s:69:"object ingres_fetch_object ( resource $result [, int $result_type ] )";}
a:4:{i:0;s:24:"ingres_fetch_proc_return";i:1;s:20:"PECL ingres >= 1.4.0";i:2;s:42:"Get the return value from a procedure call";i:3;s:49:"int ingres_fetch_proc_return ( resource $result )";}
a:4:{i:0;s:16:"ingres_fetch_row";i:1;s:52:"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0";i:2;s:46:"Fetch a row of result into an enumerated array";i:3;s:43:"array ingres_fetch_row ( resource $result )";}
a:4:{i:0;s:19:"ingres_field_length";i:1;s:52:"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0";i:2;s:25:"Get the length of a field";i:3;s:44:"bool ingres_free_result ( resource $result )";}
a:4:{i:0;s:17:"ingres_next_error";i:1;s:20:"PECL ingres >= 2.0.0";i:2;s:25:"Get the next Ingres error";i:3;s:90:"mixed ingres_query ( resource $link , string $query [, array $params [, string $types ]] )";}
a:4:{i:0;s:18:"ingres_result_seek";i:1;s:20:"PECL ingres >= 2.1.0";i:2;s:41:"Set the row position before fetching data";i:3;s:67:"boolean ingres_result_seek ( resource $result , integer $position )";}
a:4:{i:0;s:15:"ingres_rollback";i:1;s:52:"PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0";i:2;s:23:"Roll back a transaction";i:3;s:63:"bool ingres_set_environment ( resource $link , array $options )";}
a:4:{i:0;s:23:"ingres_unbuffered_query";i:1;s:54:"No version information available, might only be in SVN";i:2;s:38:"Send an unbuffered SQL query to Ingres";i:3;s:101:"mixed ingres_unbuffered_query ( resource $link , string $query [, array $params [, string $types ]] )";}
a:4:{i:0;s:19:"maxdb_connect_errno";i:1;s:17:"PECL maxdb >= 1.0";i:2;s:45:"Returns the error code from last connect call";i:3;s:32:"int maxdb_connect_errno ( void )";}
a:4:{i:0;s:19:"maxdb_connect_error";i:1;s:17:"PECL maxdb >= 1.0";i:2;s:54:"Returns a string description of the last connect error";i:3;s:35:"string maxdb_connect_error ( void )";}
a:4:{i:0;s:11:"maxdb_debug";i:1;s:17:"PECL maxdb >= 1.0";i:2;s:29:"Performs debugging operations";i:3;s:34:"void maxdb_debug ( string $debug )";}
a:4:{i:0;s:23:"maxdb_disable_rpl_parse";i:1;s:17:"PECL maxdb >= 1.0";i:2;s:17:"Disable RPL parse";i:3;s:34:"int maxdb_errno ( resource $link )";}
a:4:{i:0;s:21:"maxdb_get_client_info";i:1;s:17:"PECL maxdb >= 1.0";i:2;s:44:"Returns the MaxDB client version as a string";i:3;s:37:"string maxdb_get_client_info ( void )";}
a:4:{i:0;s:24:"maxdb_get_client_version";i:1;s:17:"PECL maxdb >= 1.0";i:2;s:21:"Get MaxDB client info";i:3;s:37:"int maxdb_get_client_version ( void )";}
a:4:{i:0;s:10:"maxdb_init";i:1;s:17:"PECL maxdb >= 1.0";i:2;s:73:"Initializes MaxDB and returns an resource for use with maxdb_real_connect";i:3;s:40:"mixed maxdb_insert_id ( resource $link )";}
a:4:{i:0;s:12:"maxdb_report";i:1;s:14:"PECL maxdb 1.0";i:2;s:45:"Enables or disables internal report functions";i:3;s:32:"bool maxdb_report ( int $flags )";}
a:4:{i:0;s:23:"maxdb_rpl_parse_enabled";i:1;s:17:"PECL maxdb >= 1.0";i:2;s:29:"Check if RPL parse is enabled";i:3;s:56:"bool maxdb_select_db ( resource $link , string $dbname )";}
a:4:{i:0;s:16:"maxdb_server_end";i:1;s:17:"PECL maxdb >= 1.0";i:2;s:29:"Shut down the embedded server";i:3;s:40:"string maxdb_sqlstate ( resource $link )";}
a:4:{i:0;s:19:"maxdb_stmt_sqlstate";i:1;s:17:"PECL maxdb >= 1.0";i:2;s:56:"Returns SQLSTATE error from previous statement operation";i:3;s:45:"string maxdb_stmt_sqlstate ( resource $stmt )";}
a:4:{i:0;s:17:"maxdb_thread_safe";i:1;s:23:"PECL maxdb >= 7.6.06.04";i:2;s:45:"Returns whether thread safety is given or not";i:3;s:35:"resource maxdb::use_result ( void )";}
a:4:{i:0;s:12:"Mongo::close";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:31:"Closes this database connection";i:3;s:36:"public boolean Mongo::close ( void )";}
a:4:{i:0;s:14:"Mongo::connect";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:29:"Connects to a database server";i:3;s:116:"Mongo::__construct ([ string $server = "mongodb://localhost:27017" [, array $options = array("connect" => TRUE) ]] )";}
a:4:{i:0;s:12:"Mongo::__get";i:1;s:18:"PECL mongo >=1.0.2";i:2;s:15:"Gets a database";i:3;s:46:"public MongoDB Mongo::__get ( string $dbname )";}
a:4:{i:0;s:15:"Mongo::getHosts";i:1;s:18:"PECL mongo >=1.1.0";i:2;s:49:"Updates status for all hosts associated with this";i:3;s:36:"public array Mongo::listDBs ( void )";}
a:4:{i:0;s:15:"Mongo::selectDB";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:15:"Gets a database";i:3;s:40:"public string Mongo::__toString ( void )";}
a:4:{i:0;s:21:"MongoDB::authenticate";i:1;s:18:"PECL mongo >=1.0.1";i:2;s:23:"Log in to this database";i:3;s:74:"public array MongoDB::authenticate ( string $username , string $password )";}
a:4:{i:0;s:16:"MongoDB::command";i:1;s:18:"PECL mongo >=0.9.2";i:2;s:26:"Execute a database command";i:3;s:45:"public array MongoDB::command ( array $data )";}
a:4:{i:0;s:20:"MongoDB::__construct";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:22:"Creates a new database";i:3;s:51:"MongoDB::__construct ( Mongo $conn , string $name )";}
a:4:{i:0;s:25:"MongoDB::createCollection";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:20:"Creates a collection";i:3;s:126:"public MongoCollection MongoDB::createCollection ( string $name [, bool $capped = FALSE [, int $size = 0 [, int $max = 0 ]]] )";}
a:4:{i:0;s:20:"MongoDB::createDBRef";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:28:"Creates a database reference";i:3;s:67:"public array MongoDB::createDBRef ( string $collection , mixed $a )";}
a:4:{i:0;s:13:"MongoDB::drop";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:19:"Drops this database";i:3;s:35:"public array MongoDB::drop ( void )";}
a:4:{i:0;s:16:"MongoDB::execute";i:1;s:18:"PECL mongo >=0.9.3";i:2;s:44:"Runs JavaScript code on the database server.";i:3;s:72:"public array MongoDB::execute ( mixed $code [, array $args = array() ] )";}
a:4:{i:0;s:14:"MongoDB::__get";i:1;s:18:"PECL mongo >=1.0.2";i:2;s:17:"Gets a collection";i:3;s:54:"public MongoCollection MongoDB::__get ( string $name )";}
a:4:{i:0;s:17:"MongoDB::getDBRef";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:55:"Fetches the document pointed to by a database reference";i:3;s:45:"public array MongoDB::getDBRef ( array $ref )";}
a:4:{i:0;s:18:"MongoDB::getGridFS";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:62:"Fetches toolkit for dealing with files stored in this database";i:3;s:66:"public MongoGridFS MongoDB::getGridFS ([ string $prefix = "fs" ] )";}
a:4:{i:0;s:21:"MongoDB::getSlaveOkay";i:1;s:18:"PECL mongo >=1.1.0";i:2;s:39:"Get slaveOkay setting for this database";i:3;s:40:"public array MongoDB::lastError ( void )";}
a:4:{i:0;s:24:"MongoDB::listCollections";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:42:"Get a list of collections in this database";i:3;s:46:"public array MongoDB::listCollections ( void )";}
a:4:{i:0;s:18:"MongoDB::prevError";i:1;s:18:"PECL mongo >=0.9.5";i:2;s:60:"Checks for the last error thrown during a database operation";i:3;s:111:"public array MongoDB::repair ([ bool $preserve_cloned_files = FALSE [, bool $backup_original_files = FALSE ]] )";}
a:4:{i:0;s:19:"MongoDB::resetError";i:1;s:18:"PECL mongo >=0.9.5";i:2;s:41:"Clears any flagged errors on the database";i:3;s:42:"public string MongoDB::__toString ( void )";}
a:4:{i:0;s:28:"MongoCollection::batchInsert";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:47:"Inserts multiple documents into this collection";i:3;s:84:"public mixed MongoCollection::batchInsert ( array $a [, array $options = array() ] )";}
a:4:{i:0;s:28:"MongoCollection::__construct";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:24:"Creates a new collection";i:3;s:100:"public int MongoCollection::count ([ array $query = array() [, int $limit = 0 [, int $skip = 0 ]]] )";}
a:4:{i:0;s:28:"MongoCollection::createDBRef";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:28:"Creates a database reference";i:3;s:54:"public array MongoCollection::createDBRef ( array $a )";}
a:4:{i:0;s:28:"MongoCollection::deleteIndex";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:37:"Deletes an index from this collection";i:3;s:0:"";}
a:4:{i:0;s:30:"MongoCollection::deleteIndexes";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:38:"Delete all indices for this collection";i:3;s:52:"public array MongoCollection::deleteIndexes ( void )";}
a:4:{i:0;s:21:"MongoCollection::drop";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:21:"Drops this collection";i:3;s:43:"public array MongoCollection::drop ( void )";}
a:4:{i:0;s:21:"MongoCollection::find";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:22:"Querys this collection";i:3;s:98:"public MongoCursor MongoCollection::find ([ array $query = array() [, array $fields = array() ]] )";}
a:4:{i:0;s:22:"MongoCollection::__get";i:1;s:18:"PECL mongo >=1.0.2";i:2;s:17:"Gets a collection";i:3;s:62:"public MongoCollection MongoCollection::__get ( string $name )";}
a:4:{i:0;s:25:"MongoCollection::getDBRef";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:55:"Fetches the document pointed to by a database reference";i:3;s:53:"public array MongoCollection::getDBRef ( array $ref )";}
a:4:{i:0;s:29:"MongoCollection::getIndexInfo";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:51:"Returns an array of index names for this collection";i:3;s:47:"public string MongoCollection::getName ( void )";}
a:4:{i:0;s:29:"MongoCollection::getSlaveOkay";i:1;s:18:"PECL mongo >=1.1.0";i:2;s:41:"Get slaveOkay setting for this collection";i:3;s:118:"public array MongoCollection::group ( mixed $keys , array $initial , MongoCode $reduce [, array $options = array() ] )";}
a:4:{i:0;s:23:"MongoCollection::insert";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:36:"Inserts an array into the collection";i:3;s:79:"public mixed MongoCollection::insert ( array $a [, array $options = array() ] )";}
a:4:{i:0;s:23:"MongoCollection::remove";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:35:"Remove records from this collection";i:3;s:86:"public mixed MongoCollection::remove ( array $criteria [, array $options = array() ] )";}
a:4:{i:0;s:21:"MongoCollection::save";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:34:"Saves an object to this collection";i:3;s:77:"public mixed MongoCollection::save ( array $a [, array $options = array() ] )";}
a:4:{i:0;s:29:"MongoCollection::setSlaveOkay";i:1;s:18:"PECL mongo >=1.1.0";i:2;s:44:"Change slaveOkay setting for this collection";i:3;s:50:"public string MongoCollection::__toString ( void )";}
a:4:{i:0;s:23:"MongoCollection::update";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:40:"Update records based on a given criteria";i:3;s:104:"public boolean MongoCollection::update ( array $criteria , array $newobj [, array $options = array() ] )";}
a:4:{i:0;s:25:"MongoCollection::validate";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:25:"Validates this collection";i:3;s:69:"public array MongoCollection::validate ([ bool $scan_data = FALSE ] )";}
a:4:{i:0;s:22:"MongoCursor::batchSize";i:1;s:19:"PECL mongo >=1.0.11";i:2;s:50:"Sets the number of results returned per result set";i:3;s:54:"public MongoCursor MongoCursor::batchSize ( int $num )";}
a:4:{i:0;s:24:"MongoCursor::__construct";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:19:"Create a new cursor";i:3;s:63:"public int MongoCursor::count ([ boolean $foundOnly = FALSE ] )";}
a:4:{i:0;s:20:"MongoCursor::current";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:27:"Returns the current element";i:3;s:42:"public array MongoCursor::explain ( void )";}
a:4:{i:0;s:19:"MongoCursor::fields";i:1;s:18:"PECL mongo >=1.0.6";i:2;s:27:"Sets the fields for a query";i:3;s:51:"public MongoCursor MongoCursor::fields ( array $f )";}
a:4:{i:0;s:20:"MongoCursor::hasNext";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:52:"Checks if there are any more elements in this cursor";i:3;s:39:"public array MongoCursor::info ( void )";}
a:4:{i:0;s:18:"MongoCursor::limit";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:37:"Limits the number of results returned";i:3;s:40:"public void MongoCursor::rewind ( void )";}
a:4:{i:0;s:17:"MongoCursor::skip";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:25:"Skips a number of results";i:3;s:69:"public MongoCursor MongoCursor::slaveOkay ([ boolean $okay = true ] )";}
a:4:{i:0;s:21:"MongoCursor::snapshot";i:1;s:18:"PECL mongo >=0.9.4";i:2;s:31:"Use snapshot mode for the query";i:3;s:54:"public MongoCursor MongoCursor::sort ( array $fields )";}
a:4:{i:0;s:21:"MongoCursor::tailable";i:1;s:18:"PECL mongo >=0.9.4";i:2;s:74:"Sets whether this cursor will be left open after fetching the last results";i:3;s:68:"public MongoCursor MongoCursor::tailable ([ boolean $tail = true ] )";}
a:4:{i:0;s:18:"MongoCursor::valid";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:47:"Checks if the cursor is reading a valid result.";i:3;s:42:"public boolean MongoCursor::valid ( void )";}
a:4:{i:0;s:20:"MongoId::__construct";i:1;s:19:"PECL mongo >= 0.8.0";i:2;s:16:"Creates a new id";i:3;s:45:"MongoId::__construct ([ string $id = NULL ] )";}
a:4:{i:0;s:15:"MongoId::getInc";i:1;s:20:"PECL mongo >= 1.0.11";i:2;s:44:"Gets the incremented value to create this id";i:3;s:57:"publicstaticMongoId MongoId::__set_state ( array $props )";}
a:4:{i:0;s:19:"MongoId::__toString";i:1;s:19:"PECL mongo >= 0.8.0";i:2;s:47:"Returns a hexidecimal representation of this id";i:3;s:42:"public string MongoId::__toString ( void )";}
a:4:{i:0;s:22:"MongoCode::__construct";i:1;s:19:"PECL mongo >= 0.8.3";i:2;s:25:"Creates a new code object";i:3;s:67:"MongoCode::__construct ( string $code [, array $scope = array() ] )";}
a:4:{i:0;s:21:"MongoCode::__toString";i:1;s:19:"PECL mongo >= 0.8.3";i:2;s:29:"Returns this code as a string";i:3;s:44:"public string MongoCode::__toString ( void )";}
a:4:{i:0;s:22:"MongoDate::__construct";i:1;s:19:"PECL mongo >= 0.8.1";i:2;s:19:"Creates a new date.";i:3;s:54:"MongoDate::__construct ([ long $sec [, long $usec ]] )";}
a:4:{i:0;s:21:"MongoDate::__toString";i:1;s:19:"PECL mongo >= 0.8.1";i:2;s:44:"Returns a string representation of this date";i:3;s:43:"publicstring MongoDate::__toString ( void )";}
a:4:{i:0;s:23:"MongoRegex::__construct";i:1;s:19:"PECL mongo >= 0.8.1";i:2;s:32:"Creates a new regular expression";i:3;s:41:"MongoRegex::__construct ( string $regex )";}
a:4:{i:0;s:22:"MongoRegex::__toString";i:1;s:19:"PECL mongo >= 0.8.1";i:2;s:50:"A string representation of this regular expression";i:3;s:45:"public string MongoRegex::__toString ( void )";}
a:4:{i:0;s:25:"MongoBinData::__construct";i:1;s:19:"PECL mongo >= 0.8.1";i:2;s:33:"Creates a new binary data object.";i:3;s:47:"public string MongoBinData::__toString ( void )";}
a:4:{i:0;s:18:"MongoDBRef::create";i:1;s:19:"PECL mongo >= 0.9.0";i:2;s:32:"Creates a new database reference";i:3;s:95:"public static array MongoDBRef::create ( string $collection , mixed $id [, string $database ] )";}
a:4:{i:0;s:15:"MongoDBRef::get";i:1;s:19:"PECL mongo >= 0.9.0";i:2;s:44:"Fetches the object pointed to by a reference";i:3;s:64:"public static array MongoDBRef::get ( MongoDB $db , array $ref )";}
a:4:{i:0;s:17:"MongoDBRef::isRef";i:1;s:19:"PECL mongo >= 0.9.0";i:2;s:42:"Checks if an array is a database reference";i:3;s:54:"public static boolean MongoDBRef::isRef ( mixed $ref )";}
a:4:{i:0;s:27:"MongoTimestamp::__construct";i:1;s:19:"PECL mongo >= 1.0.1";i:2;s:24:"Creates a new timestamp.";i:3;s:48:"publicstring MongoTimestamp::__toString ( void )";}
a:4:{i:0;s:24:"MongoGridFS::__construct";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:28:"Creates new file collections";i:3;s:73:"public MongoGridFSFile MongoGridFS::findOne ([ mixed $query = array() ] )";}
a:4:{i:0;s:16:"MongoGridFS::get";i:1;s:18:"PECL mongo >=1.0.8";i:2;s:33:"Retrieve a file from the database";i:3;s:76:"public mixed MongoGridFS::storeUpload ( string $name [, string $filename ] )";}
a:4:{i:0;s:28:"MongoGridfsFile::__construct";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:24:"Create a new GridFS file";i:3;s:48:"public string MongoGridFSFile::getBytes ( void )";}
a:4:{i:0;s:22:"MongoGridFSFile::write";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:34:"Writes this file to the filesystem";i:3;s:64:"public int MongoGridFSFile::write ([ string $filename = NULL ] )";}
a:4:{i:0;s:30:"MongoGridFSCursor::__construct";i:1;s:18:"PECL mongo >=0.9.0";i:2;s:19:"Create a new cursor";i:3;s:45:"public string MongoGridFSCursor::key ( void )";}
a:4:{i:0;s:11:"bson_decode";i:1;s:18:"PECL mongo >=1.0.1";i:2;s:43:"Deserializes a BSON object into a PHP array";i:3;s:34:"array bson_decode ( string $bson )";}
a:4:{i:0;s:11:"bson_encode";i:1;s:18:"PECL mongo >=1.0.1";i:2;s:44:"Serializes a PHP variable into a BSON string";i:3;s:38:"string bson_encode ( mixed $anything )";}
a:4:{i:0;s:18:"msql_affected_rows";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"Returns number of affected rows";i:3;s:65:"array msql_fetch_array ( resource $result [, int $result_type ] )";}
a:4:{i:0;s:16:"msql_fetch_field";i:1;s:12:"PHP 4, PHP 5";i:2;s:21:"Get field information";i:3;s:45:"object msql_fetch_object ( resource $result )";}
a:4:{i:0;s:14:"msql_fetch_row";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Get row as enumerated array";i:3;s:41:"array msql_fetch_row ( resource $result )";}
a:4:{i:0;s:16:"msql_field_flags";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Get field flags";i:3;s:68:"resource msql_query ( string $query [, resource $link_identifier ] )";}
a:4:{i:0;s:11:"msql_result";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Get result data";i:3;s:76:"bool msql_select_db ( string $database_name [, resource $link_identifier ] )";}
a:4:{i:0;s:10:"mssql_bind";i:1;s:42:"PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1";i:2;s:67:"Adds a parameter to a stored procedure or a remote stored procedure";i:3;s:157:"bool mssql_bind ( resource $stmt , string $param_name , mixed &$var , int $type [, bool $is_output = false [, bool $is_null = false [, int $maxlen = -1 ]]] )";}
a:4:{i:0;s:11:"mssql_close";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:30:"Close MS SQL Server connection";i:3;s:49:"bool mssql_close ([ resource $link_identifier ] )";}
a:4:{i:0;s:13:"mssql_connect";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:29:"Open MS SQL server connection";i:3;s:109:"resource mssql_connect ([ string $servername [, string $username [, string $password [, bool $new_link ]]]] )";}
a:4:{i:0;s:15:"mssql_data_seek";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:26:"Moves internal row pointer";i:3;s:70:"bool mssql_data_seek ( resource $result_identifier , int $row_number )";}
a:4:{i:0;s:13:"mssql_execute";i:1;s:42:"PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1";i:2;s:55:"Executes a stored procedure on a MS SQL server database";i:3;s:70:"mixed mssql_execute ( resource $stmt [, bool $skip_results = false ] )";}
a:4:{i:0;s:17:"mssql_fetch_assoc";i:1;s:42:"PHP 4 >= 4.2.0, PHP 5, PECL odbtp >= 1.1.1";i:2;s:61:"Returns an associative array of the current row in the result";i:3;s:47:"array mssql_fetch_assoc ( resource $result_id )";}
a:4:{i:0;s:17:"mssql_fetch_batch";i:1;s:42:"PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:33:"Returns the next batch of records";i:3;s:42:"int mssql_fetch_batch ( resource $result )";}
a:4:{i:0;s:17:"mssql_fetch_field";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:21:"Get field information";i:3;s:73:"object mssql_fetch_field ( resource $result [, int $field_offset = -1 ] )";}
a:4:{i:0;s:18:"mssql_fetch_object";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:19:"Fetch row as object";i:3;s:46:"object mssql_fetch_object ( resource $result )";}
a:4:{i:0;s:15:"mssql_fetch_row";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:27:"Get row as enumerated array";i:3;s:42:"array mssql_fetch_row ( resource $result )";}
a:4:{i:0;s:18:"mssql_field_length";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:25:"Get the length of a field";i:3;s:65:"int mssql_field_length ( resource $result [, int $offset = -1 ] )";}
a:4:{i:0;s:16:"mssql_field_name";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:23:"Get the name of a field";i:3;s:66:"string mssql_field_name ( resource $result [, int $offset = -1 ] )";}
a:4:{i:0;s:16:"mssql_field_seek";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:35:"Seeks to the specified field offset";i:3;s:62:"bool mssql_field_seek ( resource $result , int $field_offset )";}
a:4:{i:0;s:16:"mssql_field_type";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:24:"Gets the type of a field";i:3;s:66:"string mssql_field_type ( resource $result [, int $offset = -1 ] )";}
a:4:{i:0;s:17:"mssql_free_result";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:18:"Free result memory";i:3;s:43:"bool mssql_free_result ( resource $result )";}
a:4:{i:0;s:20:"mssql_free_statement";i:1;s:42:"PHP 4 >= 4.3.2, PHP 5, PECL odbtp >= 1.1.1";i:2;s:21:"Free statement memory";i:3;s:44:"bool mssql_free_statement ( resource $stmt )";}
a:4:{i:0;s:22:"mssql_get_last_message";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:40:"Returns the last message from the server";i:3;s:38:"string mssql_get_last_message ( void )";}
a:4:{i:0;s:17:"mssql_guid_string";i:1;s:42:"PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1";i:2;s:42:"Converts a 16 byte binary GUID to a string";i:3;s:75:"string mssql_guid_string ( string $binary [, bool $short_format = false ] )";}
a:4:{i:0;s:10:"mssql_init";i:1;s:42:"PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1";i:2;s:59:"Initializes a stored procedure or a remote stored procedure";i:3;s:70:"resource mssql_init ( string $sp_name [, resource $link_identifier ] )";}
a:4:{i:0;s:24:"mssql_min_error_severity";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:31:"Sets the minimum error severity";i:3;s:47:"void mssql_min_error_severity ( int $severity )";}
a:4:{i:0;s:26:"mssql_min_message_severity";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:33:"Sets the minimum message severity";i:3;s:49:"void mssql_min_message_severity ( int $severity )";}
a:4:{i:0;s:17:"mssql_next_result";i:1;s:42:"PHP 4 >= 4.0.5, PHP 5, PECL odbtp >= 1.1.1";i:2;s:51:"Move the internal result pointer to the next result";i:3;s:46:"bool mssql_next_result ( resource $result_id )";}
a:4:{i:0;s:16:"mssql_num_fields";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:35:"Gets the number of fields in result";i:3;s:41:"int mssql_num_fields ( resource $result )";}
a:4:{i:0;s:14:"mssql_num_rows";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:33:"Gets the number of rows in result";i:3;s:39:"int mssql_num_rows ( resource $result )";}
a:4:{i:0;s:14:"mssql_pconnect";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:33:"Open persistent MS SQL connection";i:3;s:110:"resource mssql_pconnect ([ string $servername [, string $username [, string $password [, bool $new_link ]]]] )";}
a:4:{i:0;s:11:"mssql_query";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:17:"Send MS SQL query";i:3;s:90:"mixed mssql_query ( string $query [, resource $link_identifier [, int $batch_size = 0 ]] )";}
a:4:{i:0;s:12:"mssql_result";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:15:"Get result data";i:3;s:66:"string mssql_result ( resource $result , int $row , mixed $field )";}
a:4:{i:0;s:19:"mssql_rows_affected";i:1;s:42:"PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:51:"Returns the number of records affected by the query";i:3;s:53:"int mssql_rows_affected ( resource $link_identifier )";}
a:4:{i:0;s:15:"mssql_select_db";i:1;s:33:"PHP 4, PHP 5, PECL odbtp >= 1.1.1";i:2;s:22:"Select MS SQL database";i:3;s:77:"bool mssql_select_db ( string $database_name [, resource $link_identifier ] )";}
a:4:{i:0;s:19:"mysql_affected_rows";i:1;s:12:"PHP 4, PHP 5";i:2;s:55:"Get number of affected rows in previous MySQL operation";i:3;s:56:"int mysql_affected_rows ([ resource $link_identifier ] )";}
a:4:{i:0;s:21:"mysql_client_encoding";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:37:"Returns the name of the character set";i:3;s:61:"string mysql_client_encoding ([ resource $link_identifier ] )";}
a:4:{i:0;s:11:"mysql_close";i:1;s:12:"PHP 4, PHP 5";i:2;s:22:"Close MySQL connection";i:3;s:49:"bool mysql_close ([ resource $link_identifier ] )";}
a:4:{i:0;s:13:"mysql_connect";i:1;s:12:"PHP 4, PHP 5";i:2;s:35:"Open a connection to a MySQL Server";i:3;s:239:"resource mysql_connect ([ string $server = ini_get("mysql.default_host") [, string $username = ini_get("mysql.default_user") [, string $password = ini_get("mysql.default_password") [, bool $new_link = false [, int $client_flags = 0 ]]]]] )";}
a:4:{i:0;s:15:"mysql_create_db";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Create a MySQL database";i:3;s:77:"bool mysql_create_db ( string $database_name [, resource $link_identifier ] )";}
a:4:{i:0;s:15:"mysql_data_seek";i:1;s:12:"PHP 4, PHP 5";i:2;s:28:"Move internal result pointer";i:3;s:59:"bool mysql_data_seek ( resource $result , int $row_number )";}
a:4:{i:0;s:13:"mysql_db_name";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Get result data";i:3;s:70:"string mysql_db_name ( resource $result , int $row [, mixed $field ] )";}
a:4:{i:0;s:14:"mysql_db_query";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Send a MySQL query";i:3;s:91:"resource mysql_db_query ( string $database , string $query [, resource $link_identifier ] )";}
a:4:{i:0;s:11:"mysql_errno";i:1;s:12:"PHP 4, PHP 5";i:2;s:78:"Returns the numerical value of the error message from previous MySQL operation";i:3;s:48:"int mysql_errno ([ resource $link_identifier ] )";}
a:4:{i:0;s:11:"mysql_error";i:1;s:12:"PHP 4, PHP 5";i:2;s:67:"Returns the text of the error message from previous MySQL operation";i:3;s:51:"string mysql_error ([ resource $link_identifier ] )";}
a:4:{i:0;s:19:"mysql_escape_string";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:41:"Escapes a string for use in a mysql_query";i:3;s:55:"string mysql_escape_string ( string $unescaped_string )";}
a:4:{i:0;s:17:"mysql_fetch_assoc";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:42:"Fetch a result row as an associative array";i:3;s:44:"array mysql_fetch_assoc ( resource $result )";}
a:4:{i:0;s:17:"mysql_fetch_field";i:1;s:12:"PHP 4, PHP 5";i:2;s:60:"Get column information from a result and return as an object";i:3;s:72:"object mysql_fetch_field ( resource $result [, int $field_offset = 0 ] )";}
a:4:{i:0;s:19:"mysql_fetch_lengths";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Get the length of each output in a result";i:3;s:46:"array mysql_fetch_lengths ( resource $result )";}
a:4:{i:0;s:18:"mysql_fetch_object";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"Fetch a result row as an object";i:3;s:88:"object mysql_fetch_object ( resource $result [, string $class_name [, array $params ]] )";}
a:4:{i:0;s:15:"mysql_fetch_row";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Get a result row as an enumerated array";i:3;s:42:"array mysql_fetch_row ( resource $result )";}
a:4:{i:0;s:17:"mysql_field_flags";i:1;s:12:"PHP 4, PHP 5";i:2;s:61:"Get the flags associated with the specified field in a result";i:3;s:65:"string mysql_field_flags ( resource $result , int $field_offset )";}
a:4:{i:0;s:15:"mysql_field_len";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Returns the length of the specified field";i:3;s:60:"int mysql_field_len ( resource $result , int $field_offset )";}
a:4:{i:0;s:16:"mysql_field_name";i:1;s:12:"PHP 4, PHP 5";i:2;s:47:"Get the name of the specified field in a result";i:3;s:64:"string mysql_field_name ( resource $result , int $field_offset )";}
a:4:{i:0;s:16:"mysql_field_seek";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Set result pointer to a specified field offset";i:3;s:65:"string mysql_field_table ( resource $result , int $field_offset )";}
a:4:{i:0;s:16:"mysql_field_type";i:1;s:12:"PHP 4, PHP 5";i:2;s:47:"Get the type of the specified field in a result";i:3;s:64:"string mysql_field_type ( resource $result , int $field_offset )";}
a:4:{i:0;s:17:"mysql_free_result";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Free result memory";i:3;s:43:"bool mysql_free_result ( resource $result )";}
a:4:{i:0;s:21:"mysql_get_client_info";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:21:"Get MySQL client info";i:3;s:37:"string mysql_get_client_info ( void )";}
a:4:{i:0;s:19:"mysql_get_host_info";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:19:"Get MySQL host info";i:3;s:59:"string mysql_get_host_info ([ resource $link_identifier ] )";}
a:4:{i:0;s:20:"mysql_get_proto_info";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:23:"Get MySQL protocol info";i:3;s:57:"int mysql_get_proto_info ([ resource $link_identifier ] )";}
a:4:{i:0;s:21:"mysql_get_server_info";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:21:"Get MySQL server info";i:3;s:61:"string mysql_get_server_info ([ resource $link_identifier ] )";}
a:4:{i:0;s:10:"mysql_info";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:43:"Get information about the most recent query";i:3;s:52:"int mysql_insert_id ([ resource $link_identifier ] )";}
a:4:{i:0;s:14:"mysql_list_dbs";i:1;s:12:"PHP 4, PHP 5";i:2;s:42:"List databases available on a MySQL server";i:3;s:56:"resource mysql_list_dbs ([ resource $link_identifier ] )";}
a:4:{i:0;s:17:"mysql_list_fields";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"List MySQL table fields";i:3;s:104:"resource mysql_list_fields ( string $database_name , string $table_name [, resource $link_identifier ] )";}
a:4:{i:0;s:20:"mysql_list_processes";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:20:"List MySQL processes";i:3;s:62:"resource mysql_list_processes ([ resource $link_identifier ] )";}
a:4:{i:0;s:17:"mysql_list_tables";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"List tables in a MySQL database";i:3;s:78:"resource mysql_list_tables ( string $database [, resource $link_identifier ] )";}
a:4:{i:0;s:16:"mysql_num_fields";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Get number of fields in result";i:3;s:41:"int mysql_num_fields ( resource $result )";}
a:4:{i:0;s:14:"mysql_num_rows";i:1;s:12:"PHP 4, PHP 5";i:2;s:28:"Get number of rows in result";i:3;s:39:"int mysql_num_rows ( resource $result )";}
a:4:{i:0;s:14:"mysql_pconnect";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Open a persistent connection to a MySQL server";i:3;s:209:"resource mysql_pconnect ([ string $server = ini_get("mysql.default_host") [, string $username = ini_get("mysql.default_user") [, string $password = ini_get("mysql.default_password") [, int $client_flags ]]]] )";}
a:4:{i:0;s:10:"mysql_ping";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:63:"Ping a server connection or reconnect if there is no connection";i:3;s:48:"bool mysql_ping ([ resource $link_identifier ] )";}
a:4:{i:0;s:11:"mysql_query";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Send a MySQL query";i:3;s:69:"resource mysql_query ( string $query [, resource $link_identifier ] )";}
a:4:{i:0;s:24:"mysql_real_escape_string";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:66:"Escapes special characters in a string for use in an SQL statement";i:3;s:91:"string mysql_real_escape_string ( string $unescaped_string [, resource $link_identifier ] )";}
a:4:{i:0;s:12:"mysql_result";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Get result data";i:3;s:73:"string mysql_result ( resource $result , int $row [, mixed $field = 0 ] )";}
a:4:{i:0;s:15:"mysql_select_db";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Select a MySQL database";i:3;s:77:"bool mysql_select_db ( string $database_name [, resource $link_identifier ] )";}
a:4:{i:0;s:17:"mysql_set_charset";i:1;s:14:"PHP 5 >= 5.2.3";i:2;s:29:"Sets the client character set";i:3;s:50:"string mysql_stat ([ resource $link_identifier ] )";}
a:4:{i:0;s:15:"mysql_tablename";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Get table name of field";i:3;s:52:"string mysql_tablename ( resource $result , int $i )";}
a:4:{i:0;s:15:"mysql_thread_id";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:28:"Return the current thread ID";i:3;s:52:"int mysql_thread_id ([ resource $link_identifier ] )";}
a:4:{i:0;s:22:"mysql_unbuffered_query";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:74:"Send an SQL query to MySQL without fetching and buffering the result rows.";i:3;s:80:"resource mysql_unbuffered_query ( string $query [, resource $link_identifier ] )";}
a:4:{i:0;s:27:"mysqli_warning::__construct";i:1;s:54:"No version information available, might only be in SVN";i:2;s:23:"The __construct purpose";i:3;s:41:"public void mysqli_warning::next ( void )";}
a:4:{i:0;s:24:"mysqli_disable_rpl_parse";i:1;s:5:"PHP 5";i:2;s:17:"Disable RPL parse";i:3;s:37:"array mysqli_get_cache_stats ( void )";}
a:4:{i:0;s:13:"mysqli_report";i:1;s:5:"PHP 5";i:2;s:45:"Enables or disables internal report functions";i:3;s:33:"bool mysqli_report ( int $flags )";}
a:4:{i:0;s:24:"mysqli_rpl_parse_enabled";i:1;s:5:"PHP 5";i:2;s:29:"Check if RPL parse is enabled";i:3;s:56:"bool mysqli_slave_query ( mysqli $link , string $query )";}
a:4:{i:0;s:25:"mysqlnd_qc_change_handler";i:1;s:54:"No version information available, might only be in SVN";i:2;s:30:"Change current storage handler";i:3;s:49:"bool mysqlnd_qc_change_handler ( mixed $handler )";}
a:4:{i:0;s:22:"mysqlnd_qc_clear_cache";i:1;s:54:"No version information available, might only be in SVN";i:2;s:24:"Flush all cache contents";i:3;s:40:"array mysqlnd_qc_get_cache_info ( void )";}
a:4:{i:0;s:25:"mysqlnd_qc_get_core_stats";i:1;s:54:"No version information available, might only be in SVN";i:2;s:51:"Statistics collected by the core of the query cache";i:3;s:40:"array mysqlnd_qc_get_core_stats ( void )";}
a:4:{i:0;s:22:"mysqlnd_qc_get_handler";i:1;s:54:"No version information available, might only be in SVN";i:2;s:43:"Returns a list of available storage handler";i:3;s:37:"array mysqlnd_qc_get_handler ( void )";}
a:4:{i:0;s:30:"mysqlnd_qc_get_query_trace_log";i:1;s:54:"No version information available, might only be in SVN";i:2;s:63:"Returns a backtrace for each query inspected by the query cache";i:3;s:45:"array mysqlnd_qc_get_query_trace_log ( void )";}
a:4:{i:0;s:16:"oci_bind_by_name";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:45:"Binds a PHP variable to an Oracle placeholder";i:3;s:132:"bool oci_bind_by_name ( resource $statement , string $bv_name , mixed &$variable [, int $maxlength = -1 [, int $type = SQLT_CHR ]] )";}
a:4:{i:0;s:10:"oci_cancel";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:27:"Cancels reading from cursor";i:3;s:39:"bool oci_close ( resource $connection )";}
a:4:{i:0;s:10:"oci_commit";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:44:"Commits the outstanding database transaction";i:3;s:40:"bool oci_commit ( resource $connection )";}
a:4:{i:0;s:11:"oci_connect";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:29:"Connect to an Oracle database";i:3;s:139:"resource oci_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] )";}
a:4:{i:0;s:18:"oci_define_by_name";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:57:"Associates a PHP variable with a column for query fetches";i:3;s:114:"bool oci_define_by_name ( resource $statement , string $column_name , mixed &$variable [, int $type = SQLT_CHR ] )";}
a:4:{i:0;s:9:"oci_error";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:28:"Returns the last error found";i:3;s:41:"array oci_error ([ resource $resource ] )";}
a:4:{i:0;s:11:"oci_execute";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:20:"Executes a statement";i:3;s:79:"bool oci_execute ( resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS ] )";}
a:4:{i:0;s:15:"oci_fetch_array";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:69:"Returns the next row from a query as an associative or numeric array ";i:3;s:60:"array oci_fetch_array ( resource $statement [, int $mode ] )";}
a:4:{i:0;s:15:"oci_fetch_assoc";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:57:"Returns the next row from a query as an associative array";i:3;s:45:"array oci_fetch_assoc ( resource $statement )";}
a:4:{i:0;s:16:"oci_fetch_object";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:46:"Returns the next row from a query as an object";i:3;s:47:"object oci_fetch_object ( resource $statement )";}
a:4:{i:0;s:13:"oci_fetch_row";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:52:"Returns the next row from a query as a numeric array";i:3;s:43:"array oci_fetch_row ( resource $statement )";}
a:4:{i:0;s:9:"oci_fetch";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:55:"Fetches the next row from a query into internal buffers";i:3;s:38:"bool oci_fetch ( resource $statement )";}
a:4:{i:0;s:14:"oci_field_name";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:46:"Returns the name of a field from the statement";i:3;s:58:"string oci_field_name ( resource $statement , int $field )";}
a:4:{i:0;s:19:"oci_field_precision";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:29:"Tell the precision of a field";i:3;s:60:"int oci_field_precision ( resource $statement , int $field )";}
a:4:{i:0;s:15:"oci_field_scale";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:27:"Tell the scale of the field";i:3;s:56:"int oci_field_scale ( resource $statement , int $field )";}
a:4:{i:0;s:18:"oci_field_type_raw";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:42:"Tell the raw Oracle data type of the field";i:3;s:57:"mixed oci_field_type ( resource $statement , int $field )";}
a:4:{i:0;s:18:"oci_free_statement";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:55:"Frees all resources associated with statement or cursor";i:3;s:143:"resource oci_new_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] )";}
a:4:{i:0;s:18:"oci_new_descriptor";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:46:"Initializes a new empty LOB or FILE descriptor";i:3;s:82:"OCI-Lob oci_new_descriptor ( resource $connection [, int $type = OCI_DTYPE_LOB ] )";}
a:4:{i:0;s:14:"oci_num_fields";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:51:"Returns the number of result columns in a statement";i:3;s:42:"int oci_num_fields ( resource $statement )";}
a:4:{i:0;s:12:"oci_num_rows";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:58:"Returns number of rows affected during statement execution";i:3;s:40:"int oci_num_rows ( resource $statement )";}
a:4:{i:0;s:9:"oci_parse";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:42:"Prepares an Oracle statement for execution";i:3;s:62:"resource oci_parse ( resource $connection , string $sql_text )";}
a:4:{i:0;s:12:"oci_pconnect";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:59:"Connect to an Oracle database using a persistent connection";i:3;s:42:"bool oci_rollback ( resource $connection )";}
a:4:{i:0;s:18:"oci_server_version";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:22:"Returns server version";i:3;s:50:"string oci_server_version ( resource $connection )";}
a:4:{i:0;s:14:"oci_set_action";i:1;s:29:"PHP 5.3.2, PECL OCI8 >= 1.4.0";i:2;s:20:"Sets the action name";i:3;s:66:"bool oci_set_action ( resource $connection , string $action_name )";}
a:4:{i:0;s:25:"oci_set_client_identifier";i:1;s:29:"PHP 5.3.2, PECL OCI8 >= 1.4.0";i:2;s:26:"Sets the client identifier";i:3;s:83:"bool oci_set_client_identifier ( resource $connection , string $client_identifier )";}
a:4:{i:0;s:19:"oci_set_client_info";i:1;s:29:"PHP 5.3.2, PECL OCI8 >= 1.4.0";i:2;s:27:"Sets the client information";i:3;s:71:"bool oci_set_client_info ( resource $connection , string $client_info )";}
a:4:{i:0;s:15:"oci_set_edition";i:1;s:29:"PHP 5.3.2, PECL OCI8 >= 1.4.0";i:2;s:25:"Sets the database edition";i:3;s:40:"bool oci_set_edition ( string $edition )";}
a:4:{i:0;s:19:"oci_set_module_name";i:1;s:29:"PHP 5.3.2, PECL OCI8 >= 1.4.0";i:2;s:20:"Sets the module name";i:3;s:71:"bool oci_set_module_name ( resource $connection , string $module_name )";}
a:4:{i:0;s:16:"oci_set_prefetch";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:47:"Sets number of rows to be prefetched by queries";i:3;s:57:"bool oci_set_prefetch ( resource $statement , int $rows )";}
a:4:{i:0;s:18:"oci_statement_type";i:1;s:25:"PHP 5, PECL OCI8 >= 1.1.0";i:2;s:31:"Returns the type of a statement";i:3;s:49:"string oci_statement_type ( resource $statement )";}
a:4:{i:0;s:13:"ovrimos_close";i:1;s:30:"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5";i:2;s:32:"Closes the connection to ovrimos";i:3;s:89:"int ovrimos_connect ( string $host , string $dborport , string $user , string $password )";}
a:4:{i:0;s:14:"ovrimos_cursor";i:1;s:30:"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5";i:2;s:30:"Returns the name of the cursor";i:3;s:101:"bool ovrimos_fetch_into ( int $result_id , array &$result_array [, string $how [, int $rownumber ]] )";}
a:4:{i:0;s:17:"ovrimos_fetch_row";i:1;s:30:"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5";i:2;s:33:"Fetches a row from the result set";i:3;s:75:"bool ovrimos_fetch_row ( int $result_id [, int $how [, int $row_number ]] )";}
a:4:{i:0;s:17:"ovrimos_field_len";i:1;s:30:"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5";i:2;s:39:"Returns the length of the output column";i:3;s:58:"int ovrimos_prepare ( int $connection_id , string $query )";}
a:4:{i:0;s:18:"ovrimos_result_all";i:1;s:30:"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5";i:2;s:44:"Prints the whole result set as an HTML table";i:3;s:61:"int ovrimos_result_all ( int $result_id [, string $format ] )";}
a:4:{i:0;s:14:"ovrimos_result";i:1;s:30:"PHP 4 >= 4.0.3, PHP 5 <= 5.0.5";i:2;s:27:"Retrieves the output column";i:3;s:44:"bool ovrimos_rollback ( int $connection_id )";}
a:4:{i:0;s:8:"px_close";i:1;s:21:"PECL paradox >= 1.0.0";i:2;s:25:"Closes a paradox database";i:3;s:73:"bool px_create_fp ( resource $pxdoc , resource $file , array $fielddesc )";}
a:4:{i:0;s:14:"px_date2string";i:1;s:21:"PECL paradox >= 1.4.0";i:2;s:32:" Converts a date into a string. ";i:3;s:71:"string px_date2string ( resource $pxdoc , int $value , string $format )";}
a:4:{i:0;s:16:"px_delete_record";i:1;s:21:"PECL paradox >= 1.4.0";i:2;s:36:"Deletes record from paradox database";i:3;s:37:"array px_get_info ( resource $pxdoc )";}
a:4:{i:0;s:16:"px_get_parameter";i:1;s:21:"PECL paradox >= 1.1.0";i:2;s:16:"Gets a parameter";i:3;s:54:"int px_insert_record ( resource $pxdoc , array $data )";}
a:4:{i:0;s:6:"px_new";i:1;s:21:"PECL paradox >= 1.0.0";i:2;s:27:"Create a new paradox object";i:3;s:24:"resource px_new ( void )";}
a:4:{i:0;s:12:"px_numfields";i:1;s:21:"PECL paradox >= 1.0.0";i:2;s:38:"Returns number of fields in a database";i:3;s:78:"string px_timestamp2string ( resource $pxdoc , float $value , string $format )";}
a:4:{i:0;s:16:"px_update_record";i:1;s:21:"PECL paradox >= 1.4.0";i:2;s:34:"Updates record in paradox database";i:3;s:66:"bool px_update_record ( resource $pxdoc , array $data , int $num )";}
a:4:{i:0;s:15:"pg_cancel_query";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:30:" Cancel an asynchronous query ";i:3;s:45:"bool pg_cancel_query ( resource $connection )";}
a:4:{i:0;s:18:"pg_client_encoding";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:26:" Gets the client encoding ";i:3;s:53:"string pg_client_encoding ([ resource $connection ] )";}
a:4:{i:0;s:8:"pg_close";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Closes a PostgreSQL connection";i:3;s:41:"bool pg_close ([ resource $connection ] )";}
a:4:{i:0;s:10:"pg_connect";i:1;s:12:"PHP 4, PHP 5";i:2;s:28:"Open a PostgreSQL connection";i:3;s:72:"resource pg_connect ( string $connection_string [, int $connect_type ] )";}
a:4:{i:0;s:18:"pg_connection_busy";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:31:" Get connection is busy or not ";i:3;s:48:"bool pg_connection_busy ( resource $connection )";}
a:4:{i:0;s:20:"pg_connection_status";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:23:" Get connection status ";i:3;s:49:"int pg_connection_status ( resource $connection )";}
a:4:{i:0;s:10:"pg_convert";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:66:" Convert associative array values into suitable for SQL statement ";i:3;s:105:"array pg_convert ( resource $connection , string $table_name , array $assoc_array [, int $options = 0 ] )";}
a:4:{i:0;s:12:"pg_copy_from";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:43:" Insert records into a table from an array ";i:3;s:120:"bool pg_copy_from ( resource $connection , string $table_name , array $rows [, string $delimiter [, string $null_as ]] )";}
a:4:{i:0;s:10:"pg_copy_to";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:26:" Copy a table to an array ";i:3;s:105:"array pg_copy_to ( resource $connection , string $table_name [, string $delimiter [, string $null_as ]] )";}
a:4:{i:0;s:9:"pg_dbname";i:1;s:12:"PHP 4, PHP 5";i:2;s:21:"Get the database name";i:3;s:44:"string pg_dbname ([ resource $connection ] )";}
a:4:{i:0;s:9:"pg_delete";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:17:" Deletes records ";i:3;s:117:"mixed pg_delete ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] )";}
a:4:{i:0;s:11:"pg_end_copy";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:28:"Sync with PostgreSQL backend";i:3;s:44:"bool pg_end_copy ([ resource $connection ] )";}
a:4:{i:0;s:15:"pg_escape_bytea";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:50:" Escape a string for insertion into a bytea field ";i:3;s:64:"string pg_escape_bytea ([ resource $connection ], string $data )";}
a:4:{i:0;s:16:"pg_escape_string";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:49:" Escape a string for insertion into a text field ";i:3;s:65:"string pg_escape_string ([ resource $connection ], string $data )";}
a:4:{i:0;s:20:"pg_fetch_all_columns";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:58:"Fetches all rows in a particular result column as an array";i:3;s:68:"array pg_fetch_all_columns ( resource $result [, int $column = 0 ] )";}
a:4:{i:0;s:12:"pg_fetch_all";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:42:"Fetches all rows from a result as an array";i:3;s:39:"array pg_fetch_all ( resource $result )";}
a:4:{i:0;s:14:"pg_fetch_array";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Fetch a row as an array";i:3;s:76:"array pg_fetch_array ( resource $result [, int $row [, int $result_type ]] )";}
a:4:{i:0;s:14:"pg_fetch_assoc";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:35:"Fetch a row as an associative array";i:3;s:55:"array pg_fetch_assoc ( resource $result [, int $row ] )";}
a:4:{i:0;s:15:"pg_fetch_object";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Fetch a row as an object";i:3;s:98:"object pg_fetch_object ( resource $result [, int $row [, string $class_name [, array $params ]]] )";}
a:4:{i:0;s:15:"pg_fetch_result";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:37:"Returns values from a result resource";i:3;s:58:"string pg_fetch_result ( resource $result , mixed $field )";}
a:4:{i:0;s:12:"pg_fetch_row";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Get a row as an enumerated array";i:3;s:53:"array pg_fetch_row ( resource $result [, int $row ] )";}
a:4:{i:0;s:13:"pg_field_name";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:27:"Returns the name of a field";i:3;s:61:"string pg_field_name ( resource $result , int $field_number )";}
a:4:{i:0;s:12:"pg_field_num";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:43:"Returns the field number of the named field";i:3;s:58:"int pg_field_num ( resource $result , string $field_name )";}
a:4:{i:0;s:15:"pg_field_prtlen";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:26:"Returns the printed length";i:3;s:70:"int pg_field_prtlen ( resource $result , mixed $field_name_or_number )";}
a:4:{i:0;s:13:"pg_field_size";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:54:" Returns the internal storage size of the named field ";i:3;s:58:"int pg_field_size ( resource $result , int $field_number )";}
a:4:{i:0;s:14:"pg_field_table";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:43:"Returns the name or oid of the tables field";i:3;s:89:"mixed pg_field_table ( resource $result , int $field_number [, bool $oid_only = false ] )";}
a:4:{i:0;s:13:"pg_field_type";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:58:" Returns the type name for the corresponding field number ";i:3;s:61:"string pg_field_type ( resource $result , int $field_number )";}
a:4:{i:0;s:14:"pg_free_result";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:18:"Free result memory";i:3;s:40:"bool pg_free_result ( resource $result )";}
a:4:{i:0;s:13:"pg_get_notify";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:23:"Gets SQL NOTIFY message";i:3;s:66:"array pg_get_notify ( resource $connection [, int $result_type ] )";}
a:4:{i:0;s:13:"pg_get_result";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:31:" Get asynchronous query result ";i:3;s:50:"resource pg_get_result ([ resource $connection ] )";}
a:4:{i:0;s:7:"pg_host";i:1;s:12:"PHP 4, PHP 5";i:2;s:54:" Returns the host name associated with the connection ";i:3;s:42:"string pg_host ([ resource $connection ] )";}
a:4:{i:0;s:9:"pg_insert";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:25:" Insert array into table ";i:3;s:117:"mixed pg_insert ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] )";}
a:4:{i:0;s:13:"pg_last_error";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:49:"Get the last error message string of a connection";i:3;s:48:"string pg_last_error ([ resource $connection ] )";}
a:4:{i:0;s:14:"pg_last_notice";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:56:" Returns the last notice message from PostgreSQL server ";i:3;s:46:"string pg_last_notice ( resource $connection )";}
a:4:{i:0;s:11:"pg_lo_close";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:20:"Close a large object";i:3;s:43:"bool pg_lo_close ( resource $large_object )";}
a:4:{i:0;s:12:"pg_lo_create";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:21:"Create a large object";i:3;s:37:"int pg_lo_create ( mixed $object_id )";}
a:4:{i:0;s:12:"pg_lo_export";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:29:"Export a large object to file";i:3;s:74:"bool pg_lo_export ([ resource $connection ], int $oid , string $pathname )";}
a:4:{i:0;s:12:"pg_lo_import";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:31:"Import a large object from file";i:3;s:63:"int pg_lo_import ( string $pathname [, resource $connection ] )";}
a:4:{i:0;s:10:"pg_lo_open";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:19:"Open a large object";i:3;s:70:"resource pg_lo_open ( resource $connection , int $oid , string $mode )";}
a:4:{i:0;s:14:"pg_lo_read_all";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:59:" Reads an entire large object and send straight to browser ";i:3;s:45:"int pg_lo_read_all ( resource $large_object )";}
a:4:{i:0;s:10:"pg_lo_read";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:19:"Read a large object";i:3;s:65:"string pg_lo_read ( resource $large_object [, int $len = 8192 ] )";}
a:4:{i:0;s:10:"pg_lo_seek";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:38:" Seeks position within a large object ";i:3;s:90:"bool pg_lo_seek ( resource $large_object , int $offset [, int $whence = PGSQL_SEEK_CUR ] )";}
a:4:{i:0;s:10:"pg_lo_tell";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:49:" Returns current seek position a of large object ";i:3;s:41:"int pg_lo_tell ( resource $large_object )";}
a:4:{i:0;s:12:"pg_lo_unlink";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:21:"Delete a large object";i:3;s:53:"bool pg_lo_unlink ( resource $connection , int $oid )";}
a:4:{i:0;s:11:"pg_lo_write";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:23:"Write to a large object";i:3;s:71:"int pg_lo_write ( resource $large_object , string $data [, int $len ] )";}
a:4:{i:0;s:12:"pg_meta_data";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:25:" Get meta data for table ";i:3;s:64:"array pg_meta_data ( resource $connection , string $table_name )";}
a:4:{i:0;s:13:"pg_num_fields";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:40:"Returns the number of fields in a result";i:3;s:38:"int pg_num_fields ( resource $result )";}
a:4:{i:0;s:11:"pg_num_rows";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:38:"Returns the number of rows in a result";i:3;s:36:"int pg_num_rows ( resource $result )";}
a:4:{i:0;s:10:"pg_options";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Get the options associated with the connection";i:3;s:45:"string pg_options ([ resource $connection ] )";}
a:4:{i:0;s:19:"pg_parameter_status";i:1;s:5:"PHP 5";i:2;s:51:"Looks up a current parameter setting of the server.";i:3;s:74:"string pg_parameter_status ([ resource $connection ], string $param_name )";}
a:4:{i:0;s:11:"pg_pconnect";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Open a persistent PostgreSQL connection";i:3;s:73:"resource pg_pconnect ( string $connection_string [, int $connect_type ] )";}
a:4:{i:0;s:7:"pg_ping";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:24:"Ping database connection";i:3;s:40:"bool pg_ping ([ resource $connection ] )";}
a:4:{i:0;s:7:"pg_port";i:1;s:12:"PHP 4, PHP 5";i:2;s:55:" Return the port number associated with the connection ";i:3;s:39:"int pg_port ([ resource $connection ] )";}
a:4:{i:0;s:8:"pg_query";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:15:"Execute a query";i:3;s:60:"resource pg_query ([ resource $connection ], string $query )";}
a:4:{i:0;s:21:"pg_result_error_field";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:47:"Returns an individual field of an error report.";i:3;s:66:"string pg_result_error_field ( resource $result , int $fieldcode )";}
a:4:{i:0;s:15:"pg_result_error";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:42:" Get error message associated with result ";i:3;s:43:"string pg_result_error ( resource $result )";}
a:4:{i:0;s:14:"pg_result_seek";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:42:"Set internal row offset in result resource";i:3;s:54:"bool pg_result_seek ( resource $result , int $offset )";}
a:4:{i:0;s:16:"pg_result_status";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:28:" Get status of query result ";i:3;s:58:"mixed pg_result_status ( resource $result [, int $type ] )";}
a:4:{i:0;s:9:"pg_select";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:16:" Select records ";i:3;s:117:"mixed pg_select ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] )";}
a:4:{i:0;s:13:"pg_send_query";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:26:" Sends asynchronous query ";i:3;s:59:"bool pg_send_query ( resource $connection , string $query )";}
a:4:{i:0;s:22:"pg_set_client_encoding";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:25:" Set the client encoding ";i:3;s:72:"int pg_set_client_encoding ([ resource $connection ], string $encoding )";}
a:4:{i:0;s:8:"pg_trace";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:38:"Enable tracing a PostgreSQL connection";i:3;s:83:"bool pg_trace ( string $pathname [, string $mode = "w" [, resource $connection ]] )";}
a:4:{i:0;s:6:"pg_tty";i:1;s:12:"PHP 4, PHP 5";i:2;s:52:" Return the TTY name associated with the connection ";i:3;s:41:"string pg_tty ([ resource $connection ] )";}
a:4:{i:0;s:17:"pg_unescape_bytea";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:32:" Unescape binary for bytea type ";i:3;s:41:"string pg_unescape_bytea ( string $data )";}
a:4:{i:0;s:10:"pg_untrace";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:42:"Disable tracing of a PostgreSQL connection";i:3;s:43:"bool pg_untrace ([ resource $connection ] )";}
a:4:{i:0;s:9:"pg_update";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:14:" Update table ";i:3;s:129:"mixed pg_update ( resource $connection , string $table_name , array $data , array $condition [, int $options = PGSQL_DML_EXEC ] )";}
a:4:{i:0;s:12:"sqlite_close";i:1;s:27:"PHP 5, PECL sqlite >= 1.0.0";i:2;s:30:"Closes an open SQLite database";i:3;s:40:"void sqlite_close ( resource $dbhandle )";}
a:4:{i:0;s:19:"sqlite_error_string";i:1;s:27:"PHP 5, PECL sqlite >= 1.0.0";i:2;s:48:"Returns the textual description of an error code";i:3;s:72:"bool SQLiteDatabase::queryExec ( string $query [, string &$error_msg ] )";}
a:4:{i:0;s:14:"sqlite_factory";i:1;s:5:"PHP 5";i:2;s:61:"Opens an SQLite database and returns an SQLiteDatabase object";i:3;s:99:"SQLiteDatabase sqlite_factory ( string $filename [, int $mode = 0666 [, string &$error_message ]] )";}
a:4:{i:0;s:15:"sqlite_has_more";i:1;s:27:"PHP 5, PECL sqlite >= 1.0.0";i:2;s:44:"Finds whether or not more rows are available";i:3;s:34:"int SQLiteResult::numRows ( void )";}
a:4:{i:0;s:11:"sqlite_open";i:1;s:27:"PHP 5, PECL sqlite >= 1.0.0";i:2;s:69:"Opens an SQLite database and create the database if it does not exist";i:3;s:97:"SQLiteDatabase::__construct ( string $filename [, int $mode = 0666 [, string &$error_message ]] )";}
a:4:{i:0;s:12:"sqlite_popen";i:1;s:27:"PHP 5, PECL sqlite >= 1.0.0";i:2;s:94:" Opens a persistent handle to an SQLite database and create the database if it does not exist ";i:3;s:48:"string sqlite_udf_decode_binary ( string $data )";}
a:4:{i:0;s:24:"sqlite_udf_encode_binary";i:1;s:27:"PHP 5, PECL sqlite >= 1.0.0";i:2;s:50:"Encode binary data before returning it from an UDF";i:3;s:48:"string sqlite_udf_encode_binary ( string $data )";}
a:4:{i:0;s:20:"SQLite3::busyTimeout";i:1;s:14:"PHP 5 >= 5.3.3";i:2;s:32:"Sets the busy connection handler";i:3;s:36:"public int SQLite3::changes ( void )";}
a:4:{i:0;s:14:"SQLite3::close";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:30:"Closes the database connection";i:3;s:35:"public bool SQLite3::close ( void )";}
a:4:{i:0;s:20:"SQLite3::__construct";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:63:" Instantiates an SQLite3 object and opens an SQLite 3 database ";i:3;s:84:"SQLite3::__construct ( string $filename [, int $flags [, string $encryption_key ]] )";}
a:4:{i:0;s:24:"SQLite3::createAggregate";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:61:"Registers a PHP function for use as an SQL aggregate function";i:3;s:100:"public bool SQLite3::createFunction ( string $name , mixed $callback [, int $argument_count = -1 ] )";}
a:4:{i:0;s:21:"SQLite3::escapeString";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:47:"Returns a string that has been properly escaped";i:3;s:43:"public bool SQLite3::exec ( string $query )";}
a:4:{i:0;s:22:"SQLite3::lastErrorCode";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:74:" Returns the numeric result code of the most recent failed SQLite request ";i:3;s:61:"public bool SQLite3::loadExtension ( string $shared_library )";}
a:4:{i:0;s:13:"SQLite3::open";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:24:"Opens an SQLite database";i:3;s:0:"";}
a:4:{i:0;s:16:"SQLite3::prepare";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:39:"Prepares an SQL statement for execution";i:3;s:53:"public SQLite3Stmt SQLite3::prepare ( string $query )";}
a:4:{i:0;s:14:"SQLite3::query";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:21:"Executes an SQL query";i:3;s:53:"public SQLite3Result SQLite3::query ( string $query )";}
a:4:{i:0;s:20:"SQLite3::querySingle";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:44:"Executes a query and returns a single result";i:3;s:81:"public mixed SQLite3::querySingle ( string $query [, bool $entire_row = false ] )";}
a:4:{i:0;s:16:"SQLite3::version";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:74:" Returns the SQLite3 library version as a string constant and as a number ";i:3;s:38:"public array SQLite3::version ( void )";}
a:4:{i:0;s:22:"SQLite3Stmt::bindParam";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:41:"Binds a parameter to a statement variable";i:3;s:86:"public bool SQLite3Stmt::bindValue ( string $sql_param , mixed $value [, int $type ] )";}
a:4:{i:0;s:18:"SQLite3Stmt::clear";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:35:"Clears all current bound parameters";i:3;s:39:"public bool SQLite3Stmt::reset ( void )";}
a:4:{i:0;s:25:"SQLite3Result::columnName";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:34:"Returns the name of the nth column";i:3;s:41:"public bool SQLite3Result::reset ( void )";}
a:4:{i:0;s:20:"sybase_affected_rows";i:1;s:12:"PHP 4, PHP 5";i:2;s:42:"Gets number of affected rows in last query";i:3;s:57:"int sybase_affected_rows ([ resource $link_identifier ] )";}
a:4:{i:0;s:12:"sybase_close";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Closes a Sybase connection";i:3;s:153:"resource sybase_connect ([ string $servername [, string $username [, string $password [, string $charset [, string $appname [, bool $new = false ]]]]]] )";}
a:4:{i:0;s:16:"sybase_data_seek";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Moves internal row pointer";i:3;s:45:"array sybase_fetch_array ( resource $result )";}
a:4:{i:0;s:18:"sybase_fetch_assoc";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:42:"Fetch a result row as an associative array";i:3;s:66:"object sybase_fetch_object ( resource $result [, mixed $object ] )";}
a:4:{i:0;s:16:"sybase_fetch_row";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Get a result row as an enumerated array";i:3;s:79:"bool sybase_set_message_handler ( callback $handler [, resource $connection ] )";}
a:4:{i:0;s:23:"sybase_unbuffered_query";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:36:"Send a Sybase query and do not block";i:3;s:102:"resource sybase_unbuffered_query ( string $query , resource $link_identifier [, bool $store_result ] )";}
a:4:{i:0;s:16:"TokyoTyrant::add";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:21:"Adds to a numeric key";i:3;s:85:"public number TokyoTyrant::add ( string $key , number $increment [, int $type = 0 ] )";}
a:4:{i:0;s:20:"TokyoTyrant::connect";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:21:"Connect to a database";i:3;s:117:"public TokyoTyrant TokyoTyrant::connect ( string $host [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options ]] )";}
a:4:{i:0;s:23:"TokyoTyrant::connectUri";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:22:"Connects to a database";i:3;s:58:"public TokyoTyrant TokyoTyrant::connectUri ( string $uri )";}
a:4:{i:0;s:24:"TokyoTyrant::__construct";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:34:"Construct a new TokyoTyrant object";i:3;s:53:"public TokyoTyrant TokyoTyrant::copy ( string $path )";}
a:4:{i:0;s:16:"TokyoTyrant::ext";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:23:"Execute a remote script";i:3;s:92:"public string TokyoTyrant::ext ( string $name , int $options , string $key , string $value )";}
a:4:{i:0;s:20:"TokyoTyrant::fwmKeys";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:33:"Returns the forward matching keys";i:3;s:68:"public array TokyoTyrant::fwmKeys ( string $prefix , int $max_recs )";}
a:4:{i:0;s:16:"TokyoTyrant::get";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:15:"The get purpose";i:3;s:45:"public mixed TokyoTyrant::get ( mixed $keys )";}
a:4:{i:0;s:24:"TokyoTyrant::getIterator";i:1;s:54:"No version information available, might only be in SVN";i:2;s:15:"Get an iterator";i:3;s:60:"public TokyoTyrantIterator TokyoTyrant::getIterator ( void )";}
a:4:{i:0;s:16:"TokyoTyrant::num";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:33:"Number of records in the database";i:3;s:36:"public int TokyoTyrant::num ( void )";}
a:4:{i:0;s:16:"TokyoTyrant::out";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:15:"Removes records";i:3;s:51:"public TokyoTyrant TokyoTyrant::out ( mixed $keys )";}
a:4:{i:0;s:16:"TokyoTyrant::put";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:11:"Puts values";i:3;s:77:"public TokyoTyrant TokyoTyrant::put ( mixed $keys [, string $value = NULL ] )";}
a:4:{i:0;s:19:"TokyoTyrant::putCat";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:24:"Concatenates to a record";i:3;s:73:"public TokyoTyrant TokyoTyrant::putCat ( mixed $keys [, string $value ] )";}
a:4:{i:0;s:20:"TokyoTyrant::putKeep";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:13:"Puts a record";i:3;s:74:"public TokyoTyrant TokyoTyrant::putKeep ( mixed $keys [, string $value ] )";}
a:4:{i:0;s:18:"TokyoTyrant::putNr";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:10:"Puts value";i:3;s:79:"public TokyoTyrant TokyoTyrant::putNr ( mixed $keys [, string $value = NULL ] )";}
a:4:{i:0;s:19:"TokyoTyrant::putShl";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:24:"Concatenates to a record";i:3;s:77:"public mixed TokyoTyrant::putShl ( string $key , string $value , int $width )";}
a:4:{i:0;s:20:"TokyoTyrant::restore";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:20:"Restore the database";i:3;s:117:"public mixed TokyoTyrant::setMaster ( string $host , int $port , int $timestamp [, bool $check_consistency = true ] )";}
a:4:{i:0;s:17:"TokyoTyrant::size";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:29:"Returns the size of the value";i:3;s:44:"public int TokyoTyrant::size ( string $key )";}
a:4:{i:0;s:17:"TokyoTyrant::stat";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:14:"Get statistics";i:3;s:39:"public array TokyoTyrant::stat ( void )";}
a:4:{i:0;s:17:"TokyoTyrant::sync";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:24:"Synchronize the database";i:3;s:41:"public mixed TokyoTyrant::vanish ( void )";}
a:4:{i:0;s:21:"TokyoTyrantTable::add";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:13:"Adds a record";i:3;s:44:"public int TokyoTyrantTable::genUid ( void )";}
a:4:{i:0;s:21:"TokyoTyrantTable::get";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:9:"Get a row";i:3;s:49:"public void TokyoTyrantTable::get ( mixed $keys )";}
a:4:{i:0;s:29:"TokyoTyrantTable::getIterator";i:1;s:54:"No version information available, might only be in SVN";i:2;s:15:"Get an iterator";i:3;s:65:"public TokyoTyrantIterator TokyoTyrantTable::getIterator ( void )";}
a:4:{i:0;s:26:"TokyoTyrantTable::getQuery";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:18:"Get a query object";i:3;s:59:"public TokyoTyrantQuery TokyoTyrantTable::getQuery ( void )";}
a:4:{i:0;s:21:"TokyoTyrantTable::out";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:14:"Remove records";i:3;s:49:"public void TokyoTyrantTable::out ( mixed $keys )";}
a:4:{i:0;s:21:"TokyoTyrantTable::put";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:11:"Store a row";i:3;s:65:"public int TokyoTyrantTable::put ( string $key , array $columns )";}
a:4:{i:0;s:24:"TokyoTyrantTable::putCat";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:21:"Concatenates to a row";i:3;s:69:"public void TokyoTyrantTable::putCat ( string $key , array $columns )";}
a:4:{i:0;s:25:"TokyoTyrantTable::putKeep";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:16:"Put a new record";i:3;s:70:"public void TokyoTyrantTable::putKeep ( string $key , array $columns )";}
a:4:{i:0;s:23:"TokyoTyrantTable::putNr";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:10:"Puts value";i:3;s:70:"public mixed TokyoTyrantTable::setIndex ( string $column , int $type )";}
a:4:{i:0;s:25:"TokyoTyrantQuery::addCond";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:29:"Adds a condition to the query";i:3;s:80:"public mixed TokyoTyrantQuery::addCond ( string $name , int $op , string $expr )";}
a:4:{i:0;s:29:"TokyoTyrantQuery::__construct";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:21:"Construct a new query";i:3;s:57:"TokyoTyrantQuery::__construct ( TokyoTyrantTable $table )";}
a:4:{i:0;s:23:"TokyoTyrantQuery::count";i:1;s:54:"No version information available, might only be in SVN";i:2;s:14:"Counts records";i:3;s:43:"public int TokyoTyrantQuery::count ( void )";}
a:4:{i:0;s:25:"TokyoTyrantQuery::current";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:27:"Returns the current element";i:3;s:47:"public array TokyoTyrantQuery::current ( void )";}
a:4:{i:0;s:22:"TokyoTyrantQuery::hint";i:1;s:54:"No version information available, might only be in SVN";i:2;s:32:"Get the hint string of the query";i:3;s:45:"public string TokyoTyrantQuery::hint ( void )";}
a:4:{i:0;s:21:"TokyoTyrantQuery::key";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:23:"Returns the current key";i:3;s:44:"public string TokyoTyrantQuery::key ( void )";}
a:4:{i:0;s:28:"TokyoTyrantQuery::metaSearch";i:1;s:54:"No version information available, might only be in SVN";i:2;s:38:"Retrieve records with multiple queries";i:3;s:72:"public array TokyoTyrantQuery::metaSearch ( array $queries , int $type )";}
a:4:{i:0;s:22:"TokyoTyrantQuery::next";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:32:"Moves the iterator to next entry";i:3;s:44:"public array TokyoTyrantQuery::next ( void )";}
a:4:{i:0;s:21:"TokyoTyrantQuery::out";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:30:"Removes records based on query";i:3;s:54:"public TokyoTyrantQuery TokyoTyrantQuery::out ( void )";}
a:4:{i:0;s:24:"TokyoTyrantQuery::rewind";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:20:"Rewinds the iterator";i:3;s:45:"public bool TokyoTyrantQuery::rewind ( void )";}
a:4:{i:0;s:24:"TokyoTyrantQuery::search";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:16:"Searches records";i:3;s:46:"public array TokyoTyrantQuery::search ( void )";}
a:4:{i:0;s:26:"TokyoTyrantQuery::setLimit";i:1;s:26:"PECL tokyo_tyrant >= 0.1.0";i:2;s:13:"Limit results";i:3;s:44:"public bool TokyoTyrantQuery::valid ( void )";}
a:4:{i:0;s:9:"dio_close";i:1;s:30:"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5";i:2;s:38:"Closes the file descriptor given by fd";i:3;s:31:"void dio_close ( resource $fd )";}
a:4:{i:0;s:9:"dio_fcntl";i:1;s:30:"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5";i:2;s:32:"Performs a c library fcntl on fd";i:3;s:60:"mixed dio_fcntl ( resource $fd , int $cmd [, mixed $args ] )";}
a:4:{i:0;s:8:"dio_read";i:1;s:30:"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5";i:2;s:34:"Reads bytes from a file descriptor";i:3;s:68:"int dio_seek ( resource $fd , int $pos [, int $whence = SEEK_SET ] )";}
a:4:{i:0;s:8:"dio_stat";i:1;s:30:"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5";i:2;s:52:" Gets stat information about the file descriptor fd ";i:3;s:52:"bool dio_tcsetattr ( resource $fd , array $options )";}
a:4:{i:0;s:12:"dio_truncate";i:1;s:30:"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5";i:2;s:46:" Truncates file descriptor fd to offset bytes ";i:3;s:63:"int dio_write ( resource $fd , string $data [, int $len = 0 ] )";}
a:4:{i:0;s:5:"chdir";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Change directory";i:3;s:32:"bool chdir ( string $directory )";}
a:4:{i:0;s:6:"chroot";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:25:"Change the root directory";i:3;s:33:"bool chroot ( string $directory )";}
a:4:{i:0;s:8:"closedir";i:1;s:12:"PHP 4, PHP 5";i:2;s:22:"Close directory handle";i:3;s:41:"void closedir ([ resource $dir_handle ] )";}
a:4:{i:0;s:6:"getcwd";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Gets the current working directory";i:3;s:22:"string getcwd ( void )";}
a:4:{i:0;s:7:"opendir";i:1;s:12:"PHP 4, PHP 5";i:2;s:21:"Open directory handle";i:3;s:56:"resource opendir ( string $path [, resource $context ] )";}
a:4:{i:0;s:7:"readdir";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Read entry from directory handle";i:3;s:42:"string readdir ([ resource $dir_handle ] )";}
a:4:{i:0;s:9:"rewinddir";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Rewind directory handle";i:3;s:85:"array scandir ( string $directory [, int $sorting_order = 0 [, resource $context ]] )";}
a:4:{i:0;s:12:"finfo_buffer";i:1;s:38:"PHP 5 >= 5.3.0, PECL fileinfo >= 0.1.0";i:2;s:40:"Return information about a string buffer";i:3;s:109:"string finfo::buffer ( string $string = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )";}
a:4:{i:0;s:11:"finfo_close";i:1;s:36:"PHP >= 5.3.0, PECL fileinfo >= 0.1.0";i:2;s:23:"Close fileinfo resource";i:3;s:110:"string finfo::file ( string $file_name = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )";}
a:4:{i:0;s:15:"finfo_set_flags";i:1;s:36:"PHP >= 5.3.0, PECL fileinfo >= 0.1.0";i:2;s:34:"Set libmagic configuration options";i:3;s:45:"string mime_content_type ( string $filename )";}
a:4:{i:0;s:8:"basename";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Returns trailing name component of path";i:3;s:52:"string basename ( string $path [, string $suffix ] )";}
a:4:{i:0;s:5:"chgrp";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Changes file group";i:3;s:46:"bool chgrp ( string $filename , mixed $group )";}
a:4:{i:0;s:5:"chmod";i:1;s:12:"PHP 4, PHP 5";i:2;s:17:"Changes file mode";i:3;s:43:"bool chmod ( string $filename , int $mode )";}
a:4:{i:0;s:5:"chown";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Changes file owner";i:3;s:45:"bool chown ( string $filename , mixed $user )";}
a:4:{i:0;s:14:"clearstatcache";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Clears file status cache";i:3;s:82:"void clearstatcache ([ bool $clear_realpath_cache = false [, string $filename ]] )";}
a:4:{i:0;s:4:"copy";i:1;s:12:"PHP 4, PHP 5";i:2;s:11:"Copies file";i:3;s:66:"bool copy ( string $source , string $dest [, resource $context ] )";}
a:4:{i:0;s:15:"disk_free_space";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:55:"Returns available space on filesystem or disk partition";i:3;s:43:"float disk_free_space ( string $directory )";}
a:4:{i:0;s:16:"disk_total_space";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:56:"Returns the total size of a filesystem or disk partition";i:3;s:44:"float disk_total_space ( string $directory )";}
a:4:{i:0;s:6:"fclose";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Closes an open file pointer";i:3;s:32:"bool fclose ( resource $handle )";}
a:4:{i:0;s:6:"fflush";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:28:"Flushes the output to a file";i:3;s:32:"bool fflush ( resource $handle )";}
a:4:{i:0;s:5:"fgetc";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Gets character from file pointer";i:3;s:33:"string fgetc ( resource $handle )";}
a:4:{i:0;s:7:"fgetcsv";i:1;s:12:"PHP 4, PHP 5";i:2;s:52:"Gets line from file pointer and parse for CSV fields";i:3;s:0:"";}
a:4:{i:0;s:5:"fgets";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Gets line from file pointer";i:3;s:50:"string fgets ( resource $handle [, int $length ] )";}
a:4:{i:0;s:6:"fgetss";i:1;s:12:"PHP 4, PHP 5";i:2;s:47:"Gets line from file pointer and strip HTML tags";i:3;s:78:"string fgetss ( resource $handle [, int $length [, string $allowable_tags ]] )";}
a:4:{i:0;s:11:"file_exists";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Checks whether a file or directory exists";i:3;s:37:"bool file_exists ( string $filename )";}
a:4:{i:0;s:17:"file_get_contents";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:31:"Reads entire file into a string";i:3;s:140:"string file_get_contents ( string $filename [, bool $use_include_path = false [, resource $context [, int $offset = -1 [, int $maxlen ]]]] )";}
a:4:{i:0;s:17:"file_put_contents";i:1;s:5:"PHP 5";i:2;s:24:"Write a string to a file";i:3;s:98:"int file_put_contents ( string $filename , mixed $data [, int $flags = 0 [, resource $context ]] )";}
a:4:{i:0;s:4:"file";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"Reads entire file into an array";i:3;s:73:"array file ( string $filename [, int $flags = 0 [, resource $context ]] )";}
a:4:{i:0;s:9:"fileatime";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Gets last access time of file";i:3;s:34:"int fileatime ( string $filename )";}
a:4:{i:0;s:9:"filectime";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Gets inode change time of file";i:3;s:34:"int filectime ( string $filename )";}
a:4:{i:0;s:9:"filegroup";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Gets file group";i:3;s:34:"int filegroup ( string $filename )";}
a:4:{i:0;s:9:"fileinode";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Gets file inode";i:3;s:34:"int fileinode ( string $filename )";}
a:4:{i:0;s:9:"filemtime";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Gets file modification time";i:3;s:34:"int filemtime ( string $filename )";}
a:4:{i:0;s:9:"fileowner";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Gets file owner";i:3;s:34:"int fileowner ( string $filename )";}
a:4:{i:0;s:9:"fileperms";i:1;s:12:"PHP 4, PHP 5";i:2;s:21:"Gets file permissions";i:3;s:34:"int fileperms ( string $filename )";}
a:4:{i:0;s:8:"filesize";i:1;s:12:"PHP 4, PHP 5";i:2;s:14:"Gets file size";i:3;s:33:"int filesize ( string $filename )";}
a:4:{i:0;s:8:"filetype";i:1;s:12:"PHP 4, PHP 5";i:2;s:14:"Gets file type";i:3;s:36:"string filetype ( string $filename )";}
a:4:{i:0;s:5:"flock";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Portable advisory file locking";i:3;s:70:"bool flock ( resource $handle , int $operation [, int &$wouldblock ] )";}
a:4:{i:0;s:7:"fnmatch";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:32:"Match filename against a pattern";i:3;s:69:"bool fnmatch ( string $pattern , string $string [, int $flags = 0 ] )";}
a:4:{i:0;s:5:"fopen";i:1;s:12:"PHP 4, PHP 5";i:2;s:17:"Opens file or URL";i:3;s:108:"resource fopen ( string $filename , string $mode [, bool $use_include_path = false [, resource $context ]] )";}
a:4:{i:0;s:9:"fpassthru";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:"Output all remaining data on a file pointer";i:3;s:34:"int fpassthru ( resource $handle )";}
a:4:{i:0;s:7:"fputcsv";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:44:"Format line as CSV and write to file pointer";i:3;s:125:"int fputcsv ( resource $handle , array $fields [, string $delimiter = &#039;,&#039; [, string $enclosure = &#039;"&#039; ]] )";}
a:4:{i:0;s:6:"fscanf";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:46:"Parses input from a file according to a format";i:3;s:67:"mixed fscanf ( resource $handle , string $format [, mixed &$... ] )";}
a:4:{i:0;s:5:"fseek";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Seeks on a file pointer";i:3;s:72:"int fseek ( resource $handle , int $offset [, int $whence = SEEK_SET ] )";}
a:4:{i:0;s:5:"fstat";i:1;s:12:"PHP 4, PHP 5";i:2;s:56:"Gets information about a file using an open file pointer";i:3;s:32:"array fstat ( resource $handle )";}
a:4:{i:0;s:9:"ftruncate";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Truncates a file to a given length";i:3;s:47:"bool ftruncate ( resource $handle , int $size )";}
a:4:{i:0;s:4:"glob";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:33:"Find pathnames matching a pattern";i:3;s:50:"array glob ( string $pattern [, int $flags = 0 ] )";}
a:4:{i:0;s:6:"is_dir";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Tells whether the filename is a directory";i:3;s:32:"bool is_dir ( string $filename )";}
a:4:{i:0;s:13:"is_executable";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Tells whether the filename is executable";i:3;s:39:"bool is_executable ( string $filename )";}
a:4:{i:0;s:7:"is_file";i:1;s:12:"PHP 4, PHP 5";i:2;s:44:"Tells whether the filename is a regular file";i:3;s:33:"bool is_file ( string $filename )";}
a:4:{i:0;s:7:"is_link";i:1;s:12:"PHP 4, PHP 5";i:2;s:45:"Tells whether the filename is a symbolic link";i:3;s:33:"bool is_link ( string $filename )";}
a:4:{i:0;s:11:"is_readable";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:"Tells whether a file exists and is readable";i:3;s:37:"bool is_readable ( string $filename )";}
a:4:{i:0;s:16:"is_uploaded_file";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:49:"Tells whether the file was uploaded via HTTP POST";i:3;s:42:"bool is_uploaded_file ( string $filename )";}
a:4:{i:0;s:11:"is_writable";i:1;s:12:"PHP 4, PHP 5";i:2;s:38:"Tells whether the filename is writable";i:3;s:37:"bool is_writable ( string $filename )";}
a:4:{i:0;s:6:"lchgrp";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:34:"Changes group ownership of symlink";i:3;s:47:"bool lchgrp ( string $filename , mixed $group )";}
a:4:{i:0;s:6:"lchown";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:33:"Changes user ownership of symlink";i:3;s:46:"bool lchown ( string $filename , mixed $user )";}
a:4:{i:0;s:4:"link";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Create a hard link";i:3;s:49:"bool link ( string $from_path , string $to_path )";}
a:4:{i:0;s:8:"linkinfo";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Gets information about a link";i:3;s:29:"int linkinfo ( string $path )";}
a:4:{i:0;s:5:"lstat";i:1;s:12:"PHP 4, PHP 5";i:2;s:47:"Gives information about a file or symbolic link";i:3;s:32:"array lstat ( string $filename )";}
a:4:{i:0;s:5:"mkdir";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Makes directory";i:3;s:103:"bool mkdir ( string $pathname [, int $mode = 0777 [, bool $recursive = false [, resource $context ]]] )";}
a:4:{i:0;s:18:"move_uploaded_file";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:40:"Moves an uploaded file to a new location";i:3;s:66:"bool move_uploaded_file ( string $filename , string $destination )";}
a:4:{i:0;s:14:"parse_ini_file";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Parse a configuration file";i:3;s:120:"array parse_ini_file ( string $filename [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]] )";}
a:4:{i:0;s:16:"parse_ini_string";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:28:"Parse a configuration string";i:3;s:117:"array parse_ini_string ( string $ini [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]] )";}
a:4:{i:0;s:8:"pathinfo";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:37:"Returns information about a file path";i:3;s:0:"";}
a:4:{i:0;s:6:"pclose";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Closes process file pointer";i:3;s:31:"int pclose ( resource $handle )";}
a:4:{i:0;s:5:"popen";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Opens process file pointer";i:3;s:49:"resource popen ( string $command , string $mode )";}
a:4:{i:0;s:8:"readfile";i:1;s:12:"PHP 4, PHP 5";i:2;s:14:"Outputs a file";i:3;s:91:"int readfile ( string $filename [, bool $use_include_path = false [, resource $context ]] )";}
a:4:{i:0;s:8:"readlink";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Returns the target of a symbolic link";i:3;s:32:"string readlink ( string $path )";}
a:4:{i:0;s:18:"realpath_cache_get";i:1;s:14:"PHP 5 >= 5.3.2";i:2;s:26:"Get realpath cache entries";i:3;s:33:"array realpath_cache_get ( void )";}
a:4:{i:0;s:19:"realpath_cache_size";i:1;s:14:"PHP 5 >= 5.3.2";i:2;s:23:"Get realpath cache size";i:3;s:32:"int realpath_cache_size ( void )";}
a:4:{i:0;s:8:"realpath";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Returns canonicalized absolute pathname";i:3;s:32:"string realpath ( string $path )";}
a:4:{i:0;s:6:"rename";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Renames a file or directory";i:3;s:72:"bool rename ( string $oldname , string $newname [, resource $context ] )";}
a:4:{i:0;s:6:"rewind";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Rewind the position of a file pointer";i:3;s:32:"bool rewind ( resource $handle )";}
a:4:{i:0;s:5:"rmdir";i:1;s:12:"PHP 4, PHP 5";i:2;s:17:"Removes directory";i:3;s:53:"bool rmdir ( string $dirname [, resource $context ] )";}
a:4:{i:0;s:4:"stat";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Gives information about a file";i:3;s:31:"array stat ( string $filename )";}
a:4:{i:0;s:7:"symlink";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Creates a symbolic link";i:3;s:46:"bool symlink ( string $target , string $link )";}
a:4:{i:0;s:7:"tempnam";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Create file with unique file name";i:3;s:47:"string tempnam ( string $dir , string $prefix )";}
a:4:{i:0;s:7:"tmpfile";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Creates a temporary file";i:3;s:25:"resource tmpfile ( void )";}
a:4:{i:0;s:5:"touch";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Sets access and modification time of file";i:3;s:70:"bool touch ( string $filename [, int $time = time() [, int $atime ]] )";}
a:4:{i:0;s:5:"umask";i:1;s:12:"PHP 4, PHP 5";i:2;s:25:"Changes the current umask";i:3;s:26:"int umask ([ int $mask ] )";}
a:4:{i:0;s:6:"unlink";i:1;s:12:"PHP 4, PHP 5";i:2;s:14:"Deletes a file";i:3;s:55:"bool unlink ( string $filename [, resource $context ] )";}
a:4:{i:0;s:17:"inotify_add_watch";i:1;s:21:"PECL inotify >= 0.1.2";i:2;s:46:"Add a watch to an initialized inotify instance";i:3;s:30:"resource inotify_init ( void )";}
a:4:{i:0;s:17:"inotify_queue_len";i:1;s:21:"PECL inotify >= 0.1.2";i:2;s:59:"Return a number upper than zero if there are pending events";i:3;s:76:"bool inotify_rm_watch ( resource $inotify_instance , int $watch_descriptor )";}
a:4:{i:0;s:9:"xattr_get";i:1;s:19:"PECL xattr >= 0.9.0";i:2;s:27:" Get an extended attribute ";i:3;s:72:"string xattr_get ( string $filename , string $name [, int $flags = 0 ] )";}
a:4:{i:0;s:10:"xattr_list";i:1;s:19:"PECL xattr >= 0.9.0";i:2;s:35:" Get a list of extended attributes ";i:3;s:57:"array xattr_list ( string $filename [, int $flags = 0 ] )";}
a:4:{i:0;s:12:"xattr_remove";i:1;s:19:"PECL xattr >= 0.9.0";i:2;s:30:" Remove an extended attribute ";i:3;s:73:"bool xattr_remove ( string $filename , string $name [, int $flags = 0 ] )";}
a:4:{i:0;s:9:"xattr_set";i:1;s:19:"PECL xattr >= 0.9.0";i:2;s:27:" Set an extended attribute ";i:3;s:86:"bool xattr_set ( string $filename , string $name , string $value [, int $flags = 0 ] )";}
a:4:{i:0;s:15:"xattr_supported";i:1;s:19:"PECL xattr >= 1.0.0";i:2;s:50:" Check if filesystem supports extended attributes ";i:3;s:61:"bool xattr_supported ( string $filename [, int $flags = 0 ] )";}
a:4:{i:0;s:21:"xdiff_file_bdiff_size";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:53:"Read a size of file created by applying a binary diff";i:3;s:42:"int xdiff_file_bdiff_size ( string $file )";}
a:4:{i:0;s:16:"xdiff_file_bdiff";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:29:"Make binary diff of two files";i:3;s:76:"bool xdiff_file_bdiff ( string $old_file , string $new_file , string $dest )";}
a:4:{i:0;s:17:"xdiff_file_bpatch";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:31:"Patch a file with a binary diff";i:3;s:70:"bool xdiff_file_bpatch ( string $file , string $patch , string $dest )";}
a:4:{i:0;s:22:"xdiff_file_diff_binary";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:25:"Alias of xdiff_file_bdiff";i:3;s:82:"bool xdiff_file_diff_binary ( string $old_file , string $new_file , string $dest )";}
a:4:{i:0;s:15:"xdiff_file_diff";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:30:"Make unified diff of two files";i:3;s:123:"bool xdiff_file_diff ( string $old_file , string $new_file , string $dest [, int $context = 3 [, bool $minimal = false ]] )";}
a:4:{i:0;s:17:"xdiff_file_merge3";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:22:"Merge 3 files into one";i:3;s:99:"mixed xdiff_file_merge3 ( string $old_file , string $new_file1 , string $new_file2 , string $dest )";}
a:4:{i:0;s:23:"xdiff_file_patch_binary";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:26:"Alias of xdiff_file_bpatch";i:3;s:76:"bool xdiff_file_patch_binary ( string $file , string $patch , string $dest )";}
a:4:{i:0;s:16:"xdiff_file_patch";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:33:"Patch a file with an unified diff";i:3;s:106:"mixed xdiff_file_patch ( string $file , string $patch , string $dest [, int $flags = DIFF_PATCH_NORMAL ] )";}
a:4:{i:0;s:23:"xdiff_string_bdiff_size";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:53:"Read a size of file created by applying a binary diff";i:3;s:45:"int xdiff_string_bdiff_size ( string $patch )";}
a:4:{i:0;s:18:"xdiff_string_bdiff";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:31:"Make binary diff of two strings";i:3;s:58:"string xdiff_string_bpatch ( string $str , string $patch )";}
a:4:{i:0;s:24:"xdiff_string_diff_binary";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:27:"Alias of xdiff_string_bdiff";i:3;s:112:"string xdiff_string_diff ( string $old_data , string $new_data [, int $context = 3 [, bool $minimal = false ]] )";}
a:4:{i:0;s:19:"xdiff_string_merge3";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:24:"Merge 3 strings into one";i:3;s:64:"string xdiff_string_patch_binary ( string $str , string $patch )";}
a:4:{i:0;s:18:"xdiff_string_patch";i:1;s:19:"PECL xdiff >= 0.2.0";i:2;s:35:"Patch a string with an unified diff";i:3;s:92:"string xdiff_string_patch ( string $str , string $patch [, int $flags [, string &$error ]] )";}
a:4:{i:0;s:23:"enchant_broker_describe";i:1;s:21:"PECL enchant >= 0.1.0";i:2;s:32:"Enumerates the Enchant providers";i:3;s:50:"array enchant_broker_describe ( resource $broker )";}
a:4:{i:0;s:24:"enchant_broker_free_dict";i:1;s:22:"PECL enchant >= 0.1.0 ";i:2;s:26:"Free a dictionary resource";i:3;s:52:"mixed enchant_broker_list_dicts ( resource $broker )";}
a:4:{i:0;s:27:"enchant_broker_request_dict";i:1;s:22:"PECL enchant >= 0.1.0 ";i:2;s:35:"create a new dictionary using a tag";i:3;s:71:"resource enchant_broker_request_dict ( resource $broker , string $tag )";}
a:4:{i:0;s:31:"enchant_broker_request_pwl_dict";i:1;s:22:"PECL enchant >= 0.1.0 ";i:2;s:37:"creates a dictionary using a PWL file";i:3;s:86:"bool enchant_broker_set_ordering ( resource $broker , string $tag , string $ordering )";}
a:4:{i:0;s:28:"enchant_dict_add_to_personal";i:1;s:22:"PECL enchant >= 0.1.0 ";i:2;s:32:"add a word to personal word list";i:3;s:46:"mixed enchant_dict_describe ( resource $dict )";}
a:4:{i:0;s:30:"enchant_dict_store_replacement";i:1;s:22:"PECL enchant >= 0.1.0 ";i:2;s:27:"Add a correction for a word";i:3;s:82:"void enchant_dict_store_replacement ( resource $dict , string $mis , string $cor )";}
a:4:{i:0;s:15:"fribidi_log2vis";i:1;s:54:"PHP 4 >= 4.0.4 and PHP 4 <= 4.1.0, PECL fribidi >= 1.0";i:2;s:40:"Convert a logical string to a visual one";i:3;s:73:"string fribidi_log2vis ( string $str , string $direction , int $charset )";}
a:4:{i:0;s:23:"bind_textdomain_codeset";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:101:"Specify the character encoding in which the messages from the DOMAIN message catalog will be returned";i:3;s:60:"string bindtextdomain ( string $domain , string $directory )";}
a:4:{i:0;s:9:"dcgettext";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Overrides the domain for a single lookup";i:3;s:34:"string gettext ( string $message )";}
a:4:{i:0;s:8:"ngettext";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:25:"Plural version of gettext";i:3;s:60:"string ngettext ( string $msgid1 , string $msgid2 , int $n )";}
a:4:{i:0;s:10:"textdomain";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Sets the default domain";i:3;s:41:"string textdomain ( string $text_domain )";}
a:4:{i:0;s:18:"iconv_get_encoding";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:60:"Retrieve internal configuration variables of iconv extension";i:3;s:52:"mixed iconv_get_encoding ([ string $type = "all" ] )";}
a:4:{i:0;s:18:"iconv_set_encoding";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:53:"Set current setting for character encoding conversion";i:3;s:58:"bool iconv_set_encoding ( string $type , string $charset )";}
a:4:{i:0;s:12:"iconv_strlen";i:1;s:5:"PHP 5";i:2;s:37:"Returns the character count of string";i:3;s:71:"string iconv ( string $in_charset , string $out_charset , string $str )";}
a:4:{i:0;s:16:"ob_iconv_handler";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:51:"Convert character encoding as output buffer handler";i:3;s:58:"string ob_iconv_handler ( string $contents , int $status )";}
a:4:{i:0;s:21:"Collator::__construct";i:1;s:34:"PHP 5 >= 5.3.0, PECL intl >= 1.0.0";i:2;s:17:"Create a collator";i:3;s:42:"Collator::__construct() ( string $locale )";}
a:4:{i:0;s:15:"grapheme_strlen";i:1;s:34:"PHP 5 >= 5.3.0, PECL intl >= 1.0.0";i:2;s:35:"Get string length in grapheme units";i:3;s:37:"int grapheme_strlen ( string $input )";}
a:4:{i:0;s:15:"grapheme_strstr";i:1;s:34:"PHP 5 >= 5.3.0, PECL intl >= 1.0.0";i:2;s:91:"Returns part of haystack string from the first occurrence of needle to the end of haystack.";i:3;s:93:"string grapheme_strstr ( string $haystack , string $needle [, bool $before_needle = false ] )";}
a:4:{i:0;s:15:"grapheme_substr";i:1;s:34:"PHP 5 >= 5.3.0, PECL intl >= 1.0.0";i:2;s:23:"Return part of a string";i:3;s:68:"int grapheme_substr ( string $string , int $start [, int $length ] )";}
a:4:{i:0;s:12:"idn_to_ascii";i:1;s:51:"PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1";i:2;s:39:"Convert domain name to IDNA ASCII form.";i:3;s:56:"string idn_to_ascii ( string $domain [, int $options ] )";}
a:4:{i:0;s:11:"idn_to_utf8";i:1;s:51:"PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1";i:2;s:47:"Convert domain name from IDNA ASCII to Unicode.";i:3;s:55:"string idn_to_utf8 ( string $domain [, int $options ] )";}
a:4:{i:0;s:15:"intl_error_name";i:1;s:34:"PHP 5 >= 5.3.0, PECL intl >= 1.0.0";i:2;s:40:"Get symbolic name for a given error code";i:3;s:42:"string intl_error_name ( int $error_code )";}
a:4:{i:0;s:19:"intl_get_error_code";i:1;s:34:"PHP 5 >= 5.3.0, PECL intl >= 1.0.0";i:2;s:23:"Get the last error code";i:3;s:32:"int intl_get_error_code ( void )";}
a:4:{i:0;s:22:"intl_get_error_message";i:1;s:34:"PHP 5 >= 5.3.0, PECL intl >= 1.0.0";i:2;s:33:"Get description of the last error";i:3;s:38:"string intl_get_error_message ( void )";}
a:4:{i:0;s:15:"intl_is_failure";i:1;s:34:"PHP 5 >= 5.3.0, PECL intl >= 1.0.0";i:2;s:52:"Check whether the given error code indicates failure";i:3;s:40:"bool intl_is_failure ( int $error_code )";}
a:4:{i:0;s:17:"mb_check_encoding";i:1;s:30:"PHP 4 >= 4.4.3, PHP 5 >= 5.1.3";i:2;s:55:"Check if the string is valid for the specified encoding";i:3;s:113:"string mb_convert_case ( string $str , int $mode = MB_CASE_UPPER [, string $encoding = mb_internal_encoding() ] )";}
a:4:{i:0;s:19:"mb_convert_encoding";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:26:"Convert character encoding";i:3;s:90:"string mb_convert_encoding ( string $str , string $to_encoding [, mixed $from_encoding ] )";}
a:4:{i:0;s:20:"mb_decode_mimeheader";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:34:"Decode string in MIME header field";i:3;s:112:"string mb_detect_encoding ( string $str [, mixed $encoding_list = mb_detect_order() [, bool $strict = false ]] )";}
a:4:{i:0;s:20:"mb_encode_mimeheader";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:29:"Encode string for MIME header";i:3;s:131:"string mb_encode_mimeheader ( string $str [, string $charset [, string $transfer_encoding [, string $linefeed [, int $indent ]]]] )";}
a:4:{i:0;s:23:"mb_encode_numericentity";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:49:"Encode character to HTML numeric string reference";i:3;s:82:"string mb_encode_numericentity ( string $str , array $convmap , string $encoding )";}
a:4:{i:0;s:19:"mb_encoding_aliases";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:36:"Get aliases of a known encoding type";i:3;s:46:"array mb_encoding_aliases ( string $encoding )";}
a:4:{i:0;s:13:"mb_ereg_match";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:45:"Regular expression match for multibyte string";i:3;s:75:"mixed mb_internal_encoding ([ string $encoding = mb_internal_encoding() ] )";}
a:4:{i:0;s:17:"mb_list_encodings";i:1;s:5:"PHP 5";i:2;s:43:"Returns an array of all supported encodings";i:3;s:32:"array mb_list_encodings ( void )";}
a:4:{i:0;s:17:"mb_output_handler";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:62:"Callback function converts character encoding in output buffer";i:3;s:59:"string mb_output_handler ( string $contents , int $status )";}
a:4:{i:0;s:22:"mb_preferred_mime_name";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:23:"Get MIME charset string";i:3;s:50:"string mb_preferred_mime_name ( string $encoding )";}
a:4:{i:0;s:17:"mb_regex_encoding";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:54:"Returns current encoding for multibyte regex as string";i:3;s:58:"string mb_regex_set_options ([ string $options = "msr" ] )";}
a:4:{i:0;s:12:"mb_send_mail";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:17:"Send encoded mail";i:3;s:147:"bool mb_send_mail ( string $to , string $subject , string $message [, string $additional_headers = NULL [, string $additional_parameter = NULL ]] )";}
a:4:{i:0;s:8:"mb_split";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:47:"Split multibyte string using regular expression";i:3;s:107:"string mb_strimwidth ( string $str , int $start , int $width [, string $trimmarker [, string $encoding ]] )";}
a:4:{i:0;s:9:"mb_strlen";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:17:"Get string length";i:3;s:83:"string mb_strtolower ( string $str [, string $encoding = mb_internal_encoding() ] )";}
a:4:{i:0;s:13:"mb_strtoupper";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:23:"Make a string uppercase";i:3;s:83:"string mb_strtoupper ( string $str [, string $encoding = mb_internal_encoding() ] )";}
a:4:{i:0;s:11:"mb_strwidth";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:22:"Return width of string";i:3;s:53:"int mb_strwidth ( string $str [, string $encoding ] )";}
a:4:{i:0;s:15:"mb_substr_count";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:41:"Count the number of substring occurrences";i:3;s:79:"int mb_substr_count ( string $haystack , string $needle [, string $encoding ] )";}
a:4:{i:0;s:9:"mb_substr";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:18:"Get part of string";i:3;s:83:"string mb_substr ( string $str , int $start [, int $length [, string $encoding ]] )";}
a:4:{i:0;s:22:"pspell_add_to_personal";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:35:"Add the word to a personal wordlist";i:3;s:67:"bool pspell_add_to_personal ( int $dictionary_link , string $word )";}
a:4:{i:0;s:21:"pspell_add_to_session";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:51:"Add the word to the wordlist in the current session";i:3;s:57:"bool pspell_check ( int $dictionary_link , string $word )";}
a:4:{i:0;s:20:"pspell_clear_session";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:25:"Clear the current session";i:3;s:50:"bool pspell_clear_session ( int $dictionary_link )";}
a:4:{i:0;s:20:"pspell_config_create";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:41:"Create a config used to open a dictionary";i:3;s:107:"int pspell_config_create ( string $language [, string $spelling [, string $jargon [, string $encoding ]]] )";}
a:4:{i:0;s:22:"pspell_config_data_dir";i:1;s:5:"PHP 5";i:2;s:31:"location of language data files";i:3;s:59:"bool pspell_config_ignore ( int $dictionary_link , int $n )";}
a:4:{i:0;s:18:"pspell_config_mode";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:46:"Change the mode number of suggestions returned";i:3;s:60:"bool pspell_config_mode ( int $dictionary_link , int $mode )";}
a:4:{i:0;s:22:"pspell_config_personal";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:42:"Set a file that contains personal wordlist";i:3;s:67:"bool pspell_config_personal ( int $dictionary_link , string $file )";}
a:4:{i:0;s:18:"pspell_config_repl";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:42:"Set a file that contains replacement pairs";i:3;s:63:"bool pspell_config_repl ( int $dictionary_link , string $file )";}
a:4:{i:0;s:23:"pspell_config_save_repl";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:74:"Determine whether to save a replacement pairs list along with the wordlist";i:3;s:37:"int pspell_new_config ( int $config )";}
a:4:{i:0;s:19:"pspell_new_personal";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:44:"Load a new dictionary with personal wordlist";i:3;s:143:"int pspell_new_personal ( string $personal , string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] )";}
a:4:{i:0;s:10:"pspell_new";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:21:"Load a new dictionary";i:3;s:115:"int pspell_new ( string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] )";}
a:4:{i:0;s:20:"pspell_save_wordlist";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:36:"Save the personal wordlist to a file";i:3;s:50:"bool pspell_save_wordlist ( int $dictionary_link )";}
a:4:{i:0;s:24:"pspell_store_replacement";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:35:"Store a replacement pair for a word";i:3;s:93:"bool pspell_store_replacement ( int $dictionary_link , string $misspelled , string $correct )";}
a:4:{i:0;s:14:"pspell_suggest";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:27:"Suggest spellings of a word";i:3;s:60:"array pspell_suggest ( int $dictionary_link , string $word )";}
a:4:{i:0;s:11:"recode_file";i:1;s:12:"PHP 4, PHP 5";i:2;s:52:"Recode from file to file according to recode request";i:3;s:73:"bool recode_file ( string $request , resource $input , resource $output )";}
a:4:{i:0;s:13:"recode_string";i:1;s:12:"PHP 4, PHP 5";i:2;s:45:"Recode a string according to a recode request";i:3;s:57:"string recode_string ( string $request , string $string )";}
a:4:{i:0;s:14:"exif_imagetype";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:30:"Determine the type of an image";i:3;s:39:"int exif_imagetype ( string $filename )";}
a:4:{i:0;s:12:"exif_tagname";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:32:"Get the header name for an index";i:3;s:34:"string exif_tagname ( int $index )";}
a:4:{i:0;s:14:"exif_thumbnail";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:55:"Retrieve the embedded thumbnail of a TIFF or JPEG image";i:3;s:96:"string exif_thumbnail ( string $filename [, int &$width [, int &$height [, int &$imagetype ]]] )";}
a:4:{i:0;s:7:"gd_info";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:61:"Retrieve information about the currently installed GD library";i:3;s:22:"array gd_info ( void )";}
a:4:{i:0;s:12:"getimagesize";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Get the size of an image";i:3;s:62:"array getimagesize ( string $filename [, array &$imageinfo ] )";}
a:4:{i:0;s:23:"image_type_to_extension";i:1;s:5:"PHP 5";i:2;s:33:"Get file extension for image type";i:3;s:72:"string image_type_to_extension ( int $imagetype [, bool $include_dot ] )";}
a:4:{i:0;s:10:"image2wbmp";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:31:"Output image to browser or file";i:3;s:76:"bool image2wbmp ( resource $image [, string $filename [, int $threshold ]] )";}
a:4:{i:0;s:18:"imagealphablending";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:34:"Set the blending mode for an image";i:3;s:61:"bool imagealphablending ( resource $image , bool $blendmode )";}
a:4:{i:0;s:14:"imageantialias";i:1;s:21:"PHP 4 >= 4.3.2, PHP 5";i:2;s:41:"Should antialias functions be used or not";i:3;s:55:"bool imageantialias ( resource $image , bool $enabled )";}
a:4:{i:0;s:8:"imagearc";i:1;s:12:"PHP 4, PHP 5";i:2;s:12:"Draws an arc";i:3;s:117:"bool imagearc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color )";}
a:4:{i:0;s:9:"imagechar";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Draw a character horizontally";i:3;s:89:"bool imagechar ( resource $image , int $font , int $x , int $y , string $c , int $color )";}
a:4:{i:0;s:11:"imagecharup";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Draw a character vertically";i:3;s:91:"bool imagecharup ( resource $image , int $font , int $x , int $y , string $c , int $color )";}
a:4:{i:0;s:18:"imagecolorallocate";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Allocate a color for an image";i:3;s:78:"int imagecolorallocate ( resource $image , int $red , int $green , int $blue )";}
a:4:{i:0;s:23:"imagecolorallocatealpha";i:1;s:21:"PHP 4 >= 4.3.2, PHP 5";i:2;s:29:"Allocate a color for an image";i:3;s:96:"int imagecolorallocatealpha ( resource $image , int $red , int $green , int $blue , int $alpha )";}
a:4:{i:0;s:12:"imagecolorat";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Get the index of the color of a pixel";i:3;s:54:"int imagecolorat ( resource $image , int $x , int $y )";}
a:4:{i:0;s:17:"imagecolorclosest";i:1;s:12:"PHP 4, PHP 5";i:2;s:57:"Get the index of the closest color to the specified color";i:3;s:77:"int imagecolorclosest ( resource $image , int $red , int $green , int $blue )";}
a:4:{i:0;s:15:"imagecolorexact";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Get the index of the specified color";i:3;s:75:"int imagecolorexact ( resource $image , int $red , int $green , int $blue )";}
a:4:{i:0;s:15:"imagecolormatch";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:93:"Makes the colors of the palette version of an image more closely match the true color version";i:3;s:60:"bool imagecolormatch ( resource $image1 , resource $image2 )";}
a:4:{i:0;s:17:"imagecolorresolve";i:1;s:12:"PHP 4, PHP 5";i:2;s:72:"Get the index of the specified color or its closest possible alternative";i:3;s:77:"int imagecolorresolve ( resource $image , int $red , int $green , int $blue )";}
a:4:{i:0;s:13:"imagecolorset";i:1;s:12:"PHP 4, PHP 5";i:2;s:45:"Set the color for the specified palette index";i:3;s:107:"void imagecolorset ( resource $image , int $index , int $red , int $green , int $blue [, int $alpha = 0 ] )";}
a:4:{i:0;s:19:"imagecolorsforindex";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Get the colors for an index";i:3;s:58:"array imagecolorsforindex ( resource $image , int $index )";}
a:4:{i:0;s:21:"imagecolortransparent";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Define a color as transparent";i:3;s:61:"int imagecolortransparent ( resource $image [, int $color ] )";}
a:4:{i:0;s:9:"imagecopy";i:1;s:12:"PHP 4, PHP 5";i:2;s:21:"Copy part of an image";i:3;s:132:"bool imagecopy ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h )";}
a:4:{i:0;s:14:"imagecopymerge";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:31:"Copy and merge part of an image";i:3;s:148:"bool imagecopymerge ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct )";}
a:4:{i:0;s:18:"imagecopymergegray";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:47:"Copy and merge part of an image with gray scale";i:3;s:152:"bool imagecopymergegray ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct )";}
a:4:{i:0;s:18:"imagecopyresampled";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:48:"Copy and resize part of an image with resampling";i:3;s:173:"bool imagecopyresampled ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h )";}
a:4:{i:0;s:16:"imagecopyresized";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Copy and resize part of an image";i:3;s:171:"bool imagecopyresized ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h )";}
a:4:{i:0;s:11:"imagecreate";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Create a new palette based image";i:3;s:49:"resource imagecreate ( int $width , int $height )";}
a:4:{i:0;s:18:"imagecreatefromgd2";i:1;s:21:"PHP 4 >= 4.0.7, PHP 5";i:2;s:39:"Create a new image from GD2 file or URL";i:3;s:48:"resource imagecreatefromgd2 ( string $filename )";}
a:4:{i:0;s:22:"imagecreatefromgd2part";i:1;s:21:"PHP 4 >= 4.0.7, PHP 5";i:2;s:55:"Create a new image from a given part of GD2 file or URL";i:3;s:103:"resource imagecreatefromgd2part ( string $filename , int $srcX , int $srcY , int $width , int $height )";}
a:4:{i:0;s:17:"imagecreatefromgd";i:1;s:21:"PHP 4 >= 4.0.7, PHP 5";i:2;s:38:"Create a new image from GD file or URL";i:3;s:47:"resource imagecreatefromgd ( string $filename )";}
a:4:{i:0;s:18:"imagecreatefromgif";i:1;s:12:"PHP 4, PHP 5";i:2;s:35:"Create a new image from file or URL";i:3;s:48:"resource imagecreatefromgif ( string $filename )";}
a:4:{i:0;s:19:"imagecreatefromjpeg";i:1;s:12:"PHP 4, PHP 5";i:2;s:35:"Create a new image from file or URL";i:3;s:49:"resource imagecreatefromjpeg ( string $filename )";}
a:4:{i:0;s:18:"imagecreatefrompng";i:1;s:12:"PHP 4, PHP 5";i:2;s:35:"Create a new image from file or URL";i:3;s:48:"resource imagecreatefrompng ( string $filename )";}
a:4:{i:0;s:21:"imagecreatefromstring";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:54:"Create a new image from the image stream in the string";i:3;s:47:"resource imagecreatefromstring ( string $data )";}
a:4:{i:0;s:19:"imagecreatefromwbmp";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:35:"Create a new image from file or URL";i:3;s:49:"resource imagecreatefromwbmp ( string $filename )";}
a:4:{i:0;s:18:"imagecreatefromxbm";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:35:"Create a new image from file or URL";i:3;s:48:"resource imagecreatefromxbm ( string $filename )";}
a:4:{i:0;s:18:"imagecreatefromxpm";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:35:"Create a new image from file or URL";i:3;s:48:"resource imagecreatefromxpm ( string $filename )";}
a:4:{i:0;s:20:"imagecreatetruecolor";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:29:"Create a new true color image";i:3;s:58:"resource imagecreatetruecolor ( int $width , int $height )";}
a:4:{i:0;s:15:"imagedashedline";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Draw a dashed line";i:3;s:93:"bool imagedashedline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )";}
a:4:{i:0;s:12:"imagedestroy";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Destroy an image";i:3;s:37:"bool imagedestroy ( resource $image )";}
a:4:{i:0;s:12:"imageellipse";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:15:"Draw an ellipse";i:3;s:97:"bool imageellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color )";}
a:4:{i:0;s:9:"imagefill";i:1;s:12:"PHP 4, PHP 5";i:2;s:10:"Flood fill";i:3;s:65:"bool imagefill ( resource $image , int $x , int $y , int $color )";}
a:4:{i:0;s:14:"imagefilledarc";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:30:"Draw a partial arc and fill it";i:3;s:136:"bool imagefilledarc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color , int $style )";}
a:4:{i:0;s:18:"imagefilledellipse";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:21:"Draw a filled ellipse";i:3;s:103:"bool imagefilledellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color )";}
a:4:{i:0;s:18:"imagefilledpolygon";i:1;s:12:"PHP 4, PHP 5";i:2;s:21:"Draw a filled polygon";i:3;s:90:"bool imagefilledpolygon ( resource $image , array $points , int $num_points , int $color )";}
a:4:{i:0;s:20:"imagefilledrectangle";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Draw a filled rectangle";i:3;s:98:"bool imagefilledrectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )";}
a:4:{i:0;s:17:"imagefilltoborder";i:1;s:12:"PHP 4, PHP 5";i:2;s:28:"Flood fill to specific color";i:3;s:87:"bool imagefilltoborder ( resource $image , int $x , int $y , int $border , int $color )";}
a:4:{i:0;s:11:"imagefilter";i:1;s:5:"PHP 5";i:2;s:28:"Applies a filter to an image";i:3;s:111:"bool imagefilter ( resource $image , int $filtertype [, int $arg1 [, int $arg2 [, int $arg3 [, int $arg4 ]]]] )";}
a:4:{i:0;s:15:"imagefontheight";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Get font height";i:3;s:33:"int imagefontheight ( int $font )";}
a:4:{i:0;s:14:"imagefontwidth";i:1;s:12:"PHP 4, PHP 5";i:2;s:14:"Get font width";i:3;s:32:"int imagefontwidth ( int $font )";}
a:4:{i:0;s:11:"imageftbbox";i:1;s:21:"PHP 4 >= 4.0.7, PHP 5";i:2;s:57:"Give the bounding box of a text using fonts via freetype2";i:3;s:104:"array imageftbbox ( float $size , float $angle , string $fontfile , string $text [, array $extrainfo ] )";}
a:4:{i:0;s:11:"imagefttext";i:1;s:21:"PHP 4 >= 4.0.7, PHP 5";i:2;s:52:"Write text to the image using fonts using FreeType 2";i:3;s:153:"array imagefttext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text [, array $extrainfo ] )";}
a:4:{i:0;s:17:"imagegammacorrect";i:1;s:12:"PHP 4, PHP 5";i:2;s:38:"Apply a gamma correction to a GD image";i:3;s:83:"bool imagegammacorrect ( resource $image , float $inputgamma , float $outputgamma )";}
a:4:{i:0;s:8:"imagegd2";i:1;s:21:"PHP 4 >= 4.0.7, PHP 5";i:2;s:35:"Output GD2 image to browser or file";i:3;s:89:"bool imagegd2 ( resource $image [, string $filename [, int $chunk_size [, int $type ]]] )";}
a:4:{i:0;s:7:"imagegd";i:1;s:21:"PHP 4 >= 4.0.7, PHP 5";i:2;s:34:"Output GD image to browser or file";i:3;s:54:"bool imagegd ( resource $image [, string $filename ] )";}
a:4:{i:0;s:8:"imagegif";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"Output image to browser or file";i:3;s:55:"bool imagegif ( resource $image [, string $filename ] )";}
a:4:{i:0;s:15:"imagegrabscreen";i:1;s:14:"PHP 5 >= 5.2.2";i:2;s:25:"Captures the whole screen";i:3;s:33:"resource imagegrabscreen ( void )";}
a:4:{i:0;s:15:"imagegrabwindow";i:1;s:14:"PHP 5 >= 5.2.2";i:2;s:17:"Captures a window";i:3;s:73:"resource imagegrabwindow ( int $window_handle [, int $client_area = 0 ] )";}
a:4:{i:0;s:14:"imageinterlace";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Enable or disable interlace";i:3;s:62:"int imageinterlace ( resource $image [, int $interlace = 0 ] )";}
a:4:{i:0;s:16:"imageistruecolor";i:1;s:21:"PHP 4 >= 4.3.2, PHP 5";i:2;s:43:"Finds whether an image is a truecolor image";i:3;s:41:"bool imageistruecolor ( resource $image )";}
a:4:{i:0;s:9:"imagejpeg";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"Output image to browser or file";i:3;s:73:"bool imagejpeg ( resource $image [, string $filename [, int $quality ]] )";}
a:4:{i:0;s:16:"imagelayereffect";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:69:"Set the alpha blending flag to use the bundled libgd layering effects";i:3;s:55:"bool imagelayereffect ( resource $image , int $effect )";}
a:4:{i:0;s:9:"imageline";i:1;s:12:"PHP 4, PHP 5";i:2;s:11:"Draw a line";i:3;s:87:"bool imageline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )";}
a:4:{i:0;s:13:"imageloadfont";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Load a new font";i:3;s:34:"int imageloadfont ( string $file )";}
a:4:{i:0;s:16:"imagepalettecopy";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:42:"Copy the palette from one image to another";i:3;s:66:"void imagepalettecopy ( resource $destination , resource $source )";}
a:4:{i:0;s:8:"imagepng";i:1;s:12:"PHP 4, PHP 5";i:2;s:50:"Output a PNG image to either the browser or a file";i:3;s:89:"bool imagepng ( resource $image [, string $filename [, int $quality [, int $filters ]]] )";}
a:4:{i:0;s:12:"imagepolygon";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Draws a polygon";i:3;s:84:"bool imagepolygon ( resource $image , array $points , int $num_points , int $color )";}
a:4:{i:0;s:11:"imagepsbbox";i:1;s:12:"PHP 4, PHP 5";i:2;s:70:"Give the bounding box of a text rectangle using PostScript Type1 fonts";i:3;s:108:"array imagepsbbox ( string $text , resource $font , int $size , int $space , int $tightness , float $angle )";}
a:4:{i:0;s:17:"imagepsencodefont";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Change the character encoding vector of a font";i:3;s:70:"bool imagepsencodefont ( resource $font_index , string $encodingfile )";}
a:4:{i:0;s:17:"imagepsextendfont";i:1;s:12:"PHP 4, PHP 5";i:2;s:25:"Extend or condense a font";i:3;s:63:"bool imagepsextendfont ( resource $font_index , float $extend )";}
a:4:{i:0;s:15:"imagepsfreefont";i:1;s:12:"PHP 4, PHP 5";i:2;s:44:"Free memory used by a PostScript Type 1 font";i:3;s:45:"bool imagepsfreefont ( resource $font_index )";}
a:4:{i:0;s:15:"imagepsloadfont";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Load a PostScript Type 1 font from file";i:3;s:45:"resource imagepsloadfont ( string $filename )";}
a:4:{i:0;s:16:"imagepsslantfont";i:1;s:12:"PHP 4, PHP 5";i:2;s:12:"Slant a font";i:3;s:61:"bool imagepsslantfont ( resource $font_index , float $slant )";}
a:4:{i:0;s:11:"imagepstext";i:1;s:12:"PHP 4, PHP 5";i:2;s:55:"Draws a text over an image using PostScript Type1 fonts";i:3;s:236:"array imagepstext ( resource $image , string $text , resource $font_index , int $size , int $foreground , int $background , int $x , int $y [, int $space = 0 [, int $tightness = 0 [, float $angle = 0.0 [, int $antialias_steps = 4 ]]]] )";}
a:4:{i:0;s:14:"imagerectangle";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Draw a rectangle";i:3;s:92:"bool imagerectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )";}
a:4:{i:0;s:11:"imagerotate";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:34:"Rotate an image with a given angle";i:3;s:105:"resource imagerotate ( resource $image , float $angle , int $bgd_color [, int $ignore_transparent = 0 ] )";}
a:4:{i:0;s:13:"imagesetbrush";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:36:"Set the brush image for line drawing";i:3;s:56:"bool imagesetbrush ( resource $image , resource $brush )";}
a:4:{i:0;s:13:"imagesetpixel";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Set a single pixel";i:3;s:69:"bool imagesetpixel ( resource $image , int $x , int $y , int $color )";}
a:4:{i:0;s:13:"imagesetstyle";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:30:"Set the style for line drawing";i:3;s:53:"bool imagesetstyle ( resource $image , array $style )";}
a:4:{i:0;s:17:"imagesetthickness";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:34:"Set the thickness for line drawing";i:3;s:59:"bool imagesetthickness ( resource $image , int $thickness )";}
a:4:{i:0;s:12:"imagesettile";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:30:"Set the tile image for filling";i:3;s:54:"bool imagesettile ( resource $image , resource $tile )";}
a:4:{i:0;s:11:"imagestring";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Draw a string horizontally";i:3;s:96:"bool imagestring ( resource $image , int $font , int $x , int $y , string $string , int $color )";}
a:4:{i:0;s:13:"imagestringup";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Draw a string vertically";i:3;s:98:"bool imagestringup ( resource $image , int $font , int $x , int $y , string $string , int $color )";}
a:4:{i:0;s:7:"imagesx";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Get image width";i:3;s:31:"int imagesx ( resource $image )";}
a:4:{i:0;s:7:"imagesy";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Get image height";i:3;s:31:"int imagesy ( resource $image )";}
a:4:{i:0;s:23:"imagetruecolortopalette";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:45:"Convert a true color image to a palette image";i:3;s:78:"bool imagetruecolortopalette ( resource $image , bool $dither , int $ncolors )";}
a:4:{i:0;s:12:"imagettfbbox";i:1;s:12:"PHP 4, PHP 5";i:2;s:52:"Give the bounding box of a text using TrueType fonts";i:3;s:83:"array imagettfbbox ( float $size , float $angle , string $fontfile , string $text )";}
a:4:{i:0;s:12:"imagettftext";i:1;s:12:"PHP 4, PHP 5";i:2;s:44:"Write text to the image using TrueType fonts";i:3;s:132:"array imagettftext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text )";}
a:4:{i:0;s:10:"imagetypes";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:50:"Return the image types supported by this PHP build";i:3;s:23:"int imagetypes ( void )";}
a:4:{i:0;s:9:"imagewbmp";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:31:"Output image to browser or file";i:3;s:76:"bool imagewbmp ( resource $image [, string $filename [, int $foreground ]] )";}
a:4:{i:0;s:8:"imagexbm";i:1;s:5:"PHP 5";i:2;s:35:"Output XBM image to browser or file";i:3;s:73:"bool imagexbm ( resource $image , string $filename [, int $foreground ] )";}
a:4:{i:0;s:9:"iptcembed";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Embeds binary IPTC data into a JPEG image";i:3;s:77:"mixed iptcembed ( string $iptcdata , string $jpeg_file_name [, int $spool ] )";}
a:4:{i:0;s:9:"iptcparse";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:"Parse a binary IPTC block into single tags.";i:3;s:37:"array iptcparse ( string $iptcblock )";}
a:4:{i:0;s:9:"jpeg2wbmp";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:42:"Convert JPEG image file to WBMP image file";i:3;s:108:"bool jpeg2wbmp ( string $jpegname , string $wbmpname , int $dest_height , int $dest_width , int $threshold )";}
a:4:{i:0;s:8:"png2wbmp";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:41:"Convert PNG image file to WBMP image file";i:3;s:106:"bool png2wbmp ( string $pngname , string $wbmpname , int $dest_height , int $dest_width , int $threshold )";}
a:4:{i:0;s:26:"Imagick::adaptiveBlurImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:34:"Adds adaptive blur filter to image";i:3;s:109:"bool Imagick::adaptiveBlurImage ( float $radius , float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT ] )";}
a:4:{i:0;s:28:"Imagick::adaptiveResizeImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:57:"Adaptively resize image with data dependent triangulation";i:3;s:89:"bool Imagick::adaptiveResizeImage ( int $columns , int $rows [, bool $bestfit = false ] )";}
a:4:{i:0;s:29:"Imagick::adaptiveSharpenImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:28:"Adaptively sharpen the image";i:3;s:112:"bool Imagick::adaptiveSharpenImage ( float $radius , float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT ] )";}
a:4:{i:0;s:31:"Imagick::adaptiveThresholdImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:64:"Selects a threshold for each pixel based on a range of intensity";i:3;s:110:"bool Imagick::annotateImage ( ImagickDraw $draw_settings , float $x , float $y , float $angle , string $text )";}
a:4:{i:0;s:21:"Imagick::appendImages";i:1;s:18:"PECL imagick 2.0.0";i:2;s:22:"Append a set of images";i:3;s:45:"Imagick Imagick::appendImages ( bool $stack )";}
a:4:{i:0;s:22:"Imagick::averageImages";i:1;s:18:"PECL imagick 2.0.0";i:2;s:23:"Average a set of images";i:3;s:74:"bool Imagick::blurImage ( float $radius , float $sigma [, int $channel ] )";}
a:4:{i:0;s:20:"Imagick::borderImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:33:"Surrounds the image with a border";i:3;s:70:"bool Imagick::chopImage ( int $width , int $height , int $x , int $y )";}
a:4:{i:0;s:14:"Imagick::clear";i:1;s:18:"PECL imagick 2.0.0";i:2;s:49:"Clears all resources associated to Imagick object";i:3;s:96:"bool Imagick::clutImage ( Imagick $lookup_table [, float $channel = Imagick::CHANNEL_DEFAULT ] )";}
a:4:{i:0;s:23:"Imagick::coalesceImages";i:1;s:18:"PECL imagick 2.0.0";i:2;s:26:"Composites a set of images";i:3;s:46:"bool Imagick::commentImage ( string $comment )";}
a:4:{i:0;s:29:"Imagick::compareImageChannels";i:1;s:18:"PECL imagick 2.0.0";i:2;s:44:"Returns the difference in one or more images";i:3;s:51:"Imagick Imagick::compareImageLayers ( int $method )";}
a:4:{i:0;s:22:"Imagick::compareImages";i:1;s:18:"PECL imagick 2.0.0";i:2;s:42:"Compares an image to a reconstructed image";i:3;s:63:"array Imagick::compareImages ( Imagick $compare , int $metric )";}
a:4:{i:0;s:23:"Imagick::compositeImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:32:"Composite one image onto another";i:3;s:77:"bool Imagick::distortImage ( int $method , array $arguments , bool $bestfit )";}
a:4:{i:0;s:18:"Imagick::drawImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:51:"Renders the ImagickDraw object on the current image";i:3;s:115:"public array Imagick::exportImagePixels ( int $x , int $y , int $width , int $height , string $map , int $STORAGE )";}
a:4:{i:0;s:20:"Imagick::extentImage";i:1;s:54:"No version information available, might only be in SVN";i:2;s:14:"Set image size";i:3;s:157:"bool Imagick::floodFillPaintImage ( mixed $fill , float $fuzz , mixed $target , int $x , int $y , bool $invert [, int $channel = Imagick::CHANNEL_DEFAULT ] )";}
a:4:{i:0;s:18:"Imagick::flopImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:33:"Creates a horizontal mirror image";i:3;s:47:"int Imagick::getImageInterpolateMethod ( void )";}
a:4:{i:0;s:27:"Imagick::getImageIterations";i:1;s:18:"PECL imagick 2.0.0";i:2;s:25:"Gets the image iterations";i:3;s:36:"int Imagick::getImageLength ( void )";}
a:4:{i:0;s:30:"Imagick::getImageMagickLicense";i:1;s:18:"PECL imagick 2.0.0";i:2;s:51:"Returns a string containing the ImageMagick license";i:3;s:0:"";}
a:4:{i:0;s:27:"Imagick::getImageProperties";i:1;s:18:"PECL imagick 2.0.0";i:2;s:28:"Returns the image properties";i:3;s:0:"";}
a:4:{i:0;s:25:"Imagick::getImageProperty";i:1;s:18:"PECL imagick 2.0.0";i:2;s:32:"Returns the named image property";i:3;s:49:"string Imagick::getImageProperty ( string $name )";}
a:4:{i:0;s:27:"Imagick::getImageRedPrimary";i:1;s:18:"PECL imagick 2.0.0";i:2;s:42:"Returns the chromaticity red primary point";i:3;s:38:"int Imagick::getIteratorIndex ( void )";}
a:4:{i:0;s:24:"Imagick::getNumberImages";i:1;s:18:"PECL imagick 2.0.0";i:2;s:42:"Returns the number of images in the object";i:3;s:130:"public bool Imagick::importImagePixels ( int $x , int $y , int $width , int $height , string $map , int $storage , array $pixels )";}
a:4:{i:0;s:19:"Imagick::labelImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:24:"Adds a label to an image";i:3;s:52:"bool Imagick::mergeImageLayers ( int $layer_method )";}
a:4:{i:0;s:20:"Imagick::minifyImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:47:"Scales an image proportionally to half its size";i:3;s:132:"Imagick Imagick::montageImage ( ImagickDraw $draw , string $tile_geometry , string $thumbnail_geometry , int $mode , string $frame )";}
a:4:{i:0;s:20:"Imagick::morphImages";i:1;s:18:"PECL imagick 2.0.0";i:2;s:29:"Method morphs a set of images";i:3;s:88:"bool Imagick::newImage ( int $cols , int $rows , mixed $background [, string $format ] )";}
a:4:{i:0;s:23:"Imagick::newPseudoImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:19:"Creates a new image";i:3;s:42:"bool Imagick::optimizeImageLayers ( void )";}
a:4:{i:0;s:30:"Imagick::orderedPosterizeImage";i:1;s:18:"PECL imagick 2.2.2";i:2;s:26:"Performs an ordered dither";i:3;s:45:"bool Imagick::pingImageBlob ( string $image )";}
a:4:{i:0;s:22:"Imagick::pingImageFile";i:1;s:18:"PECL imagick 2.0.0";i:2;s:50:"Get basic image attributes in a lightweight manner";i:3;s:74:"bool Imagick::pingImageFile ( resource $filehandle [, string $fileName ] )";}
a:4:{i:0;s:22:"Imagick::polaroidImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:28:"Simulates a Polaroid picture";i:3;s:70:"bool Imagick::polaroidImage ( ImagickDraw $properties , float $angle )";}
a:4:{i:0;s:23:"Imagick::posterizeImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:52:"Reduces the image to a limited number of color level";i:3;s:61:"bool Imagick::profileImage ( string $name , string $profile )";}
a:4:{i:0;s:22:"Imagick::quantizeImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:44:"Analyzes the colors within a reference image";i:3;s:95:"array Imagick::queryFontMetrics ( ImagickDraw $properties , string $text [, bool $multiline ] )";}
a:4:{i:0;s:19:"Imagick::queryFonts";i:1;s:18:"PECL imagick 2.0.0";i:2;s:28:"Returns the configured fonts";i:3;s:0:"";}
a:4:{i:0;s:21:"Imagick::queryFormats";i:1;s:18:"PECL imagick 2.0.0";i:2;s:36:"Returns formats supported by Imagick";i:3;s:0:"";}
a:4:{i:0;s:24:"Imagick::radialBlurImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:21:"Radial blurs an image";i:3;s:45:"bool Imagick::resetImagePage ( string $page )";}
a:4:{i:0;s:20:"Imagick::resizeImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:15:"Scales an image";i:3;s:154:"bool Imagick::roundCorners ( float $x_rounding , float $y_rounding [, float $stroke_width = 10 [, float $displace = 5 [, float $size_correction = -6 ]]] )";}
a:4:{i:0;s:20:"Imagick::sampleImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:35:"Scales an image with pixel sampling";i:3;s:38:"bool Imagick::setFont ( string $font )";}
a:4:{i:0;s:18:"Imagick::setFormat";i:1;s:18:"PECL imagick 2.0.0";i:2;s:37:"Sets the format of the Imagick object";i:3;s:43:"bool Imagick::setImage ( Imagick $replace )";}
a:4:{i:0;s:29:"Imagick::setImageAlphaChannel";i:1;s:54:"No version information available, might only be in SVN";i:2;s:24:"Sets image alpha channel";i:3;s:48:"bool Imagick::setImageAlphaChannel ( int $mode )";}
a:4:{i:0;s:25:"Imagick::setImageArtifact";i:1;s:54:"No version information available, might only be in SVN";i:2;s:18:"Set image artifact";i:3;s:55:"bool Imagick::setImageInterpolateMethod ( int $method )";}
a:4:{i:0;s:27:"Imagick::setImageIterations";i:1;s:18:"PECL imagick 2.0.0";i:2;s:25:"Sets the image iterations";i:3;s:48:"bool Imagick::setImageOpacity ( float $opacity )";}
a:4:{i:0;s:28:"Imagick::setImageOrientation";i:1;s:18:"PECL imagick 2.0.0";i:2;s:26:"Sets the image orientation";i:3;s:63:"bool Imagick::setImageProperty ( string $name , string $value )";}
a:4:{i:0;s:27:"Imagick::setImageRedPrimary";i:1;s:18:"PECL imagick 2.0.0";i:2;s:45:"Sets the image chromaticity red primary point";i:3;s:45:"bool Imagick::setIteratorIndex ( int $index )";}
a:4:{i:0;s:24:"Imagick::setLastIterator";i:1;s:18:"PECL imagick 2.0.1";i:2;s:43:"Sets the Imagick iterator to the last image";i:3;s:48:"bool Imagick::setPointSize ( float $point_size )";}
a:4:{i:0;s:22:"Imagick::setResolution";i:1;s:18:"PECL imagick 2.0.0";i:2;s:25:"Sets the image resolution";i:3;s:56:"bool Imagick::tintImage ( mixed $tint , mixed $opacity )";}
a:4:{i:0;s:23:"Imagick::transformImage";i:1;s:18:"PECL imagick 2.0.0";i:2;s:63:"Convenience method for setting crop size and the image geometry";i:3;s:67:"Imagick Imagick::transformImage ( string $crop , string $geometry )";}
a:4:{i:0;s:30:"Imagick::transparentPaintImage";i:1;s:54:"No version information available, might only be in SVN";i:2;s:25:"Paints pixels transparent";i:3;s:39:"bool Imagick::trimImage ( float $fuzz )";}
a:4:{i:0;s:26:"Imagick::uniqueImageColors";i:1;s:18:"PECL imagick 2.0.0";i:2;s:39:"Discards all but one of any pixel color";i:3;s:54:"bool Imagick::writeImagesFile ( resource $filehandle )";}
a:4:{i:0;s:19:"ImagickDraw::affine";i:1;s:18:"PECL imagick 2.0.0";i:2;s:48:"Adjusts the current affine transformation matrix";i:3;s:51:"bool ImagickDraw::translate ( float $x , float $y )";}
a:4:{i:0;s:19:"ImagickPixel::clear";i:1;s:18:"PECL imagick 2.0.0";i:2;s:44:"Clears resources associated with this object";i:3;s:80:"bool ImagickPixel::setHSL ( float $hue , float $saturation , float $luminosity )";}
a:4:{i:0;s:27:"ImagickPixelIterator::clear";i:1;s:18:"PECL imagick 2.0.0";i:2;s:47:"Clear resources associated with a PixelIterator";i:3;s:48:"bool ImagickPixelIterator::syncIterator ( void )";}
a:4:{i:0;s:17:"Gmagick::addimage";i:1;s:23:"PECL gmagick >= Unknown";i:2;s:43:"Adds new image to Gmagick object image list";i:3;s:44:"public void Gmagick::despeckleimage ( void )";}
a:4:{i:0;s:16:"Gmagick::destroy";i:1;s:23:"PECL gmagick >= Unknown";i:2;s:19:"The destroy purpose";i:3;s:89:"public void Gmagick::modulateimage ( float $brightness , float $saturation , float $hue )";}
a:4:{i:0;s:24:"Gmagick::motionblurimage";i:1;s:23:"PECL gmagick >= Unknown";i:2;s:21:"Simulates motion blur";i:3;s:68:"public void Gmagick::profileimage ( string $name , string $profile )";}
a:4:{i:0;s:22:"Gmagick::quantizeimage";i:1;s:23:"PECL gmagick >= Unknown";i:2;s:44:"Analyzes the colors within a reference image";i:3;s:124:"public void Gmagick::quantizeimage ( int $numColors , int $colorspace , int $treeDepth , bool $dither , bool $measureError )";}
a:4:{i:0;s:23:"Gmagick::quantizeimages";i:1;s:23:"PECL gmagick >= Unknown";i:2;s:26:"The quantizeimages purpose";i:3;s:125:"public void Gmagick::quantizeimages ( int $numColors , int $colorspace , int $treeDepth , bool $dither , bool $measureError )";}
a:4:{i:0;s:25:"Gmagick::queryfontmetrics";i:1;s:23:"PECL gmagick >= Unknown";i:2;s:46:"Returns an array representing the font metrics";i:3;s:52:"public void Gmagick::writeimage ( string $filename )";}
a:4:{i:0;s:21:"GmagickDraw::annotate";i:1;s:23:"PECL gmagick >= Unknown";i:2;s:23:"Draws text on the image";i:3;s:61:"public void GmagickDraw::settextencoding ( string $encoding )";}
a:4:{i:0;s:25:"GmagickPixel::__construct";i:1;s:23:"PECL gmagick >= Unknown";i:2;s:28:"The GmagickPixel constructor";i:3;s:69:"public void GmagickPixel::setcolorvalue ( int $color , float $value )";}
a:4:{i:0;s:12:"cairo_create";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:59:"Returns a new CairoContext object on the requested surface.";i:3;s:51:"CairoContext cairo_create ( CairoSurface $surface )";}
a:4:{i:0;s:24:"cairo_font_face_get_type";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:56:"int cairo_font_face_get_type ( CairoFontFace $fontface )";}
a:4:{i:0;s:22:"cairo_font_face_status";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:54:"int cairo_font_face_status ( CairoFontFace $fontface )";}
a:4:{i:0;s:25:"cairo_font_options_create";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:51:"CairoFontOptions cairo_font_options_create ( void )";}
a:4:{i:0;s:24:"cairo_font_options_equal";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:85:"bool cairo_font_options_equal ( CairoFontOptions $options , CairoFontOptions $other )";}
a:4:{i:0;s:32:"cairo_font_options_get_antialias";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:66:"int cairo_font_options_get_antialias ( CairoFontOptions $options )";}
a:4:{i:0;s:35:"cairo_font_options_get_hint_metrics";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:69:"int cairo_font_options_get_hint_metrics ( CairoFontOptions $options )";}
a:4:{i:0;s:33:"cairo_font_options_get_hint_style";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:67:"int cairo_font_options_get_hint_style ( CairoFontOptions $options )";}
a:4:{i:0;s:37:"cairo_font_options_get_subpixel_order";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:71:"int cairo_font_options_get_subpixel_order ( CairoFontOptions $options )";}
a:4:{i:0;s:23:"cairo_font_options_hash";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:57:"int cairo_font_options_hash ( CairoFontOptions $options )";}
a:4:{i:0;s:24:"cairo_font_options_merge";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:85:"void cairo_font_options_merge ( CairoFontOptions $options , CairoFontOptions $other )";}
a:4:{i:0;s:32:"cairo_font_options_set_antialias";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:87:"void cairo_font_options_set_antialias ( CairoFontOptions $options , string $antialias )";}
a:4:{i:0;s:35:"cairo_font_options_set_hint_metrics";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:93:"void cairo_font_options_set_hint_metrics ( CairoFontOptions $options , string $hint_metrics )";}
a:4:{i:0;s:33:"cairo_font_options_set_hint_style";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:89:"void cairo_font_options_set_hint_style ( CairoFontOptions $options , string $hint_style )";}
a:4:{i:0;s:37:"cairo_font_options_set_subpixel_order";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:97:"void cairo_font_options_set_subpixel_order ( CairoFontOptions $options , string $subpixel_order )";}
a:4:{i:0;s:25:"cairo_font_options_status";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:59:"int cairo_font_options_status ( CairoFontOptions $options )";}
a:4:{i:0;s:29:"cairo_format_stride_for_width";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:62:"int cairo_format_stride_for_width ( int $format , int $width )";}
a:4:{i:0;s:35:"cairo_image_surface_create_for_data";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:133:"CairoImageSurface cairo_image_surface_create_for_data ( string $data , int $format , int $width , int $height [, int $stride = -1 ] )";}
a:4:{i:0;s:35:"cairo_image_surface_create_from_png";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:70:"CairoImageSurface cairo_image_surface_create_from_png ( string $file )";}
a:4:{i:0;s:26:"cairo_image_surface_create";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:87:"CairoImageSurface cairo_image_surface_create ( int $format , int $width , int $height )";}
a:4:{i:0;s:28:"cairo_image_surface_get_data";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:66:"string cairo_image_surface_get_data ( CairoImageSurface $surface )";}
a:4:{i:0;s:30:"cairo_image_surface_get_format";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:65:"int cairo_image_surface_get_format ( CairoImageSurface $surface )";}
a:4:{i:0;s:30:"cairo_image_surface_get_height";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:65:"int cairo_image_surface_get_height ( CairoImageSurface $surface )";}
a:4:{i:0;s:30:"cairo_image_surface_get_stride";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:65:"int cairo_image_surface_get_stride ( CairoImageSurface $surface )";}
a:4:{i:0;s:29:"cairo_image_surface_get_width";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:64:"int cairo_image_surface_get_width ( CairoImageSurface $surface )";}
a:4:{i:0;s:19:"cairo_matrix_invert";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:48:"void cairo_matrix_invert ( CairoMatrix $matrix )";}
a:4:{i:0;s:21:"cairo_matrix_multiply";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:81:"CairoMatrix cairo_matrix_multiply ( CairoMatrix $matrix1 , CairoMatrix $matrix2 )";}
a:4:{i:0;s:19:"cairo_matrix_rotate";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:66:"void cairo_matrix_rotate ( CairoMatrix $matrix , string $radians )";}
a:4:{i:0;s:31:"cairo_matrix_transform_distance";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:87:"array cairo_matrix_transform_distance ( CairoMatrix $matrix , string $dx , string $dy )";}
a:4:{i:0;s:28:"cairo_matrix_transform_point";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:84:"array cairo_matrix_transform_point ( CairoMatrix $matrix , string $dx , string $dy )";}
a:4:{i:0;s:22:"cairo_matrix_translate";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:77:"void cairo_matrix_translate ( CairoMatrix $matrix , string $tx , string $ty )";}
a:4:{i:0;s:32:"cairo_pattern_add_color_stop_rgb";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:133:"void cairo_pattern_add_color_stop_rgb ( CairoGradientPattern $pattern , string $offset , string $red , string $green , string $blue )";}
a:4:{i:0;s:33:"cairo_pattern_add_color_stop_rgba";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:150:"void cairo_pattern_add_color_stop_rgba ( CairoGradientPattern $pattern , string $offset , string $red , string $green , string $blue , string $alpha )";}
a:4:{i:0;s:32:"cairo_pattern_create_for_surface";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:71:"CairoPattern cairo_pattern_create_for_surface ( CairoSurface $surface )";}
a:4:{i:0;s:27:"cairo_pattern_create_linear";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:90:"CairoPattern cairo_pattern_create_linear ( float $x0 , float $y0 , float $x1 , float $y1 )";}
a:4:{i:0;s:27:"cairo_pattern_create_radial";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:114:"CairoPattern cairo_pattern_create_radial ( float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1 )";}
a:4:{i:0;s:24:"cairo_pattern_create_rgb";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:81:"CairoPattern cairo_pattern_create_rgb ( float $red , float $green , float $blue )";}
a:4:{i:0;s:25:"cairo_pattern_create_rgba";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:97:"CairoPattern cairo_pattern_create_rgba ( float $red , float $green , float $blue , float $alpha )";}
a:4:{i:0;s:34:"cairo_pattern_get_color_stop_count";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:72:"int cairo_pattern_get_color_stop_count ( CairoGradientPattern $pattern )";}
a:4:{i:0;s:33:"cairo_pattern_get_color_stop_rgba";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:89:"array cairo_pattern_get_color_stop_rgba ( CairoGradientPattern $pattern , string $index )";}
a:4:{i:0;s:24:"cairo_pattern_get_extend";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:48:"int cairo_pattern_get_extend ( string $pattern )";}
a:4:{i:0;s:24:"cairo_pattern_get_filter";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:61:"int cairo_pattern_get_filter ( CairoSurfacePattern $pattern )";}
a:4:{i:0;s:31:"cairo_pattern_get_linear_points";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:70:"array cairo_pattern_get_linear_points ( CairoLinearGradient $pattern )";}
a:4:{i:0;s:24:"cairo_pattern_get_matrix";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:62:"CairoMatrix cairo_pattern_get_matrix ( CairoPattern $pattern )";}
a:4:{i:0;s:32:"cairo_pattern_get_radial_circles";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:71:"array cairo_pattern_get_radial_circles ( CairoRadialGradient $pattern )";}
a:4:{i:0;s:22:"cairo_pattern_get_rgba";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:59:"array cairo_pattern_get_rgba ( CairoSolidPattern $pattern )";}
a:4:{i:0;s:25:"cairo_pattern_get_surface";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:71:"CairoSurface cairo_pattern_get_surface ( CairoSurfacePattern $pattern )";}
a:4:{i:0;s:22:"cairo_pattern_get_type";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:52:"int cairo_pattern_get_type ( CairoPattern $pattern )";}
a:4:{i:0;s:24:"cairo_pattern_set_extend";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:66:"void cairo_pattern_set_extend ( string $pattern , string $extend )";}
a:4:{i:0;s:24:"cairo_pattern_set_filter";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:82:"void cairo_pattern_set_filter ( CairoSurfacePattern $pattern [, string $filter ] )";}
a:4:{i:0;s:24:"cairo_pattern_set_matrix";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:80:"void cairo_pattern_set_matrix ( CairoPattern $pattern [, CairoMatrix $matrix ] )";}
a:4:{i:0;s:20:"cairo_pattern_status";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:50:"int cairo_pattern_status ( CairoPattern $pattern )";}
a:4:{i:0;s:24:"cairo_pdf_surface_create";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:88:"CairoPdfSurface cairo_pdf_surface_create ( string $file , float $width , float $height )";}
a:4:{i:0;s:26:"cairo_pdf_surface_set_size";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:93:"void cairo_pdf_surface_set_size ( CairoPdfSurface $surface , string $width , string $height )";}
a:4:{i:0;s:19:"cairo_ps_get_levels";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:34:"array cairo_ps_get_levels ( void )";}
a:4:{i:0;s:24:"cairo_ps_level_to_string";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:49:"string cairo_ps_level_to_string ( string $level )";}
a:4:{i:0;s:23:"cairo_ps_surface_create";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:86:"CairoPsSurface cairo_ps_surface_create ( string $file , float $width , float $height )";}
a:4:{i:0;s:37:"cairo_ps_surface_dsc_begin_page_setup";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:70:"void cairo_ps_surface_dsc_begin_page_setup ( CairoPsSurface $surface )";}
a:4:{i:0;s:32:"cairo_ps_surface_dsc_begin_setup";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:65:"void cairo_ps_surface_dsc_begin_setup ( CairoPsSurface $surface )";}
a:4:{i:0;s:28:"cairo_ps_surface_dsc_comment";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:79:"void cairo_ps_surface_dsc_comment ( CairoPsSurface $surface , string $comment )";}
a:4:{i:0;s:24:"cairo_ps_surface_get_eps";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:57:"bool cairo_ps_surface_get_eps ( CairoPsSurface $surface )";}
a:4:{i:0;s:34:"cairo_ps_surface_restrict_to_level";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:83:"void cairo_ps_surface_restrict_to_level ( CairoPsSurface $surface , string $level )";}
a:4:{i:0;s:24:"cairo_ps_surface_set_eps";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:73:"void cairo_ps_surface_set_eps ( CairoPsSurface $surface , string $level )";}
a:4:{i:0;s:25:"cairo_ps_surface_set_size";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:91:"void cairo_ps_surface_set_size ( CairoPsSurface $surface , string $width , string $height )";}
a:4:{i:0;s:24:"cairo_scaled_font_create";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:141:"CairoScaledFont cairo_scaled_font_create ( CairoFontFace $fontface , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $fontoptions )";}
a:4:{i:0;s:25:"cairo_scaled_font_extents";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:63:"array cairo_scaled_font_extents ( CairoScaledFont $scaledfont )";}
a:4:{i:0;s:25:"cairo_scaled_font_get_ctm";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:69:"CairoMatrix cairo_scaled_font_get_ctm ( CairoScaledFont $scaledfont )";}
a:4:{i:0;s:31:"cairo_scaled_font_get_font_face";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:77:"CairoFontFace cairo_scaled_font_get_font_face ( CairoScaledFont $scaledfont )";}
a:4:{i:0;s:33:"cairo_scaled_font_get_font_matrix";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:82:"CairoFontOptions cairo_scaled_font_get_font_matrix ( CairoScaledFont $scaledfont )";}
a:4:{i:0;s:34:"cairo_scaled_font_get_font_options";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:83:"CairoFontOptions cairo_scaled_font_get_font_options ( CairoScaledFont $scaledfont )";}
a:4:{i:0;s:34:"cairo_scaled_font_get_scale_matrix";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:78:"CairoMatrix cairo_scaled_font_get_scale_matrix ( CairoScaledFont $scaledfont )";}
a:4:{i:0;s:26:"cairo_scaled_font_get_type";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:62:"int cairo_scaled_font_get_type ( CairoScaledFont $scaledfont )";}
a:4:{i:0;s:31:"cairo_scaled_font_glyph_extents";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:86:"array cairo_scaled_font_glyph_extents ( CairoScaledFont $scaledfont , string $glyphs )";}
a:4:{i:0;s:24:"cairo_scaled_font_status";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:60:"int cairo_scaled_font_status ( CairoScaledFont $scaledfont )";}
a:4:{i:0;s:30:"cairo_scaled_font_text_extents";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:83:"array cairo_scaled_font_text_extents ( CairoScaledFont $scaledfont , string $text )";}
a:4:{i:0;s:23:"cairo_surface_copy_page";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:54:"void cairo_surface_copy_page ( CairoSurface $surface )";}
a:4:{i:0;s:28:"cairo_surface_create_similar";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:118:"CairoSurface cairo_surface_create_similar ( CairoSurface $surface , string $content , string $width , string $height )";}
a:4:{i:0;s:20:"cairo_surface_finish";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:51:"void cairo_surface_finish ( CairoSurface $surface )";}
a:4:{i:0;s:19:"cairo_surface_flush";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:50:"void cairo_surface_flush ( CairoSurface $surface )";}
a:4:{i:0;s:25:"cairo_surface_get_content";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:55:"int cairo_surface_get_content ( CairoSurface $surface )";}
a:4:{i:0;s:31:"cairo_surface_get_device_offset";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:63:"array cairo_surface_get_device_offset ( CairoSurface $surface )";}
a:4:{i:0;s:30:"cairo_surface_get_font_options";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:73:"CairoFontOptions cairo_surface_get_font_options ( CairoSurface $surface )";}
a:4:{i:0;s:22:"cairo_surface_get_type";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:52:"int cairo_surface_get_type ( CairoSurface $surface )";}
a:4:{i:0;s:34:"cairo_surface_mark_dirty_rectangle";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:122:"void cairo_surface_mark_dirty_rectangle ( CairoSurface $surface , string $x , string $y , string $width , string $height )";}
a:4:{i:0;s:24:"cairo_surface_mark_dirty";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:55:"void cairo_surface_mark_dirty ( CairoSurface $surface )";}
a:4:{i:0;s:31:"cairo_surface_set_device_offset";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:86:"void cairo_surface_set_device_offset ( CairoSurface $surface , string $x , string $y )";}
a:4:{i:0;s:37:"cairo_surface_set_fallback_resolution";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:92:"void cairo_surface_set_fallback_resolution ( CairoSurface $surface , string $x , string $y )";}
a:4:{i:0;s:23:"cairo_surface_show_page";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:54:"void cairo_surface_show_page ( CairoSurface $surface )";}
a:4:{i:0;s:20:"cairo_surface_status";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:50:"int cairo_surface_status ( CairoSurface $surface )";}
a:4:{i:0;s:26:"cairo_surface_write_to_png";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:81:"void cairo_surface_write_to_png ( CairoSurface $surface , string $x , string $y )";}
a:4:{i:0;s:24:"cairo_svg_surface_create";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:88:"CairoSvgSurface cairo_svg_surface_create ( string $file , float $width , float $height )";}
a:4:{i:0;s:37:"cairo_svg_surface_restrict_to_version";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:89:"void cairo_svg_surface_restrict_to_version ( CairoSvgSurface $surface , string $version )";}
a:4:{i:0;s:27:"cairo_svg_version_to_string";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:11:"Description";i:3;s:51:"string cairo_svg_version_to_string ( int $version )";}
a:4:{i:0;s:25:"CairoContext::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:26:"Creates a new CairoContext";i:3;s:51:"CairoContext::__construct ( CairoSurface $surface )";}
a:4:{i:0;s:25:"CairoSurface::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:23:"The __construct purpose";i:3;s:46:"void cairo_copy_page ( CairoContext $context )";}
a:4:{i:0;s:27:"CairoSurface::createSimilar";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:25:"The createSimilar purpose";i:3;s:111:"public void CairoSurface::createSimilar ( CairoSurface $other , int $content , string $width , string $height )";}
a:4:{i:0;s:20:"CairoSurface::finish";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:18:"The finish purpose";i:3;s:41:"public void CairoSurface::finish ( void )";}
a:4:{i:0;s:19:"CairoSurface::flush";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:17:"The flush purpose";i:3;s:40:"public void CairoSurface::flush ( void )";}
a:4:{i:0;s:24:"CairoSurface::getContent";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:22:"The getContent purpose";i:3;s:44:"public int CairoSurface::getContent ( void )";}
a:4:{i:0;s:29:"CairoSurface::getDeviceOffset";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:27:"The getDeviceOffset purpose";i:3;s:51:"public array CairoSurface::getDeviceOffset ( void )";}
a:4:{i:0;s:21:"CairoSurface::getType";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:19:"The getType purpose";i:3;s:41:"public int CairoSurface::getType ( void )";}
a:4:{i:0;s:23:"CairoSurface::markDirty";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:21:"The markDirty purpose";i:3;s:44:"public void CairoSurface::markDirty ( void )";}
a:4:{i:0;s:32:"CairoSurface::markDirtyRectangle";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:30:"The markDirtyRectangle purpose";i:3;s:103:"public void CairoSurface::markDirtyRectangle ( string $x , string $y , string $width , string $height )";}
a:4:{i:0;s:29:"CairoSurface::setDeviceOffset";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:27:"The setDeviceOffset purpose";i:3;s:67:"public void CairoSurface::setDeviceOffset ( string $x , string $y )";}
a:4:{i:0;s:35:"CairoSurface::setFallbackResolution";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:33:"The setFallbackResolution purpose";i:3;s:73:"public void CairoSurface::setFallbackResolution ( string $x , string $y )";}
a:4:{i:0;s:24:"CairoSurface::writeToPng";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:22:"The writeToPng purpose";i:3;s:53:"public void CairoSurface::writeToPng ( string $file )";}
a:4:{i:0;s:28:"CairoSvgSurface::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:23:"The __construct purpose";i:3;s:76:"CairoSvgSurface::__construct ( string $file , float $width , float $height )";}
a:4:{i:0;s:34:"CairoSvgSurface::restrictToVersion";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:29:"The restrictToVersion purpose";i:3;s:66:"public void CairoSvgSurface::restrictToVersion ( string $version )";}
a:4:{i:0;s:32:"CairoSvgSurface::versionToString";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:27:"The versionToString purpose";i:3;s:70:"public static string CairoSvgSurface::versionToString ( int $version )";}
a:4:{i:0;s:30:"CairoImageSurface::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:31:"Creates a new CairoImageSurface";i:3;s:73:"CairoImageSurface::__construct ( int $format , int $width , int $height )";}
a:4:{i:0;s:32:"CairoImageSurface::createForData";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:25:"The createForData purpose";i:3;s:131:"public static void CairoImageSurface::createForData ( string $data , int $format , int $width , int $height [, int $stride = -1 ] )";}
a:4:{i:0;s:32:"CairoImageSurface::createFromPng";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:53:"Creates a new CairoImageSurface form a png image file";i:3;s:80:"public staticCairoImageSurface CairoImageSurface::createFromPng ( string $file )";}
a:4:{i:0;s:26:"CairoImageSurface::getData";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:29:"Gets the image data as string";i:3;s:49:"public string CairoImageSurface::getData ( void )";}
a:4:{i:0;s:28:"CairoImageSurface::getFormat";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:20:"Get the image format";i:3;s:48:"public int CairoImageSurface::getFormat ( void )";}
a:4:{i:0;s:28:"CairoImageSurface::getHeight";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:45:"Retrieves the height of the CairoImageSurface";i:3;s:48:"public int CairoImageSurface::getHeight ( void )";}
a:4:{i:0;s:28:"CairoImageSurface::getStride";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:21:"The getStride purpose";i:3;s:48:"public int CairoImageSurface::getStride ( void )";}
a:4:{i:0;s:27:"CairoImageSurface::getWidth";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:44:"Retrieves the width of the CairoImageSurface";i:3;s:47:"public int CairoImageSurface::getWidth ( void )";}
a:4:{i:0;s:28:"CairoPdfSurface::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:23:"The __construct purpose";i:3;s:76:"CairoPdfSurface::__construct ( string $file , float $width , float $height )";}
a:4:{i:0;s:24:"CairoPdfSurface::setSize";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:19:"The setSize purpose";i:3;s:71:"public void CairoPdfSurface::setSize ( string $width , string $height )";}
a:4:{i:0;s:27:"CairoPsSurface::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:23:"The __construct purpose";i:3;s:75:"CairoPsSurface::__construct ( string $file , float $width , float $height )";}
a:4:{i:0;s:33:"CairoPsSurface::dscBeginPageSetup";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:29:"The dscBeginPageSetup purpose";i:3;s:54:"public void CairoPsSurface::dscBeginPageSetup ( void )";}
a:4:{i:0;s:29:"CairoPsSurface::dscBeginSetup";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:25:"The dscBeginSetup purpose";i:3;s:50:"public void CairoPsSurface::dscBeginSetup ( void )";}
a:4:{i:0;s:26:"CairoPsSurface::dscComment";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:22:"The dscComment purpose";i:3;s:58:"public void CairoPsSurface::dscComment ( string $comment )";}
a:4:{i:0;s:22:"CairoPsSurface::getEps";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:18:"The getEps purpose";i:3;s:43:"public bool CairoPsSurface::getEps ( void )";}
a:4:{i:0;s:25:"CairoPsSurface::getLevels";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:21:"The getLevels purpose";i:3;s:54:"public static array CairoPsSurface::getLevels ( void )";}
a:4:{i:0;s:29:"CairoPsSurface::levelToString";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:25:"The levelToString purpose";i:3;s:68:"public static string CairoPsSurface::levelToString ( string $level )";}
a:4:{i:0;s:31:"CairoPsSurface::restrictToLevel";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:27:"The restrictToLevel purpose";i:3;s:61:"public void CairoPsSurface::restrictToLevel ( string $level )";}
a:4:{i:0;s:22:"CairoPsSurface::setEps";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:18:"The setEps purpose";i:3;s:52:"public void CairoPsSurface::setEps ( string $level )";}
a:4:{i:0;s:23:"CairoPsSurface::setSize";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:19:"The setSize purpose";i:3;s:70:"public void CairoPsSurface::setSize ( string $width , string $height )";}
a:4:{i:0;s:26:"CairoFontFace::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:34:"Creates a new CairoFontFace object";i:3;s:35:"CairoFontFace::__construct ( void )";}
a:4:{i:0;s:22:"CairoFontFace::getType";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:28:"Retrieves the font face type";i:3;s:42:"public int CairoFontFace::getType ( void )";}
a:4:{i:0;s:29:"CairoFontOptions::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:23:"The __construct purpose";i:3;s:38:"CairoFontOptions::__construct ( void )";}
a:4:{i:0;s:23:"CairoFontOptions::equal";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:17:"The equal purpose";i:3;s:53:"public bool CairoFontOptions::equal ( string $other )";}
a:4:{i:0;s:32:"CairoFontOptions::getHintMetrics";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:26:"The getHintMetrics purpose";i:3;s:52:"public int CairoFontOptions::getHintMetrics ( void )";}
a:4:{i:0;s:30:"CairoFontOptions::getHintStyle";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:24:"The getHintStyle purpose";i:3;s:50:"public int CairoFontOptions::getHintStyle ( void )";}
a:4:{i:0;s:34:"CairoFontOptions::getSubpixelOrder";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:28:"The getSubpixelOrder purpose";i:3;s:54:"public int CairoFontOptions::getSubpixelOrder ( void )";}
a:4:{i:0;s:22:"CairoFontOptions::hash";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:16:"The hash purpose";i:3;s:42:"public int CairoFontOptions::hash ( void )";}
a:4:{i:0;s:23:"CairoFontOptions::merge";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:17:"The merge purpose";i:3;s:53:"public void CairoFontOptions::merge ( string $other )";}
a:4:{i:0;s:32:"CairoFontOptions::setHintMetrics";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:26:"The setHintMetrics purpose";i:3;s:69:"public void CairoFontOptions::setHintMetrics ( string $hint_metrics )";}
a:4:{i:0;s:30:"CairoFontOptions::setHintStyle";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:24:"The setHintStyle purpose";i:3;s:65:"public void CairoFontOptions::setHintStyle ( string $hint_style )";}
a:4:{i:0;s:34:"CairoFontOptions::setSubpixelOrder";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:28:"The setSubpixelOrder purpose";i:3;s:73:"public void CairoFontOptions::setSubpixelOrder ( string $subpixel_order )";}
a:4:{i:0;s:28:"CairoScaledFont::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:23:"The __construct purpose";i:3;s:126:"CairoScaledFont::__construct ( CairoFontFace $font_face , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $options )";}
a:4:{i:0;s:24:"CairoScaledFont::extents";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:19:"The extents purpose";i:3;s:46:"public array CairoScaledFont::extents ( void )";}
a:4:{i:0;s:23:"CairoScaledFont::getCtm";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:18:"The getCtm purpose";i:3;s:51:"public CairoMatrix CairoScaledFont::getCtm ( void )";}
a:4:{i:0;s:31:"CairoScaledFont::getScaleMatrix";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:26:"The getScaleMatrix purpose";i:3;s:52:"public void CairoScaledFont::getScaleMatrix ( void )";}
a:4:{i:0;s:24:"CairoScaledFont::getType";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:19:"The getType purpose";i:3;s:44:"public int CairoScaledFont::getType ( void )";}
a:4:{i:0;s:29:"CairoScaledFont::glyphExtents";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:24:"The glyphExtents purpose";i:3;s:61:"public array CairoScaledFont::glyphExtents ( string $glyphs )";}
a:4:{i:0;s:25:"CairoPattern::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:23:"The __construct purpose";i:3;s:34:"CairoPattern::__construct ( void )";}
a:4:{i:0;s:21:"CairoPattern::getType";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:19:"The getType purpose";i:3;s:41:"public int CairoPattern::getType ( void )";}
a:4:{i:0;s:37:"CairoGradientPattern::addColorStopRgb";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:27:"The addColorStopRgb purpose";i:3;s:113:"public void CairoGradientPattern::addColorStopRgb ( string $offset , string $red , string $green , string $blue )";}
a:4:{i:0;s:38:"CairoGradientPattern::addColorStopRgba";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:28:"The addColorStopRgba purpose";i:3;s:130:"public void CairoGradientPattern::addColorStopRgba ( string $offset , string $red , string $green , string $blue , string $alpha )";}
a:4:{i:0;s:39:"CairoGradientPattern::getColorStopCount";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:29:"The getColorStopCount purpose";i:3;s:59:"public int CairoGradientPattern::getColorStopCount ( void )";}
a:4:{i:0;s:38:"CairoGradientPattern::getColorStopRgba";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:28:"The getColorStopRgba purpose";i:3;s:69:"public array CairoGradientPattern::getColorStopRgba ( string $index )";}
a:4:{i:0;s:31:"CairoGradientPattern::getExtend";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:21:"The getExtend purpose";i:3;s:51:"public int CairoGradientPattern::getExtend ( void )";}
a:4:{i:0;s:31:"CairoGradientPattern::setExtend";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:21:"The setExtend purpose";i:3;s:59:"public void CairoGradientPattern::setExtend ( int $extend )";}
a:4:{i:0;s:30:"CairoSolidPattern::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:23:"The __construct purpose";i:3;s:96:"CairoSolidPattern::__construct ( float $red , float $green , float $blue [, float $alpha = 0 ] )";}
a:4:{i:0;s:26:"CairoSolidPattern::getRgba";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:19:"The getRgba purpose";i:3;s:48:"public array CairoSolidPattern::getRgba ( void )";}
a:4:{i:0;s:32:"CairoSurfacePattern::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:23:"The __construct purpose";i:3;s:58:"CairoSurfacePattern::__construct ( CairoSurface $surface )";}
a:4:{i:0;s:30:"CairoSurfacePattern::getExtend";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:21:"The getExtend purpose";i:3;s:50:"public int CairoSurfacePattern::getExtend ( void )";}
a:4:{i:0;s:30:"CairoSurfacePattern::getFilter";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:21:"The getFilter purpose";i:3;s:50:"public int CairoSurfacePattern::getFilter ( void )";}
a:4:{i:0;s:31:"CairoSurfacePattern::getSurface";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:22:"The getSurface purpose";i:3;s:52:"public void CairoSurfacePattern::getSurface ( void )";}
a:4:{i:0;s:30:"CairoSurfacePattern::setExtend";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:21:"The setExtend purpose";i:3;s:58:"public void CairoSurfacePattern::setExtend ( int $extend )";}
a:4:{i:0;s:30:"CairoSurfacePattern::setFilter";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:21:"The setFilter purpose";i:3;s:61:"public void CairoSurfacePattern::setFilter ( string $filter )";}
a:4:{i:0;s:32:"CairoLinearGradient::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:23:"The __construct purpose";i:3;s:82:"CairoLinearGradient::__construct ( float $x0 , float $y0 , float $x1 , float $y1 )";}
a:4:{i:0;s:30:"CairoLinearGradient::getPoints";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:21:"The getPoints purpose";i:3;s:52:"public array CairoLinearGradient::getPoints ( void )";}
a:4:{i:0;s:32:"CairoRadialGradient::__construct";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:23:"The __construct purpose";i:3;s:106:"CairoRadialGradient::__construct ( float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1 )";}
a:4:{i:0;s:31:"CairoRadialGradient::getCircles";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:22:"The getCircles purpose";i:3;s:53:"public array CairoRadialGradient::getCircles ( void )";}
a:4:{i:0;s:27:"CairoFormat::strideForWidth";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:36:"Provides an appropiate stride to use";i:3;s:74:"public static int CairoFormat::strideForWidth ( int $format , int $width )";}
a:4:{i:0;s:19:"CairoMatrix::invert";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:18:"The invert purpose";i:3;s:40:"public void CairoMatrix::invert ( void )";}
a:4:{i:0;s:21:"CairoMatrix::multiply";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:20:"The multiply purpose";i:3;s:95:"public static CairoMatrix CairoMatrix::multiply ( CairoMatrix $matrix1 , CairoMatrix $matrix2 )";}
a:4:{i:0;s:30:"CairoMatrix::transformDistance";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:29:"The transformDistance purpose";i:3;s:71:"public array CairoMatrix::transformDistance ( string $dx , string $dy )";}
a:4:{i:0;s:27:"CairoMatrix::transformPoint";i:1;s:19:"PECL cairo >= 0.1.0";i:2;s:26:"The transformPoint purpose";i:3;s:68:"public array CairoMatrix::transformPoint ( string $dx , string $dy )";}
a:4:{i:0;s:18:"cyrus_authenticate";i:1;s:30:"PHP 4 >= 4.1.0, PECL cyrus 1.0";i:2;s:40:"Authenticate against a Cyrus IMAP server";i:3;s:65:"bool cyrus_unbind ( resource $connection , string $trigger_name )";}
a:4:{i:0;s:11:"imap_alerts";i:1;s:12:"PHP 4, PHP 5";i:2;s:50:"Returns all IMAP alert messages that have occurred";i:3;s:139:"bool imap_append ( resource $imap_stream , string $mailbox , string $message [, string $options = NULL [, string $internal_date = NULL ]] )";}
a:4:{i:0;s:11:"imap_base64";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Decode BASE64 encoded text";i:3;s:82:"string imap_body ( resource $imap_stream , int $msg_number [, int $options = 0 ] )";}
a:4:{i:0;s:15:"imap_bodystruct";i:1;s:12:"PHP 4, PHP 5";i:2;s:68:"Read the structure of a specified body section of a specific message";i:3;s:43:"object imap_check ( resource $imap_stream )";}
a:4:{i:0;s:19:"imap_clearflag_full";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Clears flags on messages";i:3;s:106:"bool imap_clearflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = 0 ] )";}
a:4:{i:0;s:10:"imap_close";i:1;s:12:"PHP 4, PHP 5";i:2;s:20:"Close an IMAP stream";i:3;s:67:"bool imap_createmailbox ( resource $imap_stream , string $mailbox )";}
a:4:{i:0;s:11:"imap_delete";i:1;s:12:"PHP 4, PHP 5";i:2;s:48:"Mark a message for deletion from current mailbox";i:3;s:82:"bool imap_delete ( resource $imap_stream , int $msg_number [, int $options = 0 ] )";}
a:4:{i:0;s:18:"imap_deletemailbox";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Delete a mailbox";i:3;s:92:"array imap_fetch_overview ( resource $imap_stream , string $sequence [, int $options = 0 ] )";}
a:4:{i:0;s:14:"imap_fetchbody";i:1;s:12:"PHP 4, PHP 5";i:2;s:53:"Fetch a particular section of the body of the message";i:3;s:105:"string imap_fetchbody ( resource $imap_stream , int $msg_number , string $section [, int $options = 0 ] )";}
a:4:{i:0;s:16:"imap_fetchheader";i:1;s:12:"PHP 4, PHP 5";i:2;s:28:"Returns header for a message";i:3;s:54:"string imap_gc ( resource $imap_stream , int $caches )";}
a:4:{i:0;s:18:"imap_get_quotaroot";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:36:"Retrieve the quota settings per user";i:3;s:71:"array imap_get_quotaroot ( resource $imap_stream , string $quota_root )";}
a:4:{i:0;s:11:"imap_getacl";i:1;s:5:"PHP 5";i:2;s:32:"Gets the ACL for a given mailbox";i:3;s:61:"array imap_getacl ( resource $imap_stream , string $mailbox )";}
a:4:{i:0;s:18:"imap_getsubscribed";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"List all the subscribed mailboxes";i:3;s:82:"array imap_getsubscribed ( resource $imap_stream , string $ref , string $pattern )";}
a:4:{i:0;s:15:"imap_headerinfo";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Read the header of the message";i:3;s:73:"array imap_list ( resource $imap_stream , string $ref , string $pattern )";}
a:4:{i:0;s:13:"imap_listscan";i:1;s:12:"PHP 4, PHP 5";i:2;s:57:"Returns the list of mailboxes that matches the given text";i:3;s:95:"array imap_listscan ( resource $imap_stream , string $ref , string $pattern , string $content )";}
a:4:{i:0;s:9:"imap_lsub";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"List all the subscribed mailboxes";i:3;s:73:"array imap_lsub ( resource $imap_stream , string $ref , string $pattern )";}
a:4:{i:0;s:17:"imap_mail_compose";i:1;s:12:"PHP 4, PHP 5";i:2;s:63:"Create a MIME message based on given envelope and body sections";i:3;s:58:"string imap_mail_compose ( array $envelope , array $body )";}
a:4:{i:0;s:14:"imap_mail_copy";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Copy specified messages to a mailbox";i:3;s:52:"object imap_mailboxmsginfo ( resource $imap_stream )";}
a:4:{i:0;s:23:"imap_mime_header_decode";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Decode MIME header elements";i:3;s:46:"array imap_mime_header_decode ( string $text )";}
a:4:{i:0;s:10:"imap_msgno";i:1;s:12:"PHP 4, PHP 5";i:2;s:50:"Gets the message sequence number for the given UID";i:3;s:148:"resource imap_open ( string $mailbox , string $username , string $password [, int $options = NIL [, int $n_retries = 0 [, array $params = NULL ]]] )";}
a:4:{i:0;s:9:"imap_ping";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Check if the IMAP stream is still active";i:3;s:40:"bool imap_ping ( resource $imap_stream )";}
a:4:{i:0;s:18:"imap_renamemailbox";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Rename an old mailbox to new mailbox";i:3;s:105:"bool imap_reopen ( resource $imap_stream , string $mailbox [, int $options = 0 [, int $n_retries = 0 ]] )";}
a:4:{i:0;s:25:"imap_rfc822_parse_adrlist";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Parses an address string";i:3;s:74:"array imap_rfc822_parse_adrlist ( string $address , string $default_host )";}
a:4:{i:0;s:25:"imap_rfc822_parse_headers";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Parse mail headers from a string";i:3;s:86:"string imap_rfc822_write_address ( string $mailbox , string $host , string $personal )";}
a:4:{i:0;s:13:"imap_savebody";i:1;s:14:"PHP 5 >= 5.1.3";i:2;s:38:"Save a specific body section to a file";i:3;s:127:"bool imap_savebody ( resource $imap_stream , mixed $file , int $msg_number [, string $part_number = "" [, int $options = 0 ]] )";}
a:4:{i:0;s:11:"imap_search";i:1;s:12:"PHP 4, PHP 5";i:2;s:77:"This function returns an array of messages matching the given search criteria";i:3;s:116:"array imap_search ( resource $imap_stream , string $criteria [, int $options = SE_FREE [, string $charset = NIL ]] )";}
a:4:{i:0;s:14:"imap_set_quota";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:32:"Sets a quota for a given mailbox";i:3;s:85:"bool imap_set_quota ( resource $imap_stream , string $quota_root , int $quota_limit )";}
a:4:{i:0;s:11:"imap_setacl";i:1;s:21:"PHP 4 >= 4.0.7, PHP 5";i:2;s:33:"Sets the ACL for a giving mailbox";i:3;s:106:"bool imap_setflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = NIL ] )";}
a:4:{i:0;s:9:"imap_sort";i:1;s:12:"PHP 4, PHP 5";i:2;s:22:"Gets and sort messages";i:3;s:77:"object imap_status ( resource $imap_stream , string $mailbox , int $options )";}
a:4:{i:0;s:14:"imap_subscribe";i:1;s:12:"PHP 4, PHP 5";i:2;s:22:"Subscribe to a mailbox";i:3;s:71:"array imap_thread ( resource $imap_stream [, int $options = SE_FREE ] )";}
a:4:{i:0;s:12:"imap_timeout";i:1;s:21:"PHP 4 >= 4.3.3, PHP 5";i:2;s:25:"Set or fetch imap timeout";i:3;s:63:"mixed imap_timeout ( int $timeout_type [, int $timeout = -1 ] )";}
a:4:{i:0;s:8:"imap_uid";i:1;s:12:"PHP 4, PHP 5";i:2;s:67:"This function returns the UID for the given message sequence number";i:3;s:46:"string imap_utf8 ( string $mime_encoded_text )";}
a:4:{i:0;s:10:"ezmlm_hash";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:40:"Calculate the hash value needed by EZMLM";i:3;s:31:"int ezmlm_hash ( string $addr )";}
a:4:{i:0;s:4:"mail";i:1;s:12:"PHP 4, PHP 5";i:2;s:9:"Send mail";i:3;s:126:"bool mail ( string $to , string $subject , string $message [, string $additional_headers [, string $additional_parameters ]] )";}
a:4:{i:0;s:38:"mailparse_determine_best_xfer_encoding";i:1;s:23:"PECL mailparse >= 0.9.0";i:2;s:29:"Gets the best way of encoding";i:3;s:62:"string mailparse_determine_best_xfer_encoding ( resource $fp )";}
a:4:{i:0;s:20:"mailparse_msg_create";i:1;s:23:"PECL mailparse >= 0.9.0";i:2;s:27:"Create a mime mail resource";i:3;s:60:"array mailparse_rfc822_parse_addresses ( string $addresses )";}
a:4:{i:0;s:22:"mailparse_uudecode_all";i:1;s:23:"PECL mailparse >= 0.9.0";i:2;s:65:" Scans the data from fp and extract each embedded uuencoded file ";i:3;s:45:"array mailparse_uudecode_all ( resource $fp )";}
a:4:{i:0;s:28:"vpopmail_add_alias_domain_ex";i:1;s:36:"PHP 4 >= 4.0.5, PECL vpopmail >= 0.2";i:2;s:39:"Add alias to an existing virtual domain";i:3;s:78:"bool vpopmail_set_user_quota ( string $user , string $domain , string $quota )";}
a:4:{i:0;s:5:"bcadd";i:1;s:12:"PHP 4, PHP 5";i:2;s:35:"Add two arbitrary precision numbers";i:3;s:77:"string bcadd ( string $left_operand , string $right_operand [, int $scale ] )";}
a:4:{i:0;s:6:"bccomp";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Compare two arbitrary precision numbers";i:3;s:75:"int bccomp ( string $left_operand , string $right_operand [, int $scale ] )";}
a:4:{i:0;s:5:"bcdiv";i:1;s:12:"PHP 4, PHP 5";i:2;s:38:"Divide two arbitrary precision numbers";i:3;s:77:"string bcdiv ( string $left_operand , string $right_operand [, int $scale ] )";}
a:4:{i:0;s:5:"bcmod";i:1;s:12:"PHP 4, PHP 5";i:2;s:44:"Get modulus of an arbitrary precision number";i:3;s:55:"string bcmod ( string $left_operand , string $modulus )";}
a:4:{i:0;s:5:"bcmul";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Multiply two arbitrary precision number";i:3;s:77:"string bcmul ( string $left_operand , string $right_operand [, int $scale ] )";}
a:4:{i:0;s:5:"bcpow";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Raise an arbitrary precision number to another";i:3;s:77:"string bcpow ( string $left_operand , string $right_operand [, int $scale ] )";}
a:4:{i:0;s:7:"bcscale";i:1;s:12:"PHP 4, PHP 5";i:2;s:53:"Set default scale parameter for all bc math functions";i:3;s:27:"bool bcscale ( int $scale )";}
a:4:{i:0;s:6:"bcsqrt";i:1;s:12:"PHP 4, PHP 5";i:2;s:52:"Get the square root of an arbitrary precision number";i:3;s:49:"string bcsqrt ( string $operand [, int $scale ] )";}
a:4:{i:0;s:5:"bcsub";i:1;s:12:"PHP 4, PHP 5";i:2;s:52:"Subtract one arbitrary precision number from another";i:3;s:77:"string bcsub ( string $left_operand , string $right_operand [, int $scale ] )";}
a:4:{i:0;s:7:"gmp_abs";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:14:"Absolute value";i:3;s:32:"resource gmp_abs ( resource $a )";}
a:4:{i:0;s:7:"gmp_add";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:11:"Add numbers";i:3;s:46:"resource gmp_add ( resource $a , resource $b )";}
a:4:{i:0;s:7:"gmp_and";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:11:"Bitwise AND";i:3;s:46:"resource gmp_and ( resource $a , resource $b )";}
a:4:{i:0;s:10:"gmp_clrbit";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:9:"Clear bit";i:3;s:44:"void gmp_clrbit ( resource $a , int $index )";}
a:4:{i:0;s:7:"gmp_cmp";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:15:"Compare numbers";i:3;s:41:"int gmp_cmp ( resource $a , resource $b )";}
a:4:{i:0;s:9:"gmp_div_q";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:14:"Divide numbers";i:3;s:81:"resource gmp_div_q ( resource $a , resource $b [, int $round = GMP_ROUND_ZERO ] )";}
a:4:{i:0;s:10:"gmp_div_qr";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:45:"Divide numbers and get quotient and remainder";i:3;s:79:"array gmp_div_qr ( resource $n , resource $d [, int $round = GMP_ROUND_ZERO ] )";}
a:4:{i:0;s:9:"gmp_div_r";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:36:"Remainder of the division of numbers";i:3;s:81:"resource gmp_div_r ( resource $n , resource $d [, int $round = GMP_ROUND_ZERO ] )";}
a:4:{i:0;s:12:"gmp_divexact";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:25:"Exact division of numbers";i:3;s:51:"resource gmp_divexact ( resource $n , resource $d )";}
a:4:{i:0;s:8:"gmp_fact";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:9:"Factorial";i:3;s:30:"resource gmp_fact ( mixed $a )";}
a:4:{i:0;s:7:"gmp_gcd";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:13:"Calculate GCD";i:3;s:46:"resource gmp_gcd ( resource $a , resource $b )";}
a:4:{i:0;s:10:"gmp_gcdext";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:29:"Calculate GCD and multipliers";i:3;s:46:"array gmp_gcdext ( resource $a , resource $b )";}
a:4:{i:0;s:11:"gmp_hamdist";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:16:"Hamming distance";i:3;s:45:"int gmp_hamdist ( resource $a , resource $b )";}
a:4:{i:0;s:8:"gmp_init";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:17:"Create GMP number";i:3;s:54:"resource gmp_init ( mixed $number [, int $base = 0 ] )";}
a:4:{i:0;s:10:"gmp_intval";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:29:"Convert GMP number to integer";i:3;s:38:"int gmp_intval ( resource $gmpnumber )";}
a:4:{i:0;s:10:"gmp_invert";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:17:"Inverse by modulo";i:3;s:49:"resource gmp_invert ( resource $a , resource $b )";}
a:4:{i:0;s:10:"gmp_jacobi";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:13:"Jacobi symbol";i:3;s:44:"int gmp_jacobi ( resource $a , resource $p )";}
a:4:{i:0;s:12:"gmp_legendre";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:15:"Legendre symbol";i:3;s:46:"int gmp_legendre ( resource $a , resource $p )";}
a:4:{i:0;s:7:"gmp_mod";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:16:"Modulo operation";i:3;s:46:"resource gmp_mod ( resource $n , resource $d )";}
a:4:{i:0;s:7:"gmp_mul";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:16:"Multiply numbers";i:3;s:46:"resource gmp_mul ( resource $a , resource $b )";}
a:4:{i:0;s:7:"gmp_neg";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:13:"Negate number";i:3;s:32:"resource gmp_neg ( resource $a )";}
a:4:{i:0;s:13:"gmp_nextprime";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:22:"Find next prime number";i:3;s:33:"resource gmp_nextprime ( int $a )";}
a:4:{i:0;s:6:"gmp_or";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:10:"Bitwise OR";i:3;s:45:"resource gmp_or ( resource $a , resource $b )";}
a:4:{i:0;s:18:"gmp_perfect_square";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:20:"Perfect square check";i:3;s:39:"bool gmp_perfect_square ( resource $a )";}
a:4:{i:0;s:12:"gmp_popcount";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:16:"Population count";i:3;s:32:"int gmp_popcount ( resource $a )";}
a:4:{i:0;s:7:"gmp_pow";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:23:"Raise number into power";i:3;s:46:"resource gmp_pow ( resource $base , int $exp )";}
a:4:{i:0;s:8:"gmp_powm";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:35:"Raise number into power with modulo";i:3;s:68:"resource gmp_powm ( resource $base , resource $exp , resource $mod )";}
a:4:{i:0;s:10:"gmp_random";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:13:"Random number";i:3;s:44:"resource gmp_random ([ int $limiter = 20 ] )";}
a:4:{i:0;s:9:"gmp_scan0";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:10:"Scan for 0";i:3;s:42:"int gmp_scan0 ( resource $a , int $start )";}
a:4:{i:0;s:9:"gmp_scan1";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:10:"Scan for 1";i:3;s:42:"int gmp_scan1 ( resource $a , int $start )";}
a:4:{i:0;s:10:"gmp_setbit";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:7:"Set bit";i:3;s:72:"void gmp_setbit ( resource $a , int $index [, bool $set_clear = true ] )";}
a:4:{i:0;s:8:"gmp_sign";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:14:"Sign of number";i:3;s:28:"int gmp_sign ( resource $a )";}
a:4:{i:0;s:8:"gmp_sqrt";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:21:"Calculate square root";i:3;s:33:"resource gmp_sqrt ( resource $a )";}
a:4:{i:0;s:11:"gmp_sqrtrem";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:26:"Square root with remainder";i:3;s:33:"array gmp_sqrtrem ( resource $a )";}
a:4:{i:0;s:10:"gmp_strval";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:28:"Convert GMP number to string";i:3;s:56:"string gmp_strval ( resource $gmpnumber [, int $base ] )";}
a:4:{i:0;s:7:"gmp_sub";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:16:"Subtract numbers";i:3;s:46:"resource gmp_sub ( resource $a , resource $b )";}
a:4:{i:0;s:11:"gmp_testbit";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:21:"Tests if a bit is set";i:3;s:45:"bool gmp_testbit ( resource $a , int $index )";}
a:4:{i:0;s:7:"gmp_xor";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:11:"Bitwise XOR";i:3;s:46:"resource gmp_xor ( resource $a , resource $b )";}
a:4:{i:0;s:3:"abs";i:1;s:12:"PHP 4, PHP 5";i:2;s:14:"Absolute value";i:3;s:28:"number abs ( mixed $number )";}
a:4:{i:0;s:4:"acos";i:1;s:12:"PHP 4, PHP 5";i:2;s:10:"Arc cosine";i:3;s:68:"string base_convert ( string $number , int $frombase , int $tobase )";}
a:4:{i:0;s:6:"bindec";i:1;s:12:"PHP 4, PHP 5";i:2;s:17:"Binary to decimal";i:3;s:39:"number bindec ( string $binary_string )";}
a:4:{i:0;s:4:"ceil";i:1;s:12:"PHP 4, PHP 5";i:2;s:18:"Round fractions up";i:3;s:27:"float ceil ( float $value )";}
a:4:{i:0;s:3:"cos";i:1;s:12:"PHP 4, PHP 5";i:2;s:6:"Cosine";i:3;s:24:"float cos ( float $arg )";}
a:4:{i:0;s:4:"cosh";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:17:"Hyperbolic cosine";i:3;s:25:"float cosh ( float $arg )";}
a:4:{i:0;s:6:"decbin";i:1;s:12:"PHP 4, PHP 5";i:2;s:17:"Decimal to binary";i:3;s:29:"string decbin ( int $number )";}
a:4:{i:0;s:6:"dechex";i:1;s:12:"PHP 4, PHP 5";i:2;s:22:"Decimal to hexadecimal";i:3;s:29:"string dechex ( int $number )";}
a:4:{i:0;s:6:"decoct";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Decimal to octal";i:3;s:29:"string decoct ( int $number )";}
a:4:{i:0;s:7:"deg2rad";i:1;s:12:"PHP 4, PHP 5";i:2;s:57:" Converts the number in degrees to the radian equivalent ";i:3;s:31:"float deg2rad ( float $number )";}
a:4:{i:0;s:5:"floor";i:1;s:12:"PHP 4, PHP 5";i:2;s:20:"Round fractions down";i:3;s:28:"float floor ( float $value )";}
a:4:{i:0;s:10:"getrandmax";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Show largest possible random value";i:3;s:36:"number hexdec ( string $hex_string )";}
a:4:{i:0;s:9:"is_finite";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:46:"Finds whether a value is a legal finite number";i:3;s:26:"bool is_nan ( float $val )";}
a:4:{i:0;s:9:"lcg_value";i:1;s:12:"PHP 4, PHP 5";i:2;s:38:"Combined linear congruential generator";i:3;s:24:"float lcg_value ( void )";}
a:4:{i:0;s:3:"log";i:1;s:12:"PHP 4, PHP 5";i:2;s:17:"Natural logarithm";i:3;s:65:"mixed max ( mixed $value1 , mixed $value2 [, mixed $value3... ] )";}
a:4:{i:0;s:3:"min";i:1;s:12:"PHP 4, PHP 5";i:2;s:17:"Find lowest value";i:3;s:65:"mixed min ( mixed $value1 , mixed $value2 [, mixed $value3... ] )";}
a:4:{i:0;s:13:"mt_getrandmax";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Show largest possible random value";i:3;s:26:"int mt_getrandmax ( void )";}
a:4:{i:0;s:7:"mt_rand";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Generate a better random value";i:3;s:35:"int mt_rand ( int $min , int $max )";}
a:4:{i:0;s:8:"mt_srand";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Seed the better random number generator";i:3;s:30:"void mt_srand ([ int $seed ] )";}
a:4:{i:0;s:6:"octdec";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Octal to decimal";i:3;s:38:"number octdec ( string $octal_string )";}
a:4:{i:0;s:2:"pi";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Get value of pi";i:3;s:17:"float pi ( void )";}
a:4:{i:0;s:3:"pow";i:1;s:12:"PHP 4, PHP 5";i:2;s:22:"Exponential expression";i:3;s:41:"number pow ( number $base , number $exp )";}
a:4:{i:0;s:7:"rad2deg";i:1;s:12:"PHP 4, PHP 5";i:2;s:64:" Converts the radian number to the equivalent number in degrees ";i:3;s:31:"float rad2deg ( float $number )";}
a:4:{i:0;s:4:"rand";i:1;s:12:"PHP 4, PHP 5";i:2;s:25:"Generate a random integer";i:3;s:32:"int rand ( int $min , int $max )";}
a:4:{i:0;s:5:"round";i:1;s:12:"PHP 4, PHP 5";i:2;s:14:"Rounds a float";i:3;s:84:"float round ( float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]] )";}
a:4:{i:0;s:3:"sin";i:1;s:12:"PHP 4, PHP 5";i:2;s:4:"Sine";i:3;s:24:"float sin ( float $arg )";}
a:4:{i:0;s:4:"sinh";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:15:"Hyperbolic sine";i:3;s:25:"float sqrt ( float $arg )";}
a:4:{i:0;s:5:"srand";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Seed the random number generator";i:3;s:27:"void srand ([ int $seed ] )";}
a:4:{i:0;s:3:"tan";i:1;s:12:"PHP 4, PHP 5";i:2;s:7:"Tangent";i:3;s:24:"float tan ( float $arg )";}
a:4:{i:0;s:4:"tanh";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:18:"Hyperbolic tangent";i:3;s:25:"float tanh ( float $arg )";}
a:4:{i:0;s:24:"stats_absolute_deviation";i:1;s:19:"PECL stats >= 1.0.0";i:2;s:52:"Returns the absolute deviation of an array of values";i:3;s:77:"float stats_cdf_beta ( float $par1 , float $par2 , float $par3 , int $which )";}
a:4:{i:0;s:18:"stats_cdf_binomial";i:1;s:19:"PECL stats >= 1.0.0";i:2;s:86:"Calculates any one parameter of the binomial distribution given values for the others.";i:3;s:49:"float stats_rand_gen_beta ( float $a , float $b )";}
a:4:{i:0;s:16:"stats_rand_gen_f";i:1;s:19:"PECL stats >= 1.0.0";i:2;s:26:"Generates a random deviate";i:3;s:50:"float stats_rand_gen_gamma ( float $a , float $r )";}
a:4:{i:0;s:18:"stats_rand_gen_int";i:1;s:19:"PECL stats >= 1.0.0";i:2;s:49:"Generates random integer between 1 and 2147483562";i:3;s:59:"float stats_variance ( array $a [, bool $sample = false ] )";}
a:4:{i:0;s:22:"fdf_add_doc_javascript";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:40:"Adds javascript code to the FDF document";i:3;s:98:"bool fdf_add_doc_javascript ( resource $fdf_document , string $script_name , string $script_code )";}
a:4:{i:0;s:16:"fdf_add_template";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Adds a template into the FDF document";i:3;s:28:"resource fdf_create ( void )";}
a:4:{i:0;s:15:"fdf_enum_values";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:53:"Call a user defined function for each document value ";i:3;s:90:"array fdf_get_attachment ( resource $fdf_document , string $fieldname , string $savepath )";}
a:4:{i:0;s:13:"fdf_get_flags";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:25:"Gets the flags of a field";i:3;s:76:"string fdf_next_field_name ( resource $fdf_document [, string $fieldname ] )";}
a:4:{i:0;s:15:"fdf_open_string";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:33:"Read a FDF document from a string";i:3;s:45:"resource fdf_open_string ( string $fdf_data )";}
a:4:{i:0;s:8:"fdf_open";i:1;s:12:"PHP 4, PHP 5";i:2;s:19:"Open a FDF document";i:3;s:38:"resource fdf_open ( string $filename )";}
a:4:{i:0;s:15:"fdf_remove_item";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:26:"Sets target frame for form";i:3;s:49:"string fdf_save_string ( resource $fdf_document )";}
a:4:{i:0;s:8:"fdf_save";i:1;s:12:"PHP 4, PHP 5";i:2;s:19:"Save a FDF document";i:3;s:84:"bool fdf_set_file ( resource $fdf_document , string $url [, string $target_frame ] )";}
a:4:{i:0;s:13:"fdf_set_flags";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:22:"Sets a flag of a field";i:3;s:65:"bool fdf_set_version ( resource $fdf_document , string $version )";}
a:4:{i:0;s:19:"gnupg_adddecryptkey";i:1;s:17:"PECL gnupg >= 0.5";i:2;s:24:"Add a key for decryption";i:3;s:92:"bool gnupg_adddecryptkey ( resource $identifier , string $fingerprint , string $passphrase )";}
a:4:{i:0;s:19:"gnupg_addencryptkey";i:1;s:17:"PECL gnupg >= 0.5";i:2;s:24:"Add a key for encryption";i:3;s:71:"bool gnupg_addencryptkey ( resource $identifier , string $fingerprint )";}
a:4:{i:0;s:16:"gnupg_addsignkey";i:1;s:17:"PECL gnupg >= 0.5";i:2;s:21:"Add a key for signing";i:3;s:92:"bool gnupg_addsignkey ( resource $identifier , string $fingerprint [, string $passphrase ] )";}
a:4:{i:0;s:22:"gnupg_cleardecryptkeys";i:1;s:17:"PECL gnupg >= 0.5";i:2;s:53:"Removes all keys which were set for decryption before";i:3;s:52:"bool gnupg_cleardecryptkeys ( resource $identifier )";}
a:4:{i:0;s:22:"gnupg_clearencryptkeys";i:1;s:17:"PECL gnupg >= 0.5";i:2;s:53:"Removes all keys which were set for encryption before";i:3;s:52:"bool gnupg_clearencryptkeys ( resource $identifier )";}
a:4:{i:0;s:19:"gnupg_clearsignkeys";i:1;s:17:"PECL gnupg >= 0.5";i:2;s:50:"Removes all keys which were set for signing before";i:3;s:49:"bool gnupg_clearsignkeys ( resource $identifier )";}
a:4:{i:0;s:13:"gnupg_decrypt";i:1;s:17:"PECL gnupg >= 0.1";i:2;s:21:"Decrypts a given text";i:3;s:60:"string gnupg_decrypt ( resource $identifier , string $text )";}
a:4:{i:0;s:19:"gnupg_decryptverify";i:1;s:17:"PECL gnupg >= 0.2";i:2;s:34:"Decrypts and verifies a given text";i:3;s:86:"array gnupg_decryptverify ( resource $identifier , string $text , string &$plaintext )";}
a:4:{i:0;s:13:"gnupg_encrypt";i:1;s:17:"PECL gnupg >= 0.1";i:2;s:21:"Encrypts a given text";i:3;s:65:"string gnupg_encrypt ( resource $identifier , string $plaintext )";}
a:4:{i:0;s:17:"gnupg_encryptsign";i:1;s:17:"PECL gnupg >= 0.2";i:2;s:31:"Encrypts and signs a given text";i:3;s:69:"string gnupg_encryptsign ( resource $identifier , string $plaintext )";}
a:4:{i:0;s:12:"gnupg_export";i:1;s:17:"PECL gnupg >= 0.1";i:2;s:13:"Exports a key";i:3;s:66:"string gnupg_export ( resource $identifier , string $fingerprint )";}
a:4:{i:0;s:17:"gnupg_getprotocol";i:1;s:17:"PECL gnupg >= 0.1";i:2;s:56:"Returns the currently active protocol for all operations";i:3;s:46:"int gnupg_getprotocol ( resource $identifier )";}
a:4:{i:0;s:12:"gnupg_import";i:1;s:17:"PECL gnupg >= 0.3";i:2;s:13:"Imports a key";i:3;s:61:"array gnupg_import ( resource $identifier , string $keydata )";}
a:4:{i:0;s:10:"gnupg_init";i:1;s:17:"PECL gnupg >= 0.4";i:2;s:23:"Initialize a connection";i:3;s:28:"resource gnupg_init ( void )";}
a:4:{i:0;s:13:"gnupg_keyinfo";i:1;s:17:"PECL gnupg >= 0.1";i:2;s:79:"Returns an array with information about all keys that matches the given pattern";i:3;s:62:"array gnupg_keyinfo ( resource $identifier , string $pattern )";}
a:4:{i:0;s:14:"gnupg_setarmor";i:1;s:17:"PECL gnupg >= 0.1";i:2;s:21:"Toggle armored output";i:3;s:57:"bool gnupg_setarmor ( resource $identifier , int $armor )";}
a:4:{i:0;s:18:"gnupg_seterrormode";i:1;s:17:"PECL gnupg >= 0.6";i:2;s:33:"Sets the mode for error_reporting";i:3;s:65:"void gnupg_seterrormode ( resource $identifier , int $errormode )";}
a:4:{i:0;s:17:"gnupg_setsignmode";i:1;s:17:"PECL gnupg >= 0.1";i:2;s:25:"Sets the mode for signing";i:3;s:63:"bool gnupg_setsignmode ( resource $identifier , int $signmode )";}
a:4:{i:0;s:10:"gnupg_sign";i:1;s:17:"PECL gnupg >= 0.1";i:2;s:18:"Signs a given text";i:3;s:62:"string gnupg_sign ( resource $identifier , string $plaintext )";}
a:4:{i:0;s:12:"gnupg_verify";i:1;s:17:"PECL gnupg >= 0.1";i:2;s:22:"Verifies a signed text";i:3;s:109:"array gnupg_verify ( resource $identifier , string $signed_text , string $signature [, string &$plaintext ] )";}
a:4:{i:0;s:16:"HaruDoc::addPage";i:1;s:18:"PECL haru >= 0.0.1";i:2;s:28:"Add new page to the document";i:3;s:158:"bool HaruDoc::setInfoDateAttr ( int $type , int $year , int $month , int $day , int $hour , int $min , int $sec , string $ind , int $off_hour , int $off_min )";}
a:4:{i:0;s:22:"HaruDoc::setOpenAction";i:1;s:18:"PECL haru >= 0.0.1";i:2;s:54:"Define which page is shown when the document is opened";i:3;s:59:"bool HaruDoc::setPagesConfiguration ( int $page_per_pages )";}
a:4:{i:0;s:20:"HaruDoc::setPassword";i:1;s:18:"PECL haru >= 0.0.1";i:2;s:45:"Set owner and user passwords for the document";i:3;s:33:"bool HaruDoc::useKRFonts ( void )";}
a:4:{i:0;s:13:"HaruPage::arc";i:1;s:18:"PECL haru >= 0.0.1";i:2;s:33:"Append an arc to the current path";i:3;s:81:"bool HaruPage::moveTextPos ( float $x , float $y [, bool $set_leading = false ] )";}
a:4:{i:0;s:16:"HaruPage::moveTo";i:1;s:18:"PECL haru >= 0.0.1";i:2;s:39:"Set starting point for new drawing path";i:3;s:138:"bool HaruPage::textRect ( float $left , float $top , float $right , float $bottom , string $text [, int $align = HaruPage::TALIGN_LEFT ] )";}
a:4:{i:0;s:19:"HaruFont::getAscent";i:1;s:18:"PECL haru >= 0.0.1";i:2;s:35:"Get the vertical ascent of the font";i:3;s:145:"int HaruFont::measureText ( string $text , float $width , float $font_size , float $char_space , float $word_space [, bool $word_wrap = false ] )";}
a:4:{i:0;s:30:"HaruImage::getBitsPerComponent";i:1;s:18:"PECL haru >= 0.0.1";i:2;s:73:"Get the number of bits used to describe each color component of the image";i:3;s:51:"bool HaruImage::setMaskImage ( object $mask_image )";}
a:4:{i:0;s:24:"HaruEncoder::getByteType";i:1;s:18:"PECL haru >= 0.0.1";i:2;s:36:"Get the type of the byte in the text";i:3;s:40:"int HaruEncoder::getWritingMode ( void )";}
a:4:{i:0;s:27:"HaruOutline::setDestination";i:1;s:18:"PECL haru >= 0.0.1";i:2;s:35:"Set the destination for the outline";i:3;s:44:"bool HaruOutline::setOpened ( bool $opened )";}
a:4:{i:0;s:30:"HaruAnnotation::setBorderStyle";i:1;s:18:"PECL haru >= 0.0.1";i:2;s:38:"Set the border style of the annotation";i:3;s:47:"bool HaruAnnotation::setOpened ( bool $opened )";}
a:4:{i:0;s:23:"HaruDestination::setFit";i:1;s:18:"PECL haru >= 0.0.1";i:2;s:48:"Set the appearance of the page to fit the window";i:3;s:71:"bool HaruDestination::setXYZ ( float $left , float $top , float $zoom )";}
a:4:{i:0;s:22:"ming_setcubicthreshold";i:1;s:36:"PHP 4 >= 4.0.5, PHP 5, PECL ming SVN";i:2;s:21:" Set cubic threshold ";i:3;s:40:"void ming_useswfversion ( int $version )";}
a:4:{i:0;s:8:"SWFSound";i:1;s:29:"PHP 5 <= 5.3.0, PECL ming SVN";i:2;s:45:"Returns a new SWFSound object from given file";i:3;s:71:"SWFSound SWFSound::__construct ( string $filename [, int $flags = 0 ] )";}
a:4:{i:0;s:17:"PDF_activate_item";i:1;s:20:"PECL pdflib >= 2.0.0";i:2;s:48:"Activate structure element or other content item";i:3;s:140:"int PDF_show_boxed ( resource $p , string $text , float $left , float $top , float $width , float $height , string $mode , string $feature )";}
a:4:{i:0;s:11:"PDF_show_xy";i:1;s:27:"PHP 4, PECL pdflib >= 1.0.0";i:2;s:29:"Output text at given position";i:3;s:85:"string PDF_utf8_to_utf16 ( resource $pdfdoc , string $utf8string , string $ordering )";}
a:4:{i:0;s:15:"ps_add_bookmark";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:28:"Add bookmark to current page";i:3;s:93:"int ps_add_bookmark ( resource $psdoc , string $text [, int $parent = 0 [, int $open = 0 ]] )";}
a:4:{i:0;s:17:"ps_add_launchlink";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:29:"Adds link which launches file";i:3;s:113:"bool ps_add_launchlink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename )";}
a:4:{i:0;s:16:"ps_add_locallink";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:40:"Adds link to a page in the same document";i:3;s:120:"bool ps_add_locallink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , int $page , string $dest )";}
a:4:{i:0;s:11:"ps_add_note";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:25:"Adds note to current page";i:3;s:150:"bool ps_add_note ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open )";}
a:4:{i:0;s:14:"ps_add_pdflink";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:44:"Adds link to a page in a second pdf document";i:3;s:137:"bool ps_add_pdflink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename , int $page , string $dest )";}
a:4:{i:0;s:14:"ps_add_weblink";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:27:"Adds link to a web location";i:3;s:105:"bool ps_add_weblink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $url )";}
a:4:{i:0;s:6:"ps_arc";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:29:"Draws an arc counterclockwise";i:3;s:118:"int ps_begin_pattern ( resource $psdoc , float $width , float $height , float $xstep , float $ystep , int $painttype )";}
a:4:{i:0;s:17:"ps_begin_template";i:1;s:16:"PECL ps >= 1.2.0";i:2;s:20:"Start a new template";i:3;s:72:"int ps_begin_template ( resource $psdoc , float $width , float $height )";}
a:4:{i:0;s:9:"ps_circle";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:14:"Draws a circle";i:3;s:72:"bool ps_circle ( resource $psdoc , float $x , float $y , float $radius )";}
a:4:{i:0;s:7:"ps_clip";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:29:"Clips drawing to current path";i:3;s:107:"bool ps_curveto ( resource $psdoc , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )";}
a:4:{i:0;s:9:"ps_delete";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:46:"Deletes all resources of a PostScript document";i:3;s:79:"string ps_get_parameter ( resource $psdoc , string $name [, float $modifier ] )";}
a:4:{i:0;s:12:"ps_get_value";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:19:"Gets certain values";i:3;s:74:"float ps_get_value ( resource $psdoc , string $name [, float $modifier ] )";}
a:4:{i:0;s:12:"ps_hyphenate";i:1;s:16:"PECL ps >= 1.1.1";i:2;s:17:"Hyphenates a word";i:3;s:53:"array ps_hyphenate ( resource $psdoc , string $text )";}
a:4:{i:0;s:15:"ps_include_file";i:1;s:16:"PECL ps >= 1.3.4";i:2;s:47:"Reads an external file with raw PostScript code";i:3;s:56:"bool ps_lineto ( resource $psdoc , float $x , float $y )";}
a:4:{i:0;s:16:"ps_makespotcolor";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:17:"Create spot color";i:3;s:78:"int ps_makespotcolor ( resource $psdoc , string $name [, int $reserved = 0 ] )";}
a:4:{i:0;s:9:"ps_moveto";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:18:"Sets current point";i:3;s:47:"bool ps_rotate ( resource $psdoc , float $rot )";}
a:4:{i:0;s:7:"ps_save";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:20:"Save current context";i:3;s:62:"bool ps_set_text_pos ( resource $psdoc , float $x , float $y )";}
a:4:{i:0;s:12:"ps_set_value";i:1;s:16:"PECL ps >= 1.1.0";i:2;s:19:"Sets certain values";i:3;s:52:"bool ps_setpolydash ( resource $psdoc , float $arr )";}
a:4:{i:0;s:18:"ps_shading_pattern";i:1;s:16:"PECL ps >= 1.3.0";i:2;s:36:"Creates a pattern based on a shading";i:3;s:59:"bool ps_translate ( resource $psdoc , float $x , float $y )";}
a:4:{i:0;s:9:"rpm_close";i:1;s:23:"PECL rpmreader >= 0.1.0";i:2;s:18:"Closes an RPM file";i:3;s:33:"bool rpm_close ( resource $rpmr )";}
a:4:{i:0;s:11:"rpm_get_tag";i:1;s:23:"PECL rpmreader >= 0.1.0";i:2;s:39:"Retrieves a header tag from an RPM file";i:3;s:50:"mixed rpm_get_tag ( resource $rpmr , int $tagnum )";}
a:4:{i:0;s:12:"rpm_is_valid";i:1;s:23:"PECL rpmreader >= 0.1.0";i:2;s:44:"Tests a filename for validity as an RPM file";i:3;s:38:"bool rpm_is_valid ( string $filename )";}
a:4:{i:0;s:8:"rpm_open";i:1;s:23:"PECL rpmreader >= 0.1.0";i:2;s:17:"Opens an RPM file";i:3;s:38:"resource rpm_open ( string $filename )";}
a:4:{i:0;s:11:"rpm_version";i:1;s:23:"PECL rpmreader >= 0.3.0";i:2;s:76:"Returns a string representing the current version of the rpmreader extension";i:3;s:27:"string rpm_version ( void )";}
a:4:{i:0;s:16:"swf_actiongeturl";i:1;s:5:"PHP 4";i:2;s:38:"Get a URL from a Shockwave Flash movie";i:3;s:68:"void swf_addbuttonrecord ( int $states , int $shapeid , int $depth )";}
a:4:{i:0;s:12:"swf_addcolor";i:1;s:5:"PHP 4";i:2;s:52:"Set the global add color to the rgba value specified";i:3;s:42:"void swf_closefile ([ int $return_file ] )";}
a:4:{i:0;s:16:"swf_definebitmap";i:1;s:5:"PHP 4";i:2;s:15:"Define a bitmap";i:3;s:64:"void swf_definetext ( int $objid , string $str , int $docenter )";}
a:4:{i:0;s:13:"swf_endbutton";i:1;s:5:"PHP 4";i:2;s:40:"End the definition of the current button";i:3;s:143:"void swf_lookat ( float $view_x , float $view_y , float $view_z , float $reference_x , float $reference_y , float $reference_z , float $twist )";}
a:4:{i:0;s:16:"swf_modifyobject";i:1;s:5:"PHP 4";i:2;s:16:"Modify an object";i:3;s:40:"void swf_oncondition ( int $transition )";}
a:4:{i:0;s:12:"swf_openfile";i:1;s:5:"PHP 4";i:2;s:31:"Open a new Shockwave Flash file";i:3;s:75:"void swf_viewport ( float $xmin , float $xmax , float $ymin , float $ymax )";}
a:4:{i:0;s:14:"escapeshellarg";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:46:"Escape a string to be used as a shell argument";i:3;s:37:"string escapeshellarg ( string $arg )";}
a:4:{i:0;s:14:"escapeshellcmd";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Escape shell metacharacters";i:3;s:41:"string escapeshellcmd ( string $command )";}
a:4:{i:0;s:4:"exec";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Execute an external program";i:3;s:72:"string exec ( string $command [, array &$output [, int &$return_var ]] )";}
a:4:{i:0;s:8:"passthru";i:1;s:12:"PHP 4, PHP 5";i:2;s:50:"Execute an external program and display raw output";i:3;s:55:"void passthru ( string $command [, int &$return_var ] )";}
a:4:{i:0;s:9:"proc_nice";i:1;s:5:"PHP 5";i:2;s:42:"Change the priority of the current process";i:3;s:131:"resource proc_open ( string $cmd , array $descriptorspec , array &$pipes [, string $cwd [, array $env [, array $other_options ]]] )";}
a:4:{i:0;s:14:"proc_terminate";i:1;s:5:"PHP 5";i:2;s:35:"Kills a process opened by proc_open";i:3;s:33:"string shell_exec ( string $cmd )";}
a:4:{i:0;s:6:"system";i:1;s:12:"PHP 4, PHP 5";i:2;s:50:"Execute an external program and display the output";i:3;s:55:"string system ( string $command [, int &$return_var ] )";}
a:4:{i:0;s:9:"event_add";i:1;s:22:"PECL libevent >= 0.0.1";i:2;s:43:"Add an event to the set of monitored events";i:3;s:94:"bool event_set ( resource $event , mixed $fd , int $events , mixed $callback [, mixed $arg ] )";}
a:4:{i:0;s:11:"pcntl_alarm";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:43:"Set an alarm clock for delivery of a signal";i:3;s:65:"void pcntl_exec ( string $path [, array $args [, array $envs ]] )";}
a:4:{i:0;s:10:"pcntl_fork";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:35:"Forks the currently running process";i:3;s:23:"int pcntl_fork ( void )";}
a:4:{i:0;s:17:"pcntl_getpriority";i:1;s:5:"PHP 5";i:2;s:31:"Get the priority of any process";i:3;s:35:"bool pcntl_signal_dispatch ( void )";}
a:4:{i:0;s:12:"pcntl_signal";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:25:"Installs a signal handler";i:3;s:87:"bool pcntl_signal ( int $signo , callback $handler [, bool $restart_syscalls = true ] )";}
a:4:{i:0;s:17:"pcntl_sigprocmask";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:34:"Sets and retrieves blocked signals";i:3;s:68:"bool pcntl_sigprocmask ( int $how , array $set [, array &$oldset ] )";}
a:4:{i:0;s:17:"pcntl_sigwaitinfo";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:17:"Waits for signals";i:3;s:57:"int pcntl_sigwaitinfo ( array $set [, array &$siginfo ] )";}
a:4:{i:0;s:10:"pcntl_wait";i:1;s:5:"PHP 5";i:2;s:48:"Waits on or returns the status of a forked child";i:3;s:34:"int pcntl_wtermsig ( int $status )";}
a:4:{i:0;s:12:"posix_access";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:35:" Determine accessibility of a file ";i:3;s:62:"bool posix_access ( string $file [, int $mode = POSIX_F_OK ] )";}
a:4:{i:0;s:13:"posix_ctermid";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Get path name of controlling terminal";i:3;s:29:"string posix_ctermid ( void )";}
a:4:{i:0;s:20:"posix_get_last_error";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:68:"Retrieve the error number set by the last posix function that failed";i:3;s:33:"int posix_get_last_error ( void )";}
a:4:{i:0;s:12:"posix_getcwd";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Pathname of current directory";i:3;s:28:"string posix_getcwd ( void )";}
a:4:{i:0;s:13:"posix_getegid";i:1;s:12:"PHP 4, PHP 5";i:2;s:52:"Return the effective group ID of the current process";i:3;s:26:"int posix_getegid ( void )";}
a:4:{i:0;s:13:"posix_geteuid";i:1;s:12:"PHP 4, PHP 5";i:2;s:51:"Return the effective user ID of the current process";i:3;s:26:"int posix_geteuid ( void )";}
a:4:{i:0;s:12:"posix_getgid";i:1;s:12:"PHP 4, PHP 5";i:2;s:47:"Return the real group ID of the current process";i:3;s:25:"int posix_getgid ( void )";}
a:4:{i:0;s:14:"posix_getgrgid";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Return info about a group by group id";i:3;s:33:"array posix_getgrgid ( int $gid )";}
a:4:{i:0;s:14:"posix_getgrnam";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Return info about a group by name";i:3;s:37:"array posix_getgrnam ( string $name )";}
a:4:{i:0;s:15:"posix_getgroups";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:"Return the group set of the current process";i:3;s:30:"array posix_getgroups ( void )";}
a:4:{i:0;s:14:"posix_getlogin";i:1;s:12:"PHP 4, PHP 5";i:2;s:17:"Return login name";i:3;s:30:"string posix_getlogin ( void )";}
a:4:{i:0;s:13:"posix_getpgid";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Get process group id for job control";i:3;s:30:"int posix_getpgid ( int $pid )";}
a:4:{i:0;s:13:"posix_getpgrp";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:"Return the current process group identifier";i:3;s:25:"int posix_getpid ( void )";}
a:4:{i:0;s:13:"posix_getppid";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Return the parent process identifier";i:3;s:26:"int posix_getppid ( void )";}
a:4:{i:0;s:14:"posix_getpwnam";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Return info about a user by username";i:3;s:41:"array posix_getpwnam ( string $username )";}
a:4:{i:0;s:14:"posix_getpwuid";i:1;s:12:"PHP 4, PHP 5";i:2;s:35:"Return info about a user by user id";i:3;s:33:"array posix_getpwuid ( int $uid )";}
a:4:{i:0;s:15:"posix_getrlimit";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:"Return info about system resource limits";i:3;s:30:"array posix_getrlimit ( void )";}
a:4:{i:0;s:12:"posix_getsid";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Get the current sid of the process";i:3;s:29:"int posix_getsid ( int $pid )";}
a:4:{i:0;s:12:"posix_getuid";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Return the real user ID of the current process";i:3;s:25:"int posix_getuid ( void )";}
a:4:{i:0;s:16:"posix_initgroups";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:31:"Calculate the group access list";i:3;s:50:"bool posix_mkfifo ( string $pathname , int $mode )";}
a:4:{i:0;s:13:"posix_setegid";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:44:"Set the effective GID of the current process";i:3;s:31:"bool posix_setegid ( int $gid )";}
a:4:{i:0;s:13:"posix_seteuid";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:44:"Set the effective UID of the current process";i:3;s:30:"bool posix_setgid ( int $gid )";}
a:4:{i:0;s:13:"posix_setpgid";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Set process group id for job control";i:3;s:30:"bool posix_setuid ( int $uid )";}
a:4:{i:0;s:14:"posix_strerror";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:65:"Retrieve the system error message associated with the given errno";i:3;s:36:"string posix_strerror ( int $errno )";}
a:4:{i:0;s:11:"posix_times";i:1;s:12:"PHP 4, PHP 5";i:2;s:17:"Get process times";i:3;s:26:"array posix_times ( void )";}
a:4:{i:0;s:13:"posix_ttyname";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Determine terminal device name";i:3;s:26:"array posix_uname ( void )";}
a:4:{i:0;s:4:"ftok";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:65:"Convert a pathname and a project identifier to a System V IPC key";i:3;s:64:"resource shm_attach ( int $key [, int $memsize [, int $perm ]] )";}
a:4:{i:0;s:10:"shm_detach";i:1;s:12:"PHP 4, PHP 5";i:2;s:38:"Disconnects from shared memory segment";i:3;s:44:"bool shm_remove ( resource $shm_identifier )";}
a:4:{i:0;s:11:"shmop_close";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:25:"Close shared memory block";i:3;s:31:"void shmop_close ( int $shmid )";}
a:4:{i:0;s:12:"shmop_delete";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:26:"Delete shared memory block";i:3;s:32:"bool shmop_delete ( int $shmid )";}
a:4:{i:0;s:10:"shmop_open";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:34:"Create or open shared memory block";i:3;s:67:"int shmop_open ( int $key , string $flags , int $mode , int $size )";}
a:4:{i:0;s:10:"shmop_read";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:34:"Read data from shared memory block";i:3;s:58:"string shmop_read ( int $shmid , int $start , int $count )";}
a:4:{i:0;s:10:"shmop_size";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:31:"Get size of shared memory block";i:3;s:29:"int shmop_size ( int $shmid )";}
a:4:{i:0;s:11:"shmop_write";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:35:"Write data into shared memory block";i:3;s:59:"int shmop_write ( int $shmid , string $data , int $offset )";}
a:4:{i:0;s:28:"geoip_continent_code_by_name";i:1;s:19:"PECL geoip >= 1.0.3";i:2;s:33:"Get the two letter continent code";i:3;s:56:"string geoip_continent_code_by_name ( string $hostname )";}
a:4:{i:0;s:26:"geoip_country_code_by_name";i:1;s:19:"PECL geoip >= 0.2.0";i:2;s:31:"Get the two letter country code";i:3;s:54:"string geoip_country_code_by_name ( string $hostname )";}
a:4:{i:0;s:27:"geoip_country_code3_by_name";i:1;s:19:"PECL geoip >= 0.2.0";i:2;s:33:"Get the three letter country code";i:3;s:55:"string geoip_country_code3_by_name ( string $hostname )";}
a:4:{i:0;s:26:"geoip_country_name_by_name";i:1;s:19:"PECL geoip >= 0.2.0";i:2;s:25:"Get the full country name";i:3;s:54:"string geoip_country_name_by_name ( string $hostname )";}
a:4:{i:0;s:19:"geoip_database_info";i:1;s:19:"PECL geoip >= 0.2.0";i:2;s:30:"Get GeoIP Database information";i:3;s:71:"string geoip_database_info ([ int $database = GEOIP_COUNTRY_EDITION ] )";}
a:4:{i:0;s:14:"geoip_db_avail";i:1;s:19:"PECL geoip >= 1.0.1";i:2;s:40:"Determine if GeoIP Database is available";i:3;s:37:"bool geoip_db_avail ( int $database )";}
a:4:{i:0;s:17:"geoip_db_filename";i:1;s:19:"PECL geoip >= 1.0.1";i:2;s:56:"Returns the filename of the corresponding GeoIP Database";i:3;s:42:"string geoip_db_filename ( int $database )";}
a:4:{i:0;s:21:"geoip_db_get_all_info";i:1;s:19:"PECL geoip >= 1.0.1";i:2;s:59:"Returns detailed information about all GeoIP database types";i:3;s:36:"array geoip_db_get_all_info ( void )";}
a:4:{i:0;s:16:"geoip_id_by_name";i:1;s:19:"PECL geoip >= 0.2.0";i:2;s:32:"Get the Internet connection type";i:3;s:41:"int geoip_id_by_name ( string $hostname )";}
a:4:{i:0;s:17:"geoip_org_by_name";i:1;s:19:"PECL geoip >= 0.2.0";i:2;s:25:"Get the organization name";i:3;s:45:"string geoip_org_by_name ( string $hostname )";}
a:4:{i:0;s:20:"geoip_record_by_name";i:1;s:19:"PECL geoip >= 0.2.0";i:2;s:65:"Returns the detailed City information found in the GeoIP Database";i:3;s:47:"array geoip_record_by_name ( string $hostname )";}
a:4:{i:0;s:20:"geoip_region_by_name";i:1;s:19:"PECL geoip >= 0.2.0";i:2;s:31:"Get the country code and region";i:3;s:47:"array geoip_region_by_name ( string $hostname )";}
a:4:{i:0;s:25:"geoip_region_name_by_code";i:1;s:19:"PECL geoip >= 1.0.4";i:2;s:62:"Returns the region name for some country and region code combo";i:3;s:79:"string geoip_region_name_by_code ( string $country_code , string $region_code )";}
a:4:{i:0;s:37:"geoip_time_zone_by_country_and_region";i:1;s:19:"PECL geoip >= 1.0.4";i:2;s:60:"Returns the time zone for some country and region code combo";i:3;s:94:"string geoip_time_zone_by_country_and_region ( string $country_code [, string $region_code ] )";}
a:4:{i:0;s:16:"Judy::__destruct";i:1;s:18:"PECL judy >= 0.1.1";i:2;s:22:"Destruct a Judy object";i:3;s:31:"public void Judy::size ( void )";}
a:4:{i:0;s:12:"judy_version";i:1;s:18:"PECL judy >= 0.1.1";i:2;s:44:"Return or print the current PHP Judy version";i:3;s:28:"string judy_version ( void )";}
a:4:{i:0;s:11:"json_decode";i:1;s:34:"PHP 5 >= 5.2.0, PECL json >= 1.2.0";i:2;s:21:"Decodes a JSON string";i:3;s:101:"mixed json_decode ( string $json [, bool $assoc = false [, int $depth = 512 [, int $options = 0 ]]] )";}
a:4:{i:0;s:11:"json_encode";i:1;s:34:"PHP 5 >= 5.2.0, PECL json >= 1.2.0";i:2;s:42:"Returns the JSON representation of a value";i:3;s:57:"string json_encode ( mixed $value [, int $options = 0 ] )";}
a:4:{i:0;s:15:"json_last_error";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:31:"Returns the last error occurred";i:3;s:28:"int json_last_error ( void )";}
a:4:{i:0;s:18:"connection_aborted";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Check whether client disconnected";i:3;s:31:"mixed constant ( string $name )";}
a:4:{i:0;s:6:"define";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Defines a named constant";i:3;s:79:"bool define ( string $name , mixed $value [, bool $case_insensitive = false ] )";}
a:4:{i:0;s:7:"defined";i:1;s:12:"PHP 4, PHP 5";i:2;s:44:"Checks whether a given named constant exists";i:3;s:29:"bool defined ( string $name )";}
a:4:{i:0;s:4:"eval";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Evaluate a string as PHP code";i:3;s:31:"mixed eval ( string $code_str )";}
a:4:{i:0;s:4:"exit";i:1;s:12:"PHP 4, PHP 5";i:2;s:49:"Output a message and terminate the current script";i:3;s:25:"void exit ( int $status )";}
a:4:{i:0;s:15:"__halt_compiler";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:30:" Halts the compiler execution ";i:3;s:29:"void __halt_compiler ( void )";}
a:4:{i:0;s:14:"highlight_file";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Syntax highlighting of a file";i:3;s:64:"mixed highlight_string ( string $str [, bool $return = false ] )";}
a:4:{i:0;s:17:"ignore_user_abort";i:1;s:12:"PHP 4, PHP 5";i:2;s:61:"Set whether a client disconnect should abort script execution";i:3;s:42:"int ignore_user_abort ([ string $value ] )";}
a:4:{i:0;s:4:"pack";i:1;s:12:"PHP 4, PHP 5";i:2;s:28:"Pack data into binary string";i:3;s:62:"string pack ( string $format [, mixed $args [, mixed $... ]] )";}
a:4:{i:0;s:20:"php_strip_whitespace";i:1;s:5:"PHP 5";i:2;s:51:"Return source with stripped comments and whitespace";i:3;s:48:"string php_strip_whitespace ( string $filename )";}
a:4:{i:0;s:5:"sleep";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Delay execution";i:3;s:26:"int sleep ( int $seconds )";}
a:4:{i:0;s:14:"sys_getloadavg";i:1;s:14:"PHP 5 >= 5.1.3";i:2;s:24:"Gets system load average";i:3;s:29:"array sys_getloadavg ( void )";}
a:4:{i:0;s:14:"time_nanosleep";i:1;s:5:"PHP 5";i:2;s:45:"Delay for a number of seconds and nanoseconds";i:3;s:56:"mixed time_nanosleep ( int $seconds , int $nanoseconds )";}
a:4:{i:0;s:16:"time_sleep_until";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:48:" Make the script sleep until the specified time ";i:3;s:42:"bool time_sleep_until ( float $timestamp )";}
a:4:{i:0;s:6:"uniqid";i:1;s:12:"PHP 4, PHP 5";i:2;s:20:"Generate a unique ID";i:3;s:71:"string uniqid ([ string $prefix = "" [, bool $more_entropy = false ]] )";}
a:4:{i:0;s:6:"unpack";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Unpack data from binary string";i:3;s:46:"array unpack ( string $format , string $data )";}
a:4:{i:0;s:6:"usleep";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"Delay execution in microseconds";i:3;s:34:"void usleep ( int $micro_seconds )";}
a:4:{i:0;s:21:"parsekit_compile_file";i:1;s:22:"PECL parsekit >= 0.2.0";i:2;s:62:"Compile a string of PHP code and return the resulting op array";i:3;s:102:"array parsekit_compile_file ( string $filename [, array &$errors [, int $options = PARSEKIT_QUIET ]] )";}
a:4:{i:0;s:23:"parsekit_compile_string";i:1;s:22:"PECL parsekit >= 0.2.0";i:2;s:62:"Compile a string of PHP code and return the resulting op array";i:3;s:103:"array parsekit_compile_string ( string $phpcode [, array &$errors [, int $options = PARSEKIT_QUIET ]] )";}
a:4:{i:0;s:27:"SplDoublyLinkedList::bottom";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:62:"Peeks at the node from the beginning of the doubly linked list";i:3;s:43:"SplDoublyLinkedList::__construct() ( void )";}
a:4:{i:0;s:26:"SplDoublyLinkedList::count";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:56:"Counts the number of elements in the doubly linked list.";i:3;s:55:"void SplDoublyLinkedList::setIteratorMode ( int $mode )";}
a:4:{i:0;s:26:"SplDoublyLinkedList::shift";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:58:"Shifts a node from the beginning of the doubly linked list";i:3;s:40:"bool SplDoublyLinkedList::valid ( void )";}
a:4:{i:0;s:21:"SplStack::__construct";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:61:"Constructs a new stack implemented using a doubly linked list";i:3;s:32:"SplStack::__construct() ( void )";}
a:4:{i:0;s:25:"SplStack::setIteratorMode";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:26:"Sets the mode of iteration";i:3;s:44:"void SplStack::setIteratorMode ( int $mode )";}
a:4:{i:0;s:21:"SplQueue::__construct";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:61:"Constructs a new queue implemented using a doubly linked list";i:3;s:32:"SplQueue::__construct() ( void )";}
a:4:{i:0;s:17:"SplQueue::dequeue";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:30:"Dequeues a node from the queue";i:3;s:44:"void SplQueue::setIteratorMode ( int $mode )";}
a:4:{i:0;s:16:"SplHeap::compare";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:79:"Compare elements in order to place them correctly in the heap while sifting up.";i:3;s:28:"bool SplHeap::valid ( void )";}
a:4:{i:0;s:19:"SplMaxHeap::compare";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:79:"Compare elements in order to place them correctly in the heap while sifting up.";i:3;s:58:"void SplMaxHeap::compare ( mixed $value1 , mixed $value2 )";}
a:4:{i:0;s:19:"SplMinHeap::compare";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:79:"Compare elements in order to place them correctly in the heap while sifting up.";i:3;s:58:"void SplMinHeap::compare ( mixed $value1 , mixed $value2 )";}
a:4:{i:0;s:25:"SplPriorityQueue::compare";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:85:"Compare priorities in order to place elements correctly in the heap while sifting up.";i:3;s:37:"bool SplPriorityQueue::valid ( void )";}
a:4:{i:0;s:26:"SplFixedArray::__construct";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:28:"Constructs a new fixed array";i:3;s:56:"public SplFixedArray::__construct() ([ int $size = 0 ] )";}
a:4:{i:0;s:20:"SplFixedArray::count";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:29:"Returns the size of the array";i:3;s:103:"public static SplFixedArray SplFixedArray::fromArray ( array $array [, boolean $save_indexes = true ] )";}
a:4:{i:0;s:22:"SplFixedArray::getSize";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:26:"Gets the size of the array";i:3;s:42:"public int SplFixedArray::getSize ( void )";}
a:4:{i:0;s:18:"SplFixedArray::key";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:26:"Return current array index";i:3;s:47:"public int SplFixedArray::setSize ( int $size )";}
a:4:{i:0;s:22:"SplFixedArray::toArray";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:40:"Returns a PHP array from the fixed array";i:3;s:44:"public array SplFixedArray::toArray ( void )";}
a:4:{i:0;s:20:"SplFixedArray::valid";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:46:"Check whether the array contains more elements";i:3;s:41:"public bool SplFixedArray::valid ( void )";}
a:4:{i:0;s:24:"SplObjectStorage::addAll";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:37:"Adds all objects from another storage";i:3;s:66:"public void SplObjectStorage::addAll ( SplObjectStorage $storage )";}
a:4:{i:0;s:24:"SplObjectStorage::attach";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:29:"Adds an object in the storage";i:3;s:79:"public void SplObjectStorage::attach ( object $object [, mixed $data = NULL ] )";}
a:4:{i:0;s:26:"SplObjectStorage::contains";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:48:"Checks if the storage contains a specific object";i:3;s:60:"public boolean SplObjectStorage::contains ( object $object )";}
a:4:{i:0;s:23:"SplObjectStorage::count";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:44:"Returns the number of objects in the storage";i:3;s:43:"public int SplObjectStorage::count ( void )";}
a:4:{i:0;s:25:"SplObjectStorage::current";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:33:"Returns the current storage entry";i:3;s:48:"public object SplObjectStorage::current ( void )";}
a:4:{i:0;s:25:"SplObjectStorage::getInfo";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:59:"Returns the data associated with the current iterator entry";i:3;s:47:"public mixed SplObjectStorage::getInfo ( void )";}
a:4:{i:0;s:21:"SplObjectStorage::key";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:52:"Returns the index at which the iterator currently is";i:3;s:41:"public int SplObjectStorage::key ( void )";}
a:4:{i:0;s:22:"SplObjectStorage::next";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:22:"Move to the next entry";i:3;s:43:"public void SplObjectStorage::next ( void )";}
a:4:{i:0;s:30:"SplObjectStorage::offsetExists";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:46:"Checks whether an object exists in the storage";i:3;s:64:"public boolean SplObjectStorage::offsetExists ( object $object )";}
a:4:{i:0;s:27:"SplObjectStorage::offsetSet";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:43:"Associates data to an object in the storage";i:3;s:72:"public void SplObjectStorage::offsetSet ( object $object , mixed $info )";}
a:4:{i:0;s:29:"SplObjectStorage::offsetUnset";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:34:"Removes an object from the storage";i:3;s:60:"public void SplObjectStorage::offsetUnset ( object $object )";}
a:4:{i:0;s:27:"SplObjectStorage::removeAll";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:69:"Removes objects contained in another storage from the current storage";i:3;s:69:"public void SplObjectStorage::removeAll ( SplObjectStorage $storage )";}
a:4:{i:0;s:24:"SplObjectStorage::rewind";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:48:"Rewind the iterator to the first storage element";i:3;s:45:"public void SplObjectStorage::rewind ( void )";}
a:4:{i:0;s:27:"SplObjectStorage::serialize";i:1;s:14:"PHP 5 >= 5.2.2";i:2;s:22:"Serializes the storage";i:3;s:50:"public string SplObjectStorage::serialize ( void )";}
a:4:{i:0;s:25:"SplObjectStorage::setInfo";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:56:"Sets the data associated with the current iterator entry";i:3;s:53:"public void SplObjectStorage::setInfo ( mixed $data )";}
a:4:{i:0;s:29:"SplObjectStorage::unserialize";i:1;s:14:"PHP 5 >= 5.2.2";i:2;s:53:"Unserializes a storage from its string representation";i:3;s:64:"public void SplObjectStorage::unserialize ( string $serialized )";}
a:4:{i:0;s:23:"SplObjectStorage::valid";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:46:"Returns if the current iterator entry is valid";i:3;s:47:"public boolean SplObjectStorage::valid ( void )";}
a:4:{i:0;s:22:"AppendIterator::append";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:19:"Appends an iterator";i:3;s:42:"public void AppendIterator::valid ( void )";}
a:4:{i:0;s:21:"ArrayIterator::append";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:17:"Append an element";i:3;s:37:"mixed ArrayIterator::current ( void )";}
a:4:{i:0;s:27:"ArrayIterator::getArrayCopy";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:14:"Get array copy";i:3;s:33:"mixed ArrayIterator::key ( void )";}
a:4:{i:0;s:20:"ArrayIterator::ksort";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:18:"Sort array by keys";i:3;s:33:"void ArrayIterator::next ( void )";}
a:4:{i:0;s:27:"ArrayIterator::offsetExists";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:22:"Check if offset exists";i:3;s:35:"void ArrayIterator::rewind ( void )";}
a:4:{i:0;s:19:"ArrayIterator::seek";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:16:"Seek to position";i:3;s:34:"bool ArrayIterator::valid ( void )";}
a:4:{i:0;s:28:"CachingIterator::__construct";i:1;s:5:"PHP 5";i:2;s:56:"Construct a new CachingIterator object for the iterator.";i:3;s:43:"public void CachingIterator::valid ( void )";}
a:4:{i:0;s:30:"DirectoryIterator::__construct";i:1;s:5:"PHP 5";i:2;s:47:"Constructs a new directory iterator from a path";i:3;s:49:"DirectoryIterator::__construct() ( string $path )";}
a:4:{i:0;s:26:"DirectoryIterator::current";i:1;s:5:"PHP 5";i:2;s:42:"Return the current DirectoryIterator item.";i:3;s:60:"public DirectoryIterator DirectoryIterator::current ( void )";}
a:4:{i:0;s:27:"DirectoryIterator::getATime";i:1;s:5:"PHP 5";i:2;s:58:"Get last access time of the current DirectoryIterator item";i:3;s:47:"public int DirectoryIterator::getATime ( void )";}
a:4:{i:0;s:30:"DirectoryIterator::getBasename";i:1;s:14:"PHP 5 >= 5.2.2";i:2;s:48:"Get base name of current DirectoryIterator item.";i:3;s:66:"public string DirectoryIterator::getBasename ([ string $suffix ] )";}
a:4:{i:0;s:27:"DirectoryIterator::getCTime";i:1;s:5:"PHP 5";i:2;s:59:"Get inode change time of the current DirectoryIterator item";i:3;s:47:"public int DirectoryIterator::getCTime ( void )";}
a:4:{i:0;s:30:"DirectoryIterator::getFilename";i:1;s:5:"PHP 5";i:2;s:51:"Return file name of current DirectoryIterator item.";i:3;s:53:"public string DirectoryIterator::getFilename ( void )";}
a:4:{i:0;s:27:"DirectoryIterator::getGroup";i:1;s:5:"PHP 5";i:2;s:48:"Get group for the current DirectoryIterator item";i:3;s:47:"public int DirectoryIterator::getGroup ( void )";}
a:4:{i:0;s:27:"DirectoryIterator::getInode";i:1;s:5:"PHP 5";i:2;s:48:"Get inode for the current DirectoryIterator item";i:3;s:47:"public int DirectoryIterator::getInode ( void )";}
a:4:{i:0;s:27:"DirectoryIterator::getMTime";i:1;s:5:"PHP 5";i:2;s:60:"Get last modification time of current DirectoryIterator item";i:3;s:47:"public int DirectoryIterator::getMTime ( void )";}
a:4:{i:0;s:27:"DirectoryIterator::getOwner";i:1;s:5:"PHP 5";i:2;s:43:"Get owner of current DirectoryIterator item";i:3;s:47:"public int DirectoryIterator::getOwner ( void )";}
a:4:{i:0;s:26:"DirectoryIterator::getPath";i:1;s:5:"PHP 5";i:2;s:50:"Get path of current Iterator item without filename";i:3;s:49:"public string DirectoryIterator::getPath ( void )";}
a:4:{i:0;s:30:"DirectoryIterator::getPathname";i:1;s:5:"PHP 5";i:2;s:59:"Return path and file name of current DirectoryIterator item";i:3;s:53:"public string DirectoryIterator::getPathname ( void )";}
a:4:{i:0;s:27:"DirectoryIterator::getPerms";i:1;s:5:"PHP 5";i:2;s:53:"Get the permissions of current DirectoryIterator item";i:3;s:47:"public int DirectoryIterator::getPerms ( void )";}
a:4:{i:0;s:26:"DirectoryIterator::getSize";i:1;s:5:"PHP 5";i:2;s:42:"Get size of current DirectoryIterator item";i:3;s:46:"public int DirectoryIterator::getSize ( void )";}
a:4:{i:0;s:26:"DirectoryIterator::getType";i:1;s:5:"PHP 5";i:2;s:56:"Determine the type of the current DirectoryIterator item";i:3;s:49:"public string DirectoryIterator::getType ( void )";}
a:4:{i:0;s:24:"DirectoryIterator::isDir";i:1;s:5:"PHP 5";i:2;s:58:"Determine if current DirectoryIterator item is a directory";i:3;s:45:"public bool DirectoryIterator::isDir ( void )";}
a:4:{i:0;s:31:"DirectoryIterator::isExecutable";i:1;s:5:"PHP 5";i:2;s:57:"Determine if current DirectoryIterator item is executable";i:3;s:52:"public bool DirectoryIterator::isExecutable ( void )";}
a:4:{i:0;s:25:"DirectoryIterator::isFile";i:1;s:5:"PHP 5";i:2;s:61:"Determine if current DirectoryIterator item is a regular file";i:3;s:46:"public bool DirectoryIterator::isFile ( void )";}
a:4:{i:0;s:25:"DirectoryIterator::isLink";i:1;s:5:"PHP 5";i:2;s:62:"Determine if current DirectoryIterator item is a symbolic link";i:3;s:46:"public bool DirectoryIterator::isLink ( void )";}
a:4:{i:0;s:29:"DirectoryIterator::isReadable";i:1;s:5:"PHP 5";i:2;s:55:"Determine if current DirectoryIterator item can be read";i:3;s:50:"public bool DirectoryIterator::isReadable ( void )";}
a:4:{i:0;s:29:"DirectoryIterator::isWritable";i:1;s:5:"PHP 5";i:2;s:61:"Determine if current DirectoryIterator item can be written to";i:3;s:50:"public bool DirectoryIterator::isWritable ( void )";}
a:4:{i:0;s:22:"DirectoryIterator::key";i:1;s:5:"PHP 5";i:2;s:53:"Return the key for the current DirectoryIterator item";i:3;s:45:"public string DirectoryIterator::key ( void )";}
a:4:{i:0;s:23:"DirectoryIterator::next";i:1;s:5:"PHP 5";i:2;s:43:"Move forward to next DirectoryIterator item";i:3;s:44:"public void DirectoryIterator::next ( void )";}
a:4:{i:0;s:25:"DirectoryIterator::rewind";i:1;s:5:"PHP 5";i:2;s:46:"Rewind the DirectoryIterator back to the start";i:3;s:46:"public void DirectoryIterator::rewind ( void )";}
a:4:{i:0;s:23:"DirectoryIterator::seek";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:32:"Seek to a DirectoryIterator item";i:3;s:53:"public void DirectoryIterator::seek ( int $position )";}
a:4:{i:0;s:29:"DirectoryIterator::__toString";i:1;s:5:"PHP 5";i:2;s:25:"Get file name as a string";i:3;s:52:"public string DirectoryIterator::__toString ( void )";}
a:4:{i:0;s:24:"DirectoryIterator::valid";i:1;s:5:"PHP 5";i:2;s:64:"Check whether current DirectoryIterator position is a valid file";i:3;s:45:"public bool DirectoryIterator::valid ( void )";}
a:4:{i:0;s:31:"FilesystemIterator::__construct";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:36:"Constructs a new filesystem iterator";i:3;s:0:"";}
a:4:{i:0;s:27:"FilesystemIterator::current";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:16:"The current file";i:3;s:49:"public mixed FilesystemIterator::current ( void )";}
a:4:{i:0;s:28:"FilesystemIterator::getFlags";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:22:"Get the handling flags";i:3;s:46:"public string FilesystemIterator::key ( void )";}
a:4:{i:0;s:24:"FilesystemIterator::next";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:21:"Move to the next file";i:3;s:45:"public void FilesystemIterator::next ( void )";}
a:4:{i:0;s:26:"FilesystemIterator::rewind";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:29:"Rewinds back to the beginning";i:3;s:47:"public void FilesystemIterator::rewind ( void )";}
a:4:{i:0;s:28:"FilesystemIterator::setFlags";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:19:"Sets handling flags";i:3;s:58:"public void FilesystemIterator::setFlags ([ int $flags ] )";}
a:4:{i:0;s:22:"FilterIterator::accept";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:63:"Check whether the current element of the iterator is acceptable";i:3;s:45:"abstract bool FilterIterator::accept ( void )";}
a:4:{i:0;s:27:"FilterIterator::__construct";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:26:"Construct a filterIterator";i:3;s:35:"bool FilterIterator::valid ( void )";}
a:4:{i:0;s:25:"GlobIterator::__construct";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:32:"Construct a directory using glob";i:3;s:0:"";}
a:4:{i:0;s:19:"GlobIterator::count";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:39:"Get the number of directories and files";i:3;s:43:"public integer GlobIterator::count ( void )";}
a:4:{i:0;s:29:"InfiniteIterator::__construct";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:30:"Constructs an InfiniteIterator";i:3;s:52:"InfiniteIterator::__construct ( Iterator $iterator )";}
a:4:{i:0;s:22:"InfiniteIterator::next";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:46:"Moves the inner Iterator forward or rewinds it";i:3;s:43:"public void InfiniteIterator::next ( void )";}
a:4:{i:0;s:29:"IteratorIterator::__construct";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:52:"Create an iterator from anything that is traversable";i:3;s:44:"public bool IteratorIterator::valid ( void )";}
a:4:{i:0;s:26:"LimitIterator::__construct";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:25:"Construct a LimitIterator";i:3;s:90:"LimitIterator::__construct ( Iterator $iterator [, int $offset = 0 [, int $count = -1 ]] )";}
a:4:{i:0;s:22:"LimitIterator::current";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:19:"Get current element";i:3;s:46:"public int LimitIterator::getPosition ( void )";}
a:4:{i:0;s:18:"LimitIterator::key";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:15:"Get current key";i:3;s:41:"public bool LimitIterator::valid ( void )";}
a:4:{i:0;s:32:"MultipleIterator::attachIterator";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:29:"Attaches iterator information";i:3;s:44:"public void MultipleIterator::valid ( void )";}
a:4:{i:0;s:29:"NoRewindIterator::__construct";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:28:"Construct a NoRewindIterator";i:3;s:52:"NoRewindIterator::__construct ( Iterator $iterator )";}
a:4:{i:0;s:25:"NoRewindIterator::current";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:21:"Get the current value";i:3;s:45:"public void NoRewindIterator::rewind ( void )";}
a:4:{i:0;s:23:"NoRewindIterator::valid";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:22:"Validates the iterator";i:3;s:44:"public bool NoRewindIterator::valid ( void )";}
a:4:{i:0;s:22:"ParentIterator::accept";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:24:"Determines acceptability";i:3;s:43:"public bool ParentIterator::accept ( void )";}
a:4:{i:0;s:27:"ParentIterator::__construct";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:27:"Constructs a ParentIterator";i:3;s:36:"void ParentIterator::rewind ( void )";}
a:4:{i:0;s:35:"RecursiveArrayIterator::hasChildren";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:55:"Returns whether current entry is an array or an object.";i:3;s:56:"public bool RecursiveArrayIterator::hasChildren ( void )";}
a:4:{i:0;s:37:"RecursiveCachingIterator::__construct";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:9:"Construct";i:3;s:51:"bool RecursiveCachingIterator::hasChildren ( void )";}
a:4:{i:0;s:39:"RecursiveDirectoryIterator::__construct";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:39:"Constructs a RecursiveDirectoryIterator";i:3;s:0:"";}
a:4:{i:0;s:39:"RecursiveDirectoryIterator::getChildren";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:62:"Returns an iterator for the current entry if it is a directory";i:3;s:48:"void RecursiveDirectoryIterator::rewind ( void )";}
a:4:{i:0;s:36:"RecursiveFilterIterator::__construct";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:57:"Create a RecursiveFilterIterator from a RecursiveIterator";i:3;s:68:"RecursiveFilterIterator::__construct ( RecursiveIterator $iterator )";}
a:4:{i:0;s:40:"RecursiveIteratorIterator::beginChildren";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:14:"Begin children";i:3;s:46:"bool RecursiveIteratorIterator::valid ( void )";}
a:4:{i:0;s:35:"RecursiveRegexIterator::__construct";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:37:"Creates a new RecursiveRegexIterator.";i:3;s:142:"public RecursiveRegexIterator::__construct() ( RecursiveIterator $iterator , string $regex [, int $mode [, int $flags [, int $preg_flags ]]] )";}
a:4:{i:0;s:35:"RecursiveRegexIterator::getChildren";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:42:"Returns an iterator for the current entry.";i:3;s:74:"public RecursiveRegexIterator RecursiveRegexIterator::getChildren ( void )";}
a:4:{i:0;s:35:"RecursiveRegexIterator::hasChildren";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:66:"Returns whether an iterator can be obtained for the current entry.";i:3;s:56:"public bool RecursiveRegexIterator::hasChildren ( void )";}
a:4:{i:0;s:36:"RecursiveTreeIterator::beginChildren";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:14:"Begin children";i:3;s:0:"";}
a:4:{i:0;s:30:"RecursiveTreeIterator::current";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:19:"Get current element";i:3;s:78:"public void RecursiveTreeIterator::setPrefixPart ( int $part , string $value )";}
a:4:{i:0;s:28:"RecursiveTreeIterator::valid";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:14:"Check validity";i:3;s:49:"public bool RecursiveTreeIterator::valid ( void )";}
a:4:{i:0;s:21:"RegexIterator::accept";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:17:"Get accept status";i:3;s:42:"public bool RegexIterator::accept ( void )";}
a:4:{i:0;s:26:"RegexIterator::__construct";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:26:"Create a new RegexIterator";i:3;s:117:"RegexIterator::__construct() ( Iterator $iterator , string $regex [, int $mode [, int $flags [, int $preg_flags ]]] )";}
a:4:{i:0;s:23:"RegexIterator::getFlags";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:9:"Get flags";i:3;s:43:"public int RegexIterator::getFlags ( void )";}
a:4:{i:0;s:22:"RegexIterator::getMode";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:23:"Returns operation mode.";i:3;s:42:"public int RegexIterator::getMode ( void )";}
a:4:{i:0;s:27:"RegexIterator::getPregFlags";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:37:"Returns the regular expression flags.";i:3;s:47:"public int RegexIterator::getPregFlags ( void )";}
a:4:{i:0;s:23:"RegexIterator::setFlags";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:15:"Sets the flags.";i:3;s:50:"public void RegexIterator::setFlags ( int $flags )";}
a:4:{i:0;s:22:"RegexIterator::setMode";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:24:"Sets the operation mode.";i:3;s:48:"public void RegexIterator::setMode ( int $mode )";}
a:4:{i:0;s:27:"RegexIterator::setPregFlags";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:34:"Sets the regular expression flags.";i:3;s:59:"public void RegexIterator::setPregFlags ( int $preg_flags )";}
a:4:{i:0;s:26:"SimpleXMLIterator::current";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:27:"Returns the current element";i:3;s:48:"public mixed SimpleXMLIterator::current ( void )";}
a:4:{i:0;s:30:"SimpleXMLIterator::hasChildren";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:52:"Checks whether the current element has sub elements.";i:3;s:44:"bool SimpleXMLIterator::hasChildren ( void )";}
a:4:{i:0;s:22:"SimpleXMLIterator::key";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:18:"Return current key";i:3;s:37:"mixed SimpleXMLIterator::key ( void )";}
a:4:{i:0;s:23:"SimpleXMLIterator::next";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:20:"Move to next element";i:3;s:37:"void SimpleXMLIterator::next ( void )";}
a:4:{i:0;s:25:"SimpleXMLIterator::rewind";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:27:"Rewind to the first element";i:3;s:39:"void SimpleXMLIterator::rewind ( void )";}
a:4:{i:0;s:24:"SimpleXMLIterator::valid";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:42:"Check whether the current element is valid";i:3;s:38:"bool SimpleXMLIterator::valid ( void )";}
a:4:{i:0;s:16:"Countable::count";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:27:"Count elements of an object";i:3;s:45:"abstract public int Countable::count ( void )";}
a:4:{i:0;s:31:"OuterIterator::getInnerIterator";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:49:"Returns the inner iterator for the current entry.";i:3;s:56:"public Iterator OuterIterator::getInnerIterator ( void )";}
a:4:{i:0;s:30:"RecursiveIterator::getChildren";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:42:"Returns an iterator for the current entry.";i:3;s:51:"public bool RecursiveIterator::hasChildren ( void )";}
a:4:{i:0;s:22:"SeekableIterator::seek";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:19:"Seeks to a position";i:3;s:61:"abstract public void SeekableIterator::seek ( int $position )";}
a:4:{i:0;s:16:"class_implements";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:64:" Return the interfaces which are implemented by the given class ";i:3;s:66:"array class_implements ( mixed $class [, bool $autoload = true ] )";}
a:4:{i:0;s:13:"class_parents";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:46:" Return the parent classes of the given class ";i:3;s:63:"array class_parents ( mixed $class [, bool $autoload = true ] )";}
a:4:{i:0;s:14:"iterator_apply";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:48:"Call a function for every element in an iterator";i:3;s:82:"int iterator_apply ( Traversable $iterator , callback $function [, array $args ] )";}
a:4:{i:0;s:14:"iterator_count";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:33:"Count the elements in an iterator";i:3;s:44:"int iterator_count ( Traversable $iterator )";}
a:4:{i:0;s:17:"iterator_to_array";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:31:"Copy the iterator into an array";i:3;s:76:"array iterator_to_array ( Traversable $iterator [, bool $use_keys = true ] )";}
a:4:{i:0;s:23:"spl_autoload_extensions";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:60:"Register and return default file extensions for spl_autoload";i:3;s:110:"bool spl_autoload_register ([ callback $autoload_function [, bool $throw = true [, bool $prepend = false ]]] )";}
a:4:{i:0;s:11:"spl_classes";i:1;s:5:"PHP 5";i:2;s:28:"Return available SPL classes";i:3;s:26:"array spl_classes ( void )";}
a:4:{i:0;s:15:"spl_object_hash";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:33:" Return hash id for given object ";i:3;s:38:"string spl_object_hash ( object $obj )";}
a:4:{i:0;s:24:"SplFileInfo::__construct";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:34:"Construct a new SplFileInfo object";i:3;s:46:"SplFileInfo::__construct ( string $file_name )";}
a:4:{i:0;s:21:"SplFileInfo::getATime";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:33:"Gets last access time of the file";i:3;s:60:"public string SplFileInfo::getBasename ([ string $suffix ] )";}
a:4:{i:0;s:21:"SplFileInfo::getCTime";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:26:"Gets the inode change time";i:3;s:41:"public int SplFileInfo::getCTime ( void )";}
a:4:{i:0;s:24:"SplFileInfo::getFileInfo";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:39:"Gets an SplFileInfo object for the file";i:3;s:47:"public string SplFileInfo::getFilename ( void )";}
a:4:{i:0;s:21:"SplFileInfo::getGroup";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:19:"Gets the file group";i:3;s:41:"public int SplFileInfo::getGroup ( void )";}
a:4:{i:0;s:21:"SplFileInfo::getInode";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:27:"Gets the inode for the file";i:3;s:49:"public string SplFileInfo::getLinkTarget ( void )";}
a:4:{i:0;s:21:"SplFileInfo::getMTime";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:27:"Gets the last modified time";i:3;s:41:"public int SplFileInfo::getOwner ( void )";}
a:4:{i:0;s:20:"SplFileInfo::getPath";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:30:"Gets the path without filename";i:3;s:43:"public string SplFileInfo::getPath ( void )";}
a:4:{i:0;s:24:"SplFileInfo::getPathInfo";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:39:"Gets an SplFileInfo object for the path";i:3;s:69:"public SplFileInfo SplFileInfo::getPathInfo ([ string $class_name ] )";}
a:4:{i:0;s:24:"SplFileInfo::getPathname";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:25:"Gets the path to the file";i:3;s:47:"public string SplFileInfo::getPathname ( void )";}
a:4:{i:0;s:21:"SplFileInfo::getPerms";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:21:"Gets file permissions";i:3;s:41:"public int SplFileInfo::getPerms ( void )";}
a:4:{i:0;s:24:"SplFileInfo::getRealPath";i:1;s:14:"PHP 5 >= 5.2.2";i:2;s:26:"Gets absolute path to file";i:3;s:47:"public string SplFileInfo::getRealPath ( void )";}
a:4:{i:0;s:20:"SplFileInfo::getSize";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:14:"Gets file size";i:3;s:43:"public string SplFileInfo::getType ( void )";}
a:4:{i:0;s:18:"SplFileInfo::isDir";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:32:"Tells if the file is a directory";i:3;s:39:"public bool SplFileInfo::isDir ( void )";}
a:4:{i:0;s:25:"SplFileInfo::isExecutable";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:31:"Tells if the file is executable";i:3;s:46:"public bool SplFileInfo::isExecutable ( void )";}
a:4:{i:0;s:19:"SplFileInfo::isFile";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:45:"Tells if the object references a regular file";i:3;s:40:"public bool SplFileInfo::isFile ( void )";}
a:4:{i:0;s:19:"SplFileInfo::isLink";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:27:"Tells if the file is a link";i:3;s:40:"public bool SplFileInfo::isLink ( void )";}
a:4:{i:0;s:23:"SplFileInfo::isReadable";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:25:"Tells if file is readable";i:3;s:44:"public bool SplFileInfo::isReadable ( void )";}
a:4:{i:0;s:23:"SplFileInfo::isWritable";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:30:"Tells if the entry is writable";i:3;s:135:"public SplFileObject SplFileInfo::openFile ([ string $open_mode = r [, bool $use_include_path = false [, resource $context = NULL ]]] )";}
a:4:{i:0;s:25:"SplFileInfo::setInfoClass";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:52:"Sets the class used with getFileInfo and getPathInfo";i:3;s:63:"public void SplFileInfo::setInfoClass ([ string $class_name ] )";}
a:4:{i:0;s:23:"SplFileInfo::__toString";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:40:"Returns the path to the file as a string";i:3;s:44:"public void SplFileInfo::__toString ( void )";}
a:4:{i:0;s:26:"SplFileObject::__construct";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:28:"Construct a new file object.";i:3;s:133:"SplFileObject::__construct ( string $filename [, string $open_mode = "r" [, bool $use_include_path = false [, resource $context ]]] )";}
a:4:{i:0;s:22:"SplFileObject::current";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:29:"Retrieve current line of file";i:3;s:0:"";}
a:4:{i:0;s:18:"SplFileObject::eof";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:19:"Reached end of file";i:3;s:42:"public boolean SplFileObject::eof ( void )";}
a:4:{i:0;s:21:"SplFileObject::fflush";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:30:"Flushes the output to the file";i:3;s:45:"public boolean SplFileObject::fflush ( void )";}
a:4:{i:0;s:20:"SplFileObject::fgetc";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:24:"Gets character from file";i:3;s:43:"public string SplFileObject::fgetc ( void )";}
a:4:{i:0;s:22:"SplFileObject::fgetcsv";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:43:"Gets line from file and parse as CSV fields";i:3;s:0:"";}
a:4:{i:0;s:20:"SplFileObject::fgets";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:19:"Gets line from file";i:3;s:43:"public string SplFileObject::fgets ( void )";}
a:4:{i:0;s:21:"SplFileObject::fgetss";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:39:"Gets line from file and strip HTML tags";i:3;s:65:"public string SplFileObject::fgetss ([ string $allowable_tags ] )";}
a:4:{i:0;s:20:"SplFileObject::flock";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:21:"Portable file locking";i:3;s:73:"public bool SplFileObject::flock ( int $operation [, int &$wouldblock ] )";}
a:4:{i:0;s:24:"SplFileObject::fpassthru";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:43:"Output all remaining data on a file pointer";i:3;s:44:"public int SplFileObject::fpassthru ( void )";}
a:4:{i:0;s:21:"SplFileObject::fscanf";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:44:"Parses input from file according to a format";i:3;s:70:"public mixed SplFileObject::fscanf ( string $format [, mixed &$... ] )";}
a:4:{i:0;s:20:"SplFileObject::fseek";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:18:"Seek to a position";i:3;s:75:"public int SplFileObject::fseek ( int $offset [, int $whence = SEEK_SET ] )";}
a:4:{i:0;s:20:"SplFileObject::fstat";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:31:"Gets information about the file";i:3;s:42:"public array SplFileObject::fstat ( void )";}
a:4:{i:0;s:20:"SplFileObject::ftell";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:28:"Return current file position";i:3;s:40:"public int SplFileObject::ftell ( void )";}
a:4:{i:0;s:24:"SplFileObject::ftruncate";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:36:"Truncates the file to a given length";i:3;s:50:"public bool SplFileObject::ftruncate ( int $size )";}
a:4:{i:0;s:21:"SplFileObject::fwrite";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:13:"Write to file";i:3;s:65:"public int SplFileObject::fwrite ( string $str [, int $length ] )";}
a:4:{i:0;s:26:"SplFileObject::getChildren";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:10:"No purpose";i:3;s:50:"public array SplFileObject::getCsvControl ( void )";}
a:4:{i:0;s:23:"SplFileObject::getFlags";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:32:"Gets flags for the SplFileObject";i:3;s:43:"public int SplFileObject::getFlags ( void )";}
a:4:{i:0;s:28:"SplFileObject::getMaxLineLen";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:23:"Get maximum line length";i:3;s:48:"public int SplFileObject::getMaxLineLen ( void )";}
a:4:{i:0;s:26:"SplFileObject::hasChildren";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:36:"SplFileObject does not have children";i:3;s:38:"public int SplFileObject::key ( void )";}
a:4:{i:0;s:19:"SplFileObject::next";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:14:"Read next line";i:3;s:40:"public void SplFileObject::next ( void )";}
a:4:{i:0;s:21:"SplFileObject::rewind";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:33:"Rewind the file to the first line";i:3;s:42:"public void SplFileObject::rewind ( void )";}
a:4:{i:0;s:19:"SplFileObject::seek";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:22:"Seek to specified line";i:3;s:49:"public void SplFileObject::seek ( int $line_pos )";}
a:4:{i:0;s:28:"SplFileObject::setCsvControl";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:49:"Set the delimiter and enclosure character for CSV";i:3;s:0:"";}
a:4:{i:0;s:23:"SplFileObject::setFlags";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:32:"Sets flags for the SplFileObject";i:3;s:50:"public void SplFileObject::setFlags ( int $flags )";}
a:4:{i:0;s:28:"SplFileObject::setMaxLineLen";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:23:"Set maximum line length";i:3;s:57:"public void SplFileObject::setMaxLineLen ( int $max_len )";}
a:4:{i:0;s:20:"SplFileObject::valid";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:10:"Not at EOF";i:3;s:41:"public bool SplFileObject::valid ( void )";}
a:4:{i:0;s:30:"SplTempFileObject::__construct";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:37:"Construct a new temporary file object";i:3;s:57:"SplTempFileObject::__construct ([ integer $max_memory ] )";}
a:4:{i:0;s:19:"ArrayObject::append";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:17:"Appends the value";i:3;s:41:"void ArrayObject::append ( mixed $value )";}
a:4:{i:0;s:18:"ArrayObject::asort";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:25:"Sort the entries by value";i:3;s:32:"void ArrayObject::asort ( void )";}
a:4:{i:0;s:24:"ArrayObject::__construct";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:28:"Construct a new array object";i:3;s:88:"ArrayObject::__construct() ([ mixed $input [, int $flags [, string $iterator_class ]]] )";}
a:4:{i:0;s:18:"ArrayObject::count";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:54:"Get the number of public properties in the ArrayObject";i:3;s:31:"int ArrayObject::count ( void )";}
a:4:{i:0;s:26:"ArrayObject::exchangeArray";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:35:"Exchange the array for another one.";i:3;s:49:"array ArrayObject::exchangeArray ( mixed $input )";}
a:4:{i:0;s:25:"ArrayObject::getArrayCopy";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:34:"Creates a copy of the ArrayObject.";i:3;s:40:"array ArrayObject::getArrayCopy ( void )";}
a:4:{i:0;s:21:"ArrayObject::getFlags";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:24:"Gets the behavior flags.";i:3;s:34:"int ArrayObject::getFlags ( void )";}
a:4:{i:0;s:24:"ArrayObject::getIterator";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:50:"Create a new iterator from an ArrayObject instance";i:3;s:47:"ArrayIterator ArrayObject::getIterator ( void )";}
a:4:{i:0;s:29:"ArrayObject::getIteratorClass";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:48:"Gets the iterator classname for the ArrayObject.";i:3;s:52:"public string ArrayObject::getIteratorClass ( void )";}
a:4:{i:0;s:18:"ArrayObject::ksort";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:23:"Sort the entries by key";i:3;s:32:"void ArrayObject::ksort ( void )";}
a:4:{i:0;s:25:"ArrayObject::offsetExists";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:42:"Returns whether the requested index exists";i:3;s:47:"bool ArrayObject::offsetExists ( mixed $index )";}
a:4:{i:0;s:22:"ArrayObject::offsetGet";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:40:"Returns the value at the specified index";i:3;s:45:"mixed ArrayObject::offsetGet ( mixed $index )";}
a:4:{i:0;s:22:"ArrayObject::offsetSet";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:47:"Sets the value at the specified index to newval";i:3;s:60:"void ArrayObject::offsetSet ( mixed $index , mixed $newval )";}
a:4:{i:0;s:24:"ArrayObject::offsetUnset";i:1;s:14:"PHP 5 >= 5.0.0";i:2;s:39:"Unsets the value at the specified index";i:3;s:46:"void ArrayObject::offsetUnset ( mixed $index )";}
a:4:{i:0;s:22:"ArrayObject::serialize";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:24:"Serialize an ArrayObject";i:3;s:43:"public void ArrayObject::serialize ( void )";}
a:4:{i:0;s:21:"ArrayObject::setFlags";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:24:"Sets the behavior flags.";i:3;s:41:"void ArrayObject::setFlags ( int $flags )";}
a:4:{i:0;s:29:"ArrayObject::setIteratorClass";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:48:"Sets the iterator classname for the ArrayObject.";i:3;s:61:"void ArrayObject::setIteratorClass ( string $iterator_class )";}
a:4:{i:0;s:24:"ArrayObject::unserialize";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:26:"Unserialize an ArrayObject";i:3;s:59:"public void ArrayObject::unserialize ( string $serialized )";}
a:4:{i:0;s:19:"SplObserver::update";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:27:"Receive update from subject";i:3;s:64:"abstract public void SplObserver::update ( SplSubject $subject )";}
a:4:{i:0;s:18:"SplSubject::attach";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:21:"Attach an SplObserver";i:3;s:48:"abstract public void SplSubject::notify ( void )";}
a:4:{i:0;s:19:"SplInt::__construct";i:1;s:23:"PECL spl_types >= 0.1.0";i:2;s:33:"Constructs an integer object type";i:3;s:40:"SplInt::__construct() ( integer $input )";}
a:4:{i:0;s:21:"SplFloat::__construct";i:1;s:23:"PECL spl_types >= 0.1.0";i:2;s:30:"Constructs a float object type";i:3;s:40:"SplFloat::__construct() ( float $input )";}
a:4:{i:0;s:20:"SplEnum::__construct";i:1;s:23:"PECL spl_types >= 0.1.0";i:2;s:34:"Constructs an enumeger object type";i:3;s:31:"SplEnum::__construct() ( void )";}
a:4:{i:0;s:20:"SplBool::__construct";i:1;s:23:"PECL spl_types >= 0.1.0";i:2;s:29:"Constructs a bool object type";i:3;s:31:"SplBool::__construct() ( void )";}
a:4:{i:0;s:22:"SplString::__construct";i:1;s:23:"PECL spl_types >= 0.1.0";i:2;s:31:"Constructs a string object type";i:3;s:42:"SplString::__construct() ( string $input )";}
a:4:{i:0;s:26:"streamWrapper::__construct";i:1;s:21:"PHP 4 >= 4.3.2, PHP 5";i:2;s:31:"Constructs a new stream wrapper";i:3;s:49:"public string streamWrapper::dir_readdir ( void )";}
a:4:{i:0;s:28:"streamWrapper::dir_rewinddir";i:1;s:21:"PHP 4 >= 4.3.2, PHP 5";i:2;s:23:"Rewind directory handle";i:3;s:66:"public array streamWrapper::url_stat ( string $path , int $flags )";}
a:4:{i:0;s:20:"stream_bucket_append";i:1;s:5:"PHP 5";i:2;s:26:" Append bucket to brigade ";i:3;s:70:"resource stream_context_create ([ array $options [, array $params ]] )";}
a:4:{i:0;s:26:"stream_context_get_default";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:36:"Retreive the default streams context";i:3;s:57:"resource stream_context_get_default ([ array $options ] )";}
a:4:{i:0;s:25:"stream_context_get_params";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:35:"Retrieves parameters from a context";i:3;s:63:"array stream_context_get_params ( resource $stream_or_context )";}
a:4:{i:0;s:26:"stream_context_set_default";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:31:"Set the default streams context";i:3;s:54:"resource stream_context_set_default ( array $options )";}
a:4:{i:0;s:21:"stream_copy_to_stream";i:1;s:5:"PHP 5";i:2;s:38:"Copies data from one stream to another";i:3;s:108:"int stream_copy_to_stream ( resource $source , resource $dest [, int $maxlength = -1 [, int $offset = 0 ]] )";}
a:4:{i:0;s:15:"stream_encoding";i:1;s:54:"No version information available, might only be in SVN";i:2;s:37:"Set character set for stream encoding";i:3;s:110:"resource stream_filter_append ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] )";}
a:4:{i:0;s:21:"stream_filter_prepend";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:27:"Attach a filter to a stream";i:3;s:111:"resource stream_filter_prepend ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] )";}
a:4:{i:0;s:22:"stream_filter_register";i:1;s:5:"PHP 5";i:2;s:37:"Register a user defined stream filter";i:3;s:21:"void onClose ( void )";}
a:4:{i:0;s:20:"stream_filter_remove";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:29:"Remove a filter from a stream";i:3;s:53:"bool stream_filter_remove ( resource $stream_filter )";}
a:4:{i:0;s:19:"stream_get_contents";i:1;s:5:"PHP 5";i:2;s:41:"Reads remainder of a stream into a string";i:3;s:93:"string stream_get_contents ( resource $handle [, int $maxlength = -1 [, int $offset = -1 ]] )";}
a:4:{i:0;s:18:"stream_get_filters";i:1;s:5:"PHP 5";i:2;s:35:"Retrieve list of registered filters";i:3;s:33:"array stream_get_filters ( void )";}
a:4:{i:0;s:15:"stream_get_line";i:1;s:5:"PHP 5";i:2;s:54:"Gets line from stream resource up to a given delimiter";i:3;s:77:"string stream_get_line ( resource $handle , int $length [, string $ending ] )";}
a:4:{i:0;s:21:"stream_get_transports";i:1;s:5:"PHP 5";i:2;s:45:"Retrieve list of registered socket transports";i:3;s:36:"array stream_get_transports ( void )";}
a:4:{i:0;s:19:"stream_get_wrappers";i:1;s:5:"PHP 5";i:2;s:35:"Retrieve list of registered streams";i:3;s:34:"array stream_get_wrappers ( void )";}
a:4:{i:0;s:15:"stream_is_local";i:1;s:14:"PHP 5 >= 5.2.4";i:2;s:36:"Checks if a stream is a local stream";i:3;s:45:"bool stream_is_local ( mixed $stream_or_url )";}
a:4:{i:0;s:27:"stream_resolve_include_path";i:1;s:14:"PHP 5 >= 5.3.2";i:2;s:43:" Resolve filename against the include path ";i:3;s:78:"string stream_resolve_include_path ( string $filename [, resource $context ] )";}
a:4:{i:0;s:22:"stream_set_read_buffer";i:1;s:14:"PHP 5 >= 5.3.3";i:2;s:43:"Set read file buffering on the given stream";i:3;s:86:"bool stream_set_timeout ( resource $stream , int $seconds [, int $microseconds = 0 ] )";}
a:4:{i:0;s:23:"stream_set_write_buffer";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:45:"Sets write file buffering on the given stream";i:3;s:62:"int stream_set_write_buffer ( resource $stream , int $buffer )";}
a:4:{i:0;s:20:"stream_socket_client";i:1;s:5:"PHP 5";i:2;s:46:"Open Internet or Unix domain socket connection";i:3;s:208:"resource stream_socket_client ( string $remote_socket [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") [, int $flags = STREAM_CLIENT_CONNECT [, resource $context ]]]]] )";}
a:4:{i:0;s:22:"stream_socket_get_name";i:1;s:5:"PHP 5";i:2;s:48:"Retrieve the name of the local or remote sockets";i:3;s:68:"array stream_socket_pair ( int $domain , int $type , int $protocol )";}
a:4:{i:0;s:20:"stream_socket_server";i:1;s:5:"PHP 5";i:2;s:47:"Create an Internet or Unix domain server socket";i:3;s:0:"";}
a:4:{i:0;s:20:"stream_supports_lock";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:42:"Tells whether the stream supports locking.";i:3;s:89:"bool stream_wrapper_register ( string $protocol , string $classname [, int $flags = 0 ] )";}
a:4:{i:0;s:25:"stream_wrapper_unregister";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:24:"Unregister a URL wrapper";i:3;s:51:"bool stream_wrapper_unregister ( string $protocol )";}
a:4:{i:0;s:19:"tidyNode::getParent";i:1;s:14:"PHP 5 >= 5.2.2";i:2;s:43:"Returns the parent node of the current node";i:3;s:37:"tidyNode tidyNode::getParent ( void )";}
a:4:{i:0;s:21:"tidyNode::hasChildren";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:29:"Checks if a node has children";i:3;s:35:"bool tidyNode::hasChildren ( void )";}
a:4:{i:0;s:21:"tidyNode::hasSiblings";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:29:"Checks if a node has siblings";i:3;s:35:"bool tidyNode::hasSiblings ( void )";}
a:4:{i:0;s:15:"tidyNode::isAsp";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:26:"Checks if this node is ASP";i:3;s:29:"bool tidyNode::isAsp ( void )";}
a:4:{i:0;s:19:"tidyNode::isComment";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:37:"Checks if a node represents a comment";i:3;s:33:"bool tidyNode::isComment ( void )";}
a:4:{i:0;s:16:"tidyNode::isHtml";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:43:"Checks if a node is part of a HTML document";i:3;s:30:"bool tidyNode::isHtml ( void )";}
a:4:{i:0;s:16:"tidyNode::isJste";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:27:"Checks if this node is JSTE";i:3;s:30:"bool tidyNode::isJste ( void )";}
a:4:{i:0;s:15:"tidyNode::isPhp";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:23:"Checks if a node is PHP";i:3;s:29:"bool tidyNode::isPhp ( void )";}
a:4:{i:0;s:14:"ob_tidyhandler";i:1;s:5:"PHP 5";i:2;s:47:"ob_start callback function to repair the buffer";i:3;s:54:"string ob_tidyhandler ( string $input [, int $mode ] )";}
a:4:{i:0;s:17:"tidy_access_count";i:1;s:25:"PHP 5, PECL tidy >= 0.5.2";i:2;s:84:"Returns the Number of Tidy accessibility warnings encountered for specified document";i:3;s:38:"int tidy_access_count ( tidy $object )";}
a:4:{i:0;s:17:"tidy_config_count";i:1;s:25:"PHP 5, PECL tidy >= 0.5.2";i:2;s:82:"Returns the Number of Tidy configuration errors encountered for specified document";i:3;s:38:"int tidy_config_count ( tidy $object )";}
a:4:{i:0;s:16:"tidy_error_count";i:1;s:25:"PHP 5, PECL tidy >= 0.5.2";i:2;s:68:"Returns the Number of Tidy errors encountered for specified document";i:3;s:37:"int tidy_error_count ( tidy $object )";}
a:4:{i:0;s:21:"tidy_get_error_buffer";i:1;s:25:"PHP 5, PECL tidy >= 0.5.2";i:2;s:72:"Return warnings and errors which occurred parsing the specified document";i:3;s:45:"string tidy_get_error_buffer ( tidy $object )";}
a:4:{i:0;s:15:"tidy_get_output";i:1;s:25:"PHP 5, PECL tidy >= 0.5.2";i:2;s:51:"Return a string representing the parsed tidy markup";i:3;s:39:"string tidy_get_output ( tidy $object )";}
a:4:{i:0;s:16:"tidy_load_config";i:1;s:18:"PECL tidy >= 0.5.2";i:2;s:65:"Load an ASCII Tidy configuration file with the specified encoding";i:3;s:50:"bool tidy_setopt ( string $option , mixed $value )";}
a:4:{i:0;s:18:"tidy_warning_count";i:1;s:25:"PHP 5, PECL tidy >= 0.5.2";i:2;s:70:"Returns the Number of Tidy warnings encountered for specified document";i:3;s:39:"int tidy_warning_count ( tidy $object )";}
a:4:{i:0;s:13:"token_get_all";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:34:"Split given source into PHP tokens";i:3;s:38:"array token_get_all ( string $source )";}
a:4:{i:0;s:10:"token_name";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:42:"Get the symbolic name of a given PHP token";i:3;s:32:"string token_name ( int $token )";}
a:4:{i:0;s:13:"base64_decode";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Decodes data encoded with MIME base64";i:3;s:63:"string base64_decode ( string $data [, bool $strict = false ] )";}
a:4:{i:0;s:13:"base64_encode";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Encodes data with MIME base64";i:3;s:37:"string base64_encode ( string $data )";}
a:4:{i:0;s:11:"get_headers";i:1;s:5:"PHP 5";i:2;s:72:"Fetches all the headers sent by the server in response to a HTTP request";i:3;s:54:"array get_headers ( string $url [, int $format = 0 ] )";}
a:4:{i:0;s:13:"get_meta_tags";i:1;s:12:"PHP 4, PHP 5";i:2;s:73:"Extracts all meta tag content attributes from a file and returns an array";i:3;s:76:"array get_meta_tags ( string $filename [, bool $use_include_path = false ] )";}
a:4:{i:0;s:9:"parse_url";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Parse a URL and return its components";i:3;s:56:"mixed parse_url ( string $url [, int $component = -1 ] )";}
a:4:{i:0;s:14:"yaml_emit_file";i:1;s:18:"PECL yaml >= 0.5.0";i:2;s:49:"Send the YAML representation of a value to a file";i:3;s:107:"string yaml_emit ( mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK ]] )";}
a:4:{i:0;s:15:"yaml_parse_file";i:1;s:18:"PECL yaml >= 0.4.0";i:2;s:31:"Parse a YAML stream from a file";i:3;s:89:"mixed yaml_parse ( string $input [, int $pos = 0 [, int &$ndocs [, array $callbacks ]]] )";}
a:4:{i:0;s:27:"AMQPConnection::__construct";i:1;s:20:"PECL amqp >= Unknown";i:2;s:36:"Create an instance of AMQPConnection";i:3;s:63:"AMQPConnection::__construct ([ array $credentials = array() ] )";}
a:4:{i:0;s:27:"AMQPConnection::isConnected";i:1;s:20:"PECL amqp >= Unknown";i:2;s:72:"Determine if the AMQPConnection object is still connected to the broker.";i:3;s:48:"public void AMQPConnection::isConnected ( void )";}
a:4:{i:0;s:18:"AMQPExchange::bind";i:1;s:20:"PECL amqp >= Unknown";i:2;s:16:"The bind purpose";i:3;s:140:"public void AMQPExchange::declare ([ string $exchange_name = "" [, string $exchange_type = AMQP_EX_TYPE_DIRECT [, string $flags = NULL ]]] )";}
a:4:{i:0;s:20:"AMQPExchange::delete";i:1;s:20:"PECL amqp >= Unknown";i:2;s:36:"Delete the exchange from the broker.";i:3;s:68:"public void AMQPExchange::delete ([ string $exchange_name = NULL ] )";}
a:4:{i:0;s:21:"AMQPExchange::publish";i:1;s:20:"PECL amqp >= Unknown";i:2;s:33:"Publish a message to an exchange.";i:3;s:75:"public void AMQPExchange::publish ( string $message , string $routing_key )";}
a:4:{i:0;s:14:"AMQPQueue::ack";i:1;s:54:"No version information available, might only be in SVN";i:2;s:36:"Acknowledge the receipt of a message";i:3;s:85:"public void AMQPQueue::unbind ( string $exchange_name [, string $routing_key = "" ] )";}
a:4:{i:0;s:9:"chdb::get";i:1;s:18:"PECL chdb >= 0.1.0";i:2;s:36:"Gets the value associated with a key";i:3;s:39:"public string chdb::get ( string $key )";}
a:4:{i:0;s:11:"chdb_create";i:1;s:18:"PECL chdb >= 0.1.0";i:2;s:19:"Creates a chdb file";i:3;s:51:"void chdb_create ( string $pathname , array $data )";}
a:4:{i:0;s:10:"curl_close";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:20:"Close a cURL session";i:3;s:32:"void curl_close ( resource $ch )";}
a:4:{i:0;s:16:"curl_copy_handle";i:1;s:5:"PHP 5";i:2;s:52:"Copy a cURL handle along with all of its preferences";i:3;s:42:"resource curl_copy_handle ( resource $ch )";}
a:4:{i:0;s:10:"curl_errno";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:28:"Return the last error number";i:3;s:31:"int curl_errno ( resource $ch )";}
a:4:{i:0;s:10:"curl_error";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:65:"Return a string containing the last error for the current session";i:3;s:34:"string curl_error ( resource $ch )";}
a:4:{i:0;s:9:"curl_exec";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:22:"Perform a cURL session";i:3;s:32:"mixed curl_exec ( resource $ch )";}
a:4:{i:0;s:12:"curl_getinfo";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:45:"Get information regarding a specific transfer";i:3;s:53:"mixed curl_getinfo ( resource $ch [, int $opt = 0 ] )";}
a:4:{i:0;s:9:"curl_init";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:25:"Initialize a cURL session";i:3;s:44:"resource curl_init ([ string $url = NULL ] )";}
a:4:{i:0;s:21:"curl_multi_add_handle";i:1;s:5:"PHP 5";i:2;s:47:"Add a normal cURL handle to a cURL multi handle";i:3;s:57:"int curl_multi_add_handle ( resource $mh , resource $ch )";}
a:4:{i:0;s:16:"curl_multi_close";i:1;s:5:"PHP 5";i:2;s:27:"Close a set of cURL handles";i:3;s:38:"void curl_multi_close ( resource $mh )";}
a:4:{i:0;s:20:"curl_multi_info_read";i:1;s:5:"PHP 5";i:2;s:43:"Get information about the current transfers";i:3;s:75:"array curl_multi_info_read ( resource $mh [, int &$msgs_in_queue = NULL ] )";}
a:4:{i:0;s:15:"curl_multi_init";i:1;s:5:"PHP 5";i:2;s:31:"Returns a new cURL multi handle";i:3;s:33:"resource curl_multi_init ( void )";}
a:4:{i:0;s:24:"curl_multi_remove_handle";i:1;s:5:"PHP 5";i:2;s:48:"Remove a multi handle from a set of cURL handles";i:3;s:56:"bool curl_setopt_array ( resource $ch , array $options )";}
a:4:{i:0;s:11:"curl_setopt";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:33:"Set an option for a cURL transfer";i:3;s:62:"bool curl_setopt ( resource $ch , int $option , mixed $value )";}
a:4:{i:0;s:12:"curl_version";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:29:"Gets cURL version information";i:3;s:52:"array curl_version ([ int $age = CURLVERSION_NOW ] )";}
a:4:{i:0;s:18:"fam_cancel_monitor";i:1;s:14:"PHP 5 <= 5.0.5";i:2;s:20:"Terminate monitoring";i:3;s:66:"bool fam_suspend_monitor ( resource $fam , resource $fam_monitor )";}
a:4:{i:0;s:9:"ftp_alloc";i:1;s:5:"PHP 5";i:2;s:41:"Allocates space for a file to be uploaded";i:3;s:76:"bool ftp_alloc ( resource $ftp_stream , int $filesize [, string &$result ] )";}
a:4:{i:0;s:8:"ftp_cdup";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"Changes to the parent directory";i:3;s:38:"bool ftp_cdup ( resource $ftp_stream )";}
a:4:{i:0;s:9:"ftp_chdir";i:1;s:12:"PHP 4, PHP 5";i:2;s:45:"Changes the current directory on a FTP server";i:3;s:59:"bool ftp_chdir ( resource $ftp_stream , string $directory )";}
a:4:{i:0;s:9:"ftp_chmod";i:1;s:5:"PHP 5";i:2;s:33:"Set permissions on a file via FTP";i:3;s:69:"int ftp_chmod ( resource $ftp_stream , int $mode , string $filename )";}
a:4:{i:0;s:9:"ftp_close";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:24:"Closes an FTP connection";i:3;s:39:"bool ftp_close ( resource $ftp_stream )";}
a:4:{i:0;s:11:"ftp_connect";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Opens an FTP connection";i:3;s:79:"resource ftp_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] )";}
a:4:{i:0;s:10:"ftp_delete";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Deletes a file on the FTP server";i:3;s:55:"bool ftp_delete ( resource $ftp_stream , string $path )";}
a:4:{i:0;s:8:"ftp_exec";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:49:"Requests execution of a command on the FTP server";i:3;s:56:"bool ftp_exec ( resource $ftp_stream , string $command )";}
a:4:{i:0;s:8:"ftp_fget";i:1;s:12:"PHP 4, PHP 5";i:2;s:62:"Downloads a file from the FTP server and saves to an open file";i:3;s:115:"bool ftp_fget ( resource $ftp_stream , resource $handle , string $remote_file , int $mode [, int $resumepos = 0 ] )";}
a:4:{i:0;s:8:"ftp_fput";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:"Uploads from an open file to the FTP server";i:3;s:114:"bool ftp_fput ( resource $ftp_stream , string $remote_file , resource $handle , int $mode [, int $startpos = 0 ] )";}
a:4:{i:0;s:14:"ftp_get_option";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:62:"Retrieves various runtime behaviours of the current FTP stream";i:3;s:59:"mixed ftp_get_option ( resource $ftp_stream , int $option )";}
a:4:{i:0;s:7:"ftp_get";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Downloads a file from the FTP server";i:3;s:116:"bool ftp_get ( resource $ftp_stream , string $local_file , string $remote_file , int $mode [, int $resumepos = 0 ] )";}
a:4:{i:0;s:9:"ftp_login";i:1;s:12:"PHP 4, PHP 5";i:2;s:28:"Logs in to an FTP connection";i:3;s:77:"bool ftp_login ( resource $ftp_stream , string $username , string $password )";}
a:4:{i:0;s:8:"ftp_mdtm";i:1;s:12:"PHP 4, PHP 5";i:2;s:48:"Returns the last modified time of the given file";i:3;s:59:"int ftp_mdtm ( resource $ftp_stream , string $remote_file )";}
a:4:{i:0;s:9:"ftp_mkdir";i:1;s:12:"PHP 4, PHP 5";i:2;s:19:"Creates a directory";i:3;s:61:"string ftp_mkdir ( resource $ftp_stream , string $directory )";}
a:4:{i:0;s:9:"ftp_nlist";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Returns a list of files in the given directory";i:3;s:60:"array ftp_nlist ( resource $ftp_stream , string $directory )";}
a:4:{i:0;s:8:"ftp_pasv";i:1;s:12:"PHP 4, PHP 5";i:2;s:28:"Turns passive mode on or off";i:3;s:51:"bool ftp_pasv ( resource $ftp_stream , bool $pasv )";}
a:4:{i:0;s:7:"ftp_put";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Uploads a file to the FTP server";i:3;s:115:"bool ftp_put ( resource $ftp_stream , string $remote_file , string $local_file , int $mode [, int $startpos = 0 ] )";}
a:4:{i:0;s:7:"ftp_pwd";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Returns the current directory name";i:3;s:39:"string ftp_pwd ( resource $ftp_stream )";}
a:4:{i:0;s:7:"ftp_raw";i:1;s:5:"PHP 5";i:2;s:43:"Sends an arbitrary command to an FTP server";i:3;s:56:"array ftp_raw ( resource $ftp_stream , string $command )";}
a:4:{i:0;s:11:"ftp_rawlist";i:1;s:12:"PHP 4, PHP 5";i:2;s:55:"Returns a detailed list of files in the given directory";i:3;s:91:"array ftp_rawlist ( resource $ftp_stream , string $directory [, bool $recursive = false ] )";}
a:4:{i:0;s:10:"ftp_rename";i:1;s:12:"PHP 4, PHP 5";i:2;s:47:"Renames a file or a directory on the FTP server";i:3;s:76:"bool ftp_rename ( resource $ftp_stream , string $oldname , string $newname )";}
a:4:{i:0;s:9:"ftp_rmdir";i:1;s:12:"PHP 4, PHP 5";i:2;s:19:"Removes a directory";i:3;s:59:"bool ftp_rmdir ( resource $ftp_stream , string $directory )";}
a:4:{i:0;s:14:"ftp_set_option";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:37:"Set miscellaneous runtime FTP options";i:3;s:73:"bool ftp_set_option ( resource $ftp_stream , int $option , mixed $value )";}
a:4:{i:0;s:8:"ftp_site";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Sends a SITE command to the server";i:3;s:56:"bool ftp_site ( resource $ftp_stream , string $command )";}
a:4:{i:0;s:8:"ftp_size";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Returns the size of the given file";i:3;s:59:"int ftp_size ( resource $ftp_stream , string $remote_file )";}
a:4:{i:0;s:11:"ftp_systype";i:1;s:12:"PHP 4, PHP 5";i:2;s:59:"Returns the system type identifier of the remote FTP server";i:3;s:43:"string ftp_systype ( resource $ftp_stream )";}
a:4:{i:0;s:25:"gupnp_context_get_host_ip";i:1;s:19:"PECL gupnp >= 0.1.0";i:2;s:18:"Get the IP address";i:3;s:54:"string gupnp_context_get_host_ip ( resource $context )";}
a:4:{i:0;s:22:"gupnp_context_get_port";i:1;s:19:"PECL gupnp >= 0.1.0";i:2;s:12:"Get the port";i:3;s:48:"int gupnp_context_get_port ( resource $context )";}
a:4:{i:0;s:38:"gupnp_context_get_subscription_timeout";i:1;s:19:"PECL gupnp >= 0.1.0";i:2;s:34:"Get the event subscription timeout";i:3;s:93:"bool gupnp_context_host_path ( resource $context , string $local_path , string $server_path )";}
a:4:{i:0;s:17:"gupnp_context_new";i:1;s:19:"PECL gupnp >= 0.1.0";i:2;s:20:"Create a new context";i:3;s:67:"resource gupnp_context_new ([ string $host_ip [, int $port = 0 ]] )";}
a:4:{i:0;s:38:"gupnp_context_set_subscription_timeout";i:1;s:19:"PECL gupnp >= 0.1.0";i:2;s:35:"Sets the event subscription timeout";i:3;s:101:"bool gupnp_context_timeout_add ( resource $context , int $timeout , mixed $callback [, mixed $arg ] )";}
a:4:{i:0;s:25:"gupnp_context_unhost_path";i:1;s:19:"PECL gupnp >= 0.1.0";i:2;s:12:"Stop hosting";i:3;s:58:"bool gupnp_control_point_browse_start ( resource $cpoint )";}
a:4:{i:0;s:31:"gupnp_control_point_browse_stop";i:1;s:19:"PECL gupnp >= 0.1.0";i:2;s:13:"Stop browsing";i:3;s:106:"bool gupnp_control_point_callback_set ( resource $cpoint , int $signal , mixed $callback [, mixed $arg ] )";}
a:4:{i:0;s:23:"gupnp_control_point_new";i:1;s:19:"PECL gupnp >= 0.1.0";i:2;s:26:"Create a new control point";i:3;s:79:"resource gupnp_device_info_get_service ( resource $root_device , string $type )";}
a:4:{i:0;s:21:"gupnp_device_info_get";i:1;s:19:"PECL gupnp >= 0.1.0";i:2;s:23:"Get info of root device";i:3;s:71:"resource gupnp_root_device_new ( resource $context , string $location )";}
a:4:{i:0;s:31:"gupnp_root_device_set_available";i:1;s:19:"PECL gupnp >= 0.1.0";i:2;s:43:"Set whether or not root_device is available";i:3;s:52:"bool gupnp_service_thaw_notify ( resource $service )";}
a:4:{i:0;s:15:"hw_Array2Objrec";i:1;s:5:"PHP 4";i:2;s:53:"Convert attributes from object array to object record";i:3;s:75:"mixed hw_getobject ( int $connection , mixed $objectID [, string $query ] )";}
a:4:{i:0;s:19:"hw_GetObjectByQuery";i:1;s:5:"PHP 4";i:2;s:13:"Search object";i:3;s:108:"bool hw_modifyobject ( int $connection , int $object_to_change , array $remove , array $add [, int $mode ] )";}
a:4:{i:0;s:5:"hw_mv";i:1;s:5:"PHP 4";i:2;s:13:"Moves objects";i:3;s:32:"array hw_who ( int $connection )";}
a:4:{i:0;s:16:"hw_api_attribute";i:1;s:36:"PHP 4, PHP 5 < 5.2.0, PECL hwapi SVN";i:2;s:42:"Creates instance of class hw_api_attribute";i:3;s:48:"hw_api_content hw_api::copy ( array $parameter )";}
a:4:{i:0;s:11:"hwapi_hgcsp";i:1;s:36:"PHP 4, PHP 5 < 5.2.0, PECL hwapi SVN";i:2;s:30:"Returns object of class hw_api";i:3;s:49:"hw_api_object hw_api::object ( array $parameter )";}
a:4:{i:0;s:30:"HttpDeflateStream::__construct";i:1;s:24:"PECL pecl_http >= 0.21.0";i:2;s:35:"HttpDeflateStream class constructor";i:3;s:56:"public string HttpDeflateStream::update ( string $data )";}
a:4:{i:0;s:30:"HttpInflateStream::__construct";i:1;s:23:"PECL pecl_http >= 1.0.0";i:2;s:35:"HttpInflateStream class constructor";i:3;s:56:"public string HttpInflateStream::update ( string $data )";}
a:4:{i:0;s:23:"HttpMessage::addHeaders";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:11:"Add headers";i:3;s:0:"";}
a:4:{i:0;s:21:"HttpMessage::toString";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:25:"Get string representation";i:3;s:71:"public string HttpMessage::toString ([ bool $include_parent = false ] )";}
a:4:{i:0;s:28:"HttpQueryString::__construct";i:1;s:24:"PECL pecl_http >= 0.22.0";i:2;s:27:"HttpQueryString constructor";i:3;s:88:"final public void HttpQueryString::__construct ([ bool $global = true [, mixed $add ]] )";}
a:4:{i:0;s:20:"HttpQueryString::mod";i:1;s:23:"PECL pecl_http >= 1.1.0";i:2;s:25:"Modifiy query string copy";i:3;s:83:"static public HttpQueryString HttpQueryString::singleton ([ bool $global = true ] )";}
a:4:{i:0;s:24:"HttpQueryString::toArray";i:1;s:24:"PECL pecl_http >= 0.22.0";i:2;s:25:"Get query string as array";i:3;s:62:"public bool HttpQueryString::xlate ( string $ie , string $oe )";}
a:4:{i:0;s:23:"HttpRequest::addCookies";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:11:"Add cookies";i:3;s:54:"public bool HttpRequest::addCookies ( array $cookies )";}
a:4:{i:0;s:23:"HttpRequest::addHeaders";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:11:"Add headers";i:3;s:50:"public array HttpRequest::getResponseData ( void )";}
a:4:{i:0;s:28:"HttpRequest::getResponseInfo";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:17:"Get response info";i:3;s:45:"public HttpMessage HttpRequest::send ( void )";}
a:4:{i:0;s:27:"HttpRequest::setContentType";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:16:"Set content type";i:3;s:47:"public bool HttpRequest::setUrl ( string $url )";}
a:4:{i:0;s:23:"HttpRequestPool::attach";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:18:"Attach HttpRequest";i:3;s:60:"public bool HttpRequestPool::attach ( HttpRequest $request )";}
a:4:{i:0;s:28:"HttpRequestPool::__construct";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:27:"HttpRequestPool constructor";i:3;s:61:"void HttpRequestPool::__construct ([ HttpRequest $request ] )";}
a:4:{i:0;s:27:"HttpRequestPool::__destruct";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:26:"HttpRequestPool destructor";i:3;s:54:"protected bool HttpRequestPool::socketPerform ( void )";}
a:4:{i:0;s:29:"HttpRequestPool::socketSelect";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:21:"Perform socket select";i:3;s:53:"protected bool HttpRequestPool::socketSelect ( void )";}
a:4:{i:0;s:21:"HttpResponse::capture";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:21:"Capture script output";i:3;s:42:"static void HttpResponse::capture ( void )";}
a:4:{i:0;s:27:"HttpResponse::getBufferSize";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:15:"Get buffer size";i:3;s:59:"static bool HttpResponse::send ([ bool $clean_ob = true ] )";}
a:4:{i:0;s:27:"HttpResponse::setBufferSize";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:15:"Set buffer size";i:3;s:50:"static bool HttpResponse::setCache ( bool $cache )";}
a:4:{i:0;s:29:"HttpResponse::setCacheControl";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:17:"Set cache control";i:3;s:48:"static bool HttpResponse::status ( int $status )";}
a:4:{i:0;s:15:"http_cache_etag";i:1;s:23:"PECL pecl_http >= 0.1.0";i:2;s:15:"Caching by ETag";i:3;s:40:"bool http_cache_etag ([ string $etag ] )";}
a:4:{i:0;s:24:"http_cache_last_modified";i:1;s:23:"PECL pecl_http >= 0.1.0";i:2;s:28:"Caching by last modification";i:3;s:62:"bool http_cache_last_modified ([ int $timestamp_or_expires ] )";}
a:4:{i:0;s:12:"http_deflate";i:1;s:24:"PECL pecl_http >= 0.15.0";i:2;s:12:"Deflate data";i:3;s:66:"bool http_match_etag ( string $etag [, bool $for_range = false ] )";}
a:4:{i:0;s:19:"http_match_modified";i:1;s:23:"PECL pecl_http >= 0.1.0";i:2;s:23:"Match last modification";i:3;s:40:"int http_support ([ int $feature = 0 ] )";}
a:4:{i:0;s:22:"http_negotiate_charset";i:1;s:23:"PECL pecl_http >= 0.1.0";i:2;s:41:"Negotiate clients preferred character set";i:3;s:70:"string http_negotiate_charset ( array $supported [, array &$result ] )";}
a:4:{i:0;s:27:"http_negotiate_content_type";i:1;s:24:"PECL pecl_http >= 0.19.0";i:2;s:40:"Negotiate clients preferred content type";i:3;s:75:"string http_negotiate_content_type ( array $supported [, array &$result ] )";}
a:4:{i:0;s:23:"http_negotiate_language";i:1;s:23:"PECL pecl_http >= 0.1.0";i:2;s:36:"Negotiate clients preferred language";i:3;s:71:"string http_negotiate_language ( array $supported [, array &$result ] )";}
a:4:{i:0;s:17:"ob_deflatehandler";i:1;s:24:"PECL pecl_http >= 0.21.0";i:2;s:22:"Deflate output handler";i:3;s:85:"object http_parse_cookie ( string $cookie [, int $flags [, array $allowed_extras ]] )";}
a:4:{i:0;s:18:"http_parse_headers";i:1;s:24:"PECL pecl_http >= 0.10.0";i:2;s:18:"Parse HTTP headers";i:3;s:43:"array http_parse_headers ( string $header )";}
a:4:{i:0;s:18:"http_parse_message";i:1;s:24:"PECL pecl_http >= 0.12.0";i:2;s:19:"Parse HTTP messages";i:3;s:45:"object http_parse_message ( string $message )";}
a:4:{i:0;s:17:"http_parse_params";i:1;s:23:"PECL pecl_http >= 1.0.0";i:2;s:20:"Parse parameter list";i:3;s:80:"object http_parse_params ( string $param [, int $flags = HTTP_PARAMS_DEFAULT ] )";}
a:4:{i:0;s:29:"http_persistent_handles_clean";i:1;s:23:"PECL pecl_http >= 1.5.0";i:2;s:27:"Clean up persistent handles";i:3;s:45:"object http_persistent_handles_count ( void )";}
a:4:{i:0;s:8:"http_get";i:1;s:23:"PECL pecl_http >= 0.1.0";i:2;s:19:"Perform GET request";i:3;s:68:"string http_get ( string $url [, array $options [, array &$info ]] )";}
a:4:{i:0;s:9:"http_head";i:1;s:23:"PECL pecl_http >= 0.1.0";i:2;s:20:"Perform HEAD request";i:3;s:109:"string http_post_fields ( string $url [, array $data [, array $files [, array $options [, array &$info ]]]] )";}
a:4:{i:0;s:13:"http_put_data";i:1;s:24:"PECL pecl_http >= 0.25.0";i:2;s:29:"Perform PUT request with data";i:3;s:97:"void http_redirect ([ string $url [, array $params [, bool $session = false [, int $status ]]]] )";}
a:4:{i:0;s:14:"http_send_data";i:1;s:23:"PECL pecl_http >= 0.1.0";i:2;s:19:"Send arbitrary data";i:3;s:36:"bool http_send_file ( string $file )";}
a:4:{i:0;s:16:"http_send_status";i:1;s:23:"PECL pecl_http >= 0.1.0";i:2;s:25:"Send HTTP response status";i:3;s:59:"void http_throttle ([ float $sec [, int $bytes = 40960 ]] )";}
a:4:{i:0;s:14:"http_build_str";i:1;s:24:"PECL pecl_http >= 0.23.0";i:2;s:18:"Build query string";i:3;s:110:"string http_build_url ([ mixed $url [, mixed $parts [, int $flags = HTTP_URL_REPLACE [, array &$new_url ]]]] )";}
a:4:{i:0;s:25:"java_last_exception_clear";i:1;s:14:"PHP 4 >= 4.0.2";i:2;s:25:"Clear last Java exception";i:3;s:39:"object java_last_exception_get ( void )";}
a:4:{i:0;s:16:"ldap_8859_to_t61";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:43:"Translate 8859 characters to t61 characters";i:3;s:71:"bool ldap_add ( resource $link_identifier , string $dn , array $entry )";}
a:4:{i:0;s:9:"ldap_bind";i:1;s:12:"PHP 4, PHP 5";i:2;s:22:"Bind to LDAP directory";i:3;s:106:"bool ldap_bind ( resource $link_identifier [, string $bind_rdn = NULL [, string $bind_password = NULL ]] )";}
a:4:{i:0;s:12:"ldap_compare";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:59:"Compare value of attribute found in entry specified with DN";i:3;s:97:"mixed ldap_compare ( resource $link_identifier , string $dn , string $attribute , string $value )";}
a:4:{i:0;s:12:"ldap_connect";i:1;s:12:"PHP 4, PHP 5";i:2;s:25:"Connect to an LDAP server";i:3;s:72:"resource ldap_connect ([ string $hostname = NULL [, int $port = 389 ]] )";}
a:4:{i:0;s:18:"ldap_count_entries";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Count the number of entries in a search";i:3;s:34:"string ldap_err2str ( int $errno )";}
a:4:{i:0;s:10:"ldap_errno";i:1;s:12:"PHP 4, PHP 5";i:2;s:53:"Return the LDAP error number of the last LDAP command";i:3;s:44:"int ldap_errno ( resource $link_identifier )";}
a:4:{i:0;s:10:"ldap_error";i:1;s:12:"PHP 4, PHP 5";i:2;s:54:"Return the LDAP error message of the last LDAP command";i:3;s:47:"string ldap_error ( resource $link_identifier )";}
a:4:{i:0;s:15:"ldap_explode_dn";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Splits DN into its component parts";i:3;s:91:"array ldap_get_attributes ( resource $link_identifier , resource $result_entry_identifier )";}
a:4:{i:0;s:11:"ldap_get_dn";i:1;s:12:"PHP 4, PHP 5";i:2;s:28:"Get the DN of a result entry";i:3;s:81:"bool ldap_get_option ( resource $link_identifier , int $option , mixed &$retval )";}
a:4:{i:0;s:19:"ldap_get_values_len";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Get all binary values from a result entry";i:3;s:107:"array ldap_get_values ( resource $link_identifier , resource $result_entry_identifier , string $attribute )";}
a:4:{i:0;s:12:"ldap_mod_add";i:1;s:12:"PHP 4, PHP 5";i:2;s:42:"Add attribute values to current attributes";i:3;s:178:"resource ldap_read ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]] )";}
a:4:{i:0;s:11:"ldap_rename";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:27:"Modify the name of an entry";i:3;s:180:"resource ldap_search ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]] )";}
a:4:{i:0;s:15:"ldap_set_option";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:33:"Set the value of the given option";i:3;s:80:"bool ldap_set_option ( resource $link_identifier , int $option , mixed $newval )";}
a:4:{i:0;s:9:"ldap_sort";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:24:"Sort LDAP result entries";i:3;s:46:"bool ldap_unbind ( resource $link_identifier )";}
a:4:{i:0;s:13:"notes_copy_db";i:1;s:14:"PHP 4 >= 4.0.5";i:2;s:27:"Copy a Lotus Notes database";i:3;s:45:"float notes_version ( string $database_name )";}
a:4:{i:0;s:13:"Memcache::add";i:1;s:22:"PECL memcache >= 0.2.0";i:2;s:25:"Add an item to the server";i:3;s:78:"bool Memcache::add ( string $key , mixed $var [, int $flag [, int $expire ]] )";}
a:4:{i:0;s:19:"Memcache::addServer";i:1;s:22:"PECL memcache >= 2.0.0";i:2;s:41:"Add a memcached server to connection pool";i:3;s:209:"bool Memcache::addServer ( string $host [, int $port = 11211 [, bool $persistent [, int $weight [, int $timeout [, int $retry_interval [, bool $status [, callback $failure_callback [, int $timeoutms ]]]]]]]] )";}
a:4:{i:0;s:15:"Memcache::close";i:1;s:22:"PECL memcache >= 0.4.0";i:2;s:33:"Close memcached server connection";i:3;s:29:"bool Memcache::close ( void )";}
a:4:{i:0;s:17:"Memcache::connect";i:1;s:22:"PECL memcache >= 0.2.0";i:2;s:32:"Open memcached server connection";i:3;s:71:"bool Memcache::connect ( string $host [, int $port [, int $timeout ]] )";}
a:4:{i:0;s:16:"Memcache::delete";i:1;s:22:"PECL memcache >= 0.2.0";i:2;s:27:"Delete item from the server";i:3;s:55:"bool Memcache::delete ( string $key [, int $timeout ] )";}
a:4:{i:0;s:15:"Memcache::flush";i:1;s:22:"PECL memcache >= 1.0.0";i:2;s:38:"Flush all existing items at the server";i:3;s:29:"bool Memcache::flush ( void )";}
a:4:{i:0;s:13:"Memcache::get";i:1;s:22:"PECL memcache >= 0.2.0";i:2;s:29:"Retrieve item from the server";i:3;s:54:"array Memcache::get ( array $keys [, array &$flags ] )";}
a:4:{i:0;s:26:"Memcache::getExtendedStats";i:1;s:22:"PECL memcache >= 2.0.0";i:2;s:39:"Get statistics from all servers in pool";i:3;s:89:"array Memcache::getExtendedStats ([ string $type [, int $slabid [, int $limit = 100 ]]] )";}
a:4:{i:0;s:25:"Memcache::getServerStatus";i:1;s:22:"PECL memcache >= 2.1.0";i:2;s:21:"Returns server status";i:3;s:69:"int Memcache::getServerStatus ( string $host [, int $port = 11211 ] )";}
a:4:{i:0;s:18:"Memcache::getStats";i:1;s:22:"PECL memcache >= 0.2.0";i:2;s:28:"Get statistics of the server";i:3;s:81:"array Memcache::getStats ([ string $type [, int $slabid [, int $limit = 100 ]]] )";}
a:4:{i:0;s:20:"Memcache::getVersion";i:1;s:22:"PECL memcache >= 0.2.0";i:2;s:28:"Return version of the server";i:3;s:36:"string Memcache::getVersion ( void )";}
a:4:{i:0;s:18:"Memcache::pconnect";i:1;s:22:"PECL memcache >= 0.4.0";i:2;s:43:"Open memcached server persistent connection";i:3;s:72:"bool Memcache::pconnect ( string $host [, int $port [, int $timeout ]] )";}
a:4:{i:0;s:17:"Memcache::replace";i:1;s:22:"PECL memcache >= 0.2.0";i:2;s:34:"Replace value of the existing item";i:3;s:82:"bool Memcache::replace ( string $key , mixed $var [, int $flag [, int $expire ]] )";}
a:4:{i:0;s:13:"Memcache::set";i:1;s:22:"PECL memcache >= 0.2.0";i:2;s:24:"Store data at the server";i:3;s:78:"bool Memcache::set ( string $key , mixed $var [, int $flag [, int $expire ]] )";}
a:4:{i:0;s:30:"Memcache::setCompressThreshold";i:1;s:22:"PECL memcache >= 2.0.0";i:2;s:44:"Enable automatic compression of large values";i:3;s:78:"bool Memcache::setCompressThreshold ( int $threshold [, float $min_savings ] )";}
a:4:{i:0;s:25:"Memcache::setServerParams";i:1;s:22:"PECL memcache >= 2.1.0";i:2;s:47:"Changes server parameters and status at runtime";i:3;s:167:"bool Memcache::setServerParams ( string $host [, int $port = 11211 [, int $timeout [, int $retry_interval = false [, bool $status [, callback $failure_callback ]]]]] )";}
a:4:{i:0;s:14:"Memcached::add";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:27:"Add an item under a new key";i:3;s:82:"public bool Memcached::addServer ( string $host , int $port [, int $weight = 0 ] )";}
a:4:{i:0;s:21:"Memcached::addServers";i:1;s:23:"PECL memcached >= 0.1.1";i:2;s:39:"Add multiple servers to the server pool";i:3;s:52:"public bool Memcached::addServers ( array $servers )";}
a:4:{i:0;s:17:"Memcached::append";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:31:"Append data to an existing item";i:3;s:61:"public bool Memcached::append ( string $key , string $value )";}
a:4:{i:0;s:22:"Memcached::appendByKey";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:52:"Append data to an existing item on a specific server";i:3;s:97:"public bool Memcached::cas ( float $cas_token , string $key , mixed $value [, int $expiration ] )";}
a:4:{i:0;s:19:"Memcached::casByKey";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:45:"Compare and swap an item on a specific server";i:3;s:53:"Memcached::__construct() ([ string $persistent_id ] )";}
a:4:{i:0;s:17:"Memcached::delete";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:14:"Delete an item";i:3;s:64:"public bool Memcached::delete ( string $key [, int $time = 0 ] )";}
a:4:{i:0;s:22:"Memcached::deleteByKey";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:37:"Delete an item from a specific server";i:3;s:38:"public array Memcached::fetch ( void )";}
a:4:{i:0;s:19:"Memcached::fetchAll";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:31:"Fetch all the remaining results";i:3;s:41:"public array Memcached::fetchAll ( void )";}
a:4:{i:0;s:16:"Memcached::flush";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:33:"Invalidate all items in the cache";i:3;s:50:"public bool Memcached::flush ([ int $delay = 0 ] )";}
a:4:{i:0;s:14:"Memcached::get";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:16:"Retrieve an item";i:3;s:89:"public mixed Memcached::get ( string $key [, callback $cache_cb [, float &$cas_token ]] )";}
a:4:{i:0;s:19:"Memcached::getByKey";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:39:"Retrieve an item from a specific server";i:3;s:92:"public bool Memcached::getDelayed ( array $keys [, bool $with_cas [, callback $value_cb ]] )";}
a:4:{i:0;s:26:"Memcached::getDelayedByKey";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:45:"Request multiple items from a specific server";i:3;s:87:"public mixed Memcached::getMulti ( array $keys [, array &$cas_tokens [, int $flags ]] )";}
a:4:{i:0;s:24:"Memcached::getMultiByKey";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:46:"Retrieve multiple items from a specific server";i:3;s:49:"public mixed Memcached::getOption ( int $option )";}
a:4:{i:0;s:24:"Memcached::getResultCode";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:44:"Return the result code of the last operation";i:3;s:44:"public int Memcached::getResultCode ( void )";}
a:4:{i:0;s:27:"Memcached::getResultMessage";i:1;s:23:"PECL memcached >= 1.0.0";i:2;s:62:"Return the message describing the result of the last operation";i:3;s:50:"public string Memcached::getResultMessage ( void )";}
a:4:{i:0;s:25:"Memcached::getServerByKey";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:21:"Map a key to a server";i:3;s:61:"public array Memcached::getServerByKey ( string $server_key )";}
a:4:{i:0;s:24:"Memcached::getServerList";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:39:"Get the list of the servers in the pool";i:3;s:46:"public array Memcached::getServerList ( void )";}
a:4:{i:0;s:19:"Memcached::getStats";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:26:"Get server pool statistics";i:3;s:41:"public array Memcached::getStats ( void )";}
a:4:{i:0;s:21:"Memcached::getVersion";i:1;s:23:"PECL memcached >= 0.1.5";i:2;s:28:"Get server pool version info";i:3;s:43:"public array Memcached::getVersion ( void )";}
a:4:{i:0;s:18:"Memcached::prepend";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:32:"Prepend data to an existing item";i:3;s:62:"public bool Memcached::prepend ( string $key , string $value )";}
a:4:{i:0;s:23:"Memcached::prependByKey";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:53:"Prepend data to an existing item on a specific server";i:3;s:78:"public bool Memcached::set ( string $key , mixed $value [, int $expiration ] )";}
a:4:{i:0;s:19:"Memcached::setByKey";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:34:"Store an item on a specific server";i:3;s:104:"public bool Memcached::setByKey ( string $server_key , string $key , mixed $value [, int $expiration ] )";}
a:4:{i:0;s:19:"Memcached::setMulti";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:20:"Store multiple items";i:3;s:69:"public bool Memcached::setMulti ( array $items [, int $expiration ] )";}
a:4:{i:0;s:24:"Memcached::setMultiByKey";i:1;s:23:"PECL memcached >= 0.1.0";i:2;s:41:"Store multiple items on a specific server";i:3;s:63:"public bool Memcached::setOption ( int $option , mixed $value )";}
a:4:{i:0;s:25:"GearmanClient::addOptions";i:1;s:21:"PECL gearman >= 0.6.0";i:2;s:18:"Add client options";i:3;s:89:"public bool GearmanClient::addServer ([ string $host = 127.0.0.1 [, int $port = 4730 ]] )";}
a:4:{i:0;s:25:"GearmanClient::addServers";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:39:"Add a list of job servers to the client";i:3;s:77:"public bool GearmanClient::addServers ([ string $servers = 127.0.0.1:4730 ] )";}
a:4:{i:0;s:22:"GearmanClient::addTask";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:32:"Add a task to be run in parallel";i:3;s:126:"public GearmanTask GearmanClient::addTask ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )";}
a:4:{i:0;s:32:"GearmanClient::addTaskBackground";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:43:"Add a background task to be run in parallel";i:3;s:136:"public GearmanTask GearmanClient::addTaskBackground ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )";}
a:4:{i:0;s:26:"GearmanClient::addTaskHigh";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:43:"Add a high priority task to run in parallel";i:3;s:130:"public GearmanTask GearmanClient::addTaskHigh ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )";}
a:4:{i:0;s:36:"GearmanClient::addTaskHighBackground";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:57:"Add a high priority background task to be run in parallel";i:3;s:129:"public GearmanTask GearmanClient::addTaskLow ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )";}
a:4:{i:0;s:35:"GearmanClient::addTaskLowBackground";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:56:"Add a low priority background task to be run in parallel";i:3;s:92:"public GearmanTask GearmanClient::addTaskStatus ( string $job_handle [, string &$context ] )";}
a:4:{i:0;s:29:"GearmanClient::clearCallbacks";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:33:"Clear all task callback functions";i:3;s:96:"public string GearmanClient::do ( string $function_name , string $workload [, string $unique ] )";}
a:4:{i:0;s:27:"GearmanClient::doBackground";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:28:"Run a task in the background";i:3;s:106:"public string GearmanClient::doBackground ( string $function_name , string $workload [, string $unique ] )";}
a:4:{i:0;s:21:"GearmanClient::doHigh";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:31:"Run a single high priority task";i:3;s:45:"public array GearmanClient::doStatus ( void )";}
a:4:{i:0;s:19:"GearmanClient::echo";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:56:"Send data to all job servers to see if they echo it back";i:3;s:60:"public array GearmanClient::jobStatus ( string $job_handle )";}
a:4:{i:0;s:28:"GearmanClient::removeOptions";i:1;s:21:"PECL gearman >= 0.6.0";i:2;s:21:"Remove client options";i:3;s:42:"public int GearmanClient::timeout ( void )";}
a:4:{i:0;s:23:"GearmanJob::__construct";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:28:"Create a GearmanJob instance";i:3;s:44:"public int GearmanJob::workloadSize ( void )";}
a:4:{i:0;s:24:"GearmanTask::__construct";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:29:"Create a GearmanTask instance";i:3;s:40:"public string GearmanTask::uuid ( void )";}
a:4:{i:0;s:26:"GearmanWorker::addFunction";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:34:"Register and add callback function";i:3;s:123:"public bool GearmanWorker::addFunction ( string $function_name , callback $function [, mixed &$context [, int $timeout ]] )";}
a:4:{i:0;s:25:"GearmanWorker::addOptions";i:1;s:21:"PECL gearman >= 0.6.0";i:2;s:18:"Add worker options";i:3;s:89:"public bool GearmanWorker::addServer ([ string $host = 127.0.0.1 [, int $port = 4730 ]] )";}
a:4:{i:0;s:25:"GearmanWorker::addServers";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:15:"Add job servers";i:3;s:74:"public bool GearmanWorker::addServers ( string $servers = 127.0.0.1:4730 )";}
a:4:{i:0;s:20:"GearmanWorker::clone";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:27:"Create a copy of the worker";i:3;s:54:"public bool GearmanWorker::setTimeout ( int $timeout )";}
a:4:{i:0;s:25:"GearmanWorker::unregister";i:1;s:21:"PECL gearman >= 0.6.0";i:2;s:47:"Unregister a function name with the job servers";i:3;s:40:"public bool GearmanWorker::wait ( void )";}
a:4:{i:0;s:19:"GearmanWorker::work";i:1;s:21:"PECL gearman >= 0.5.0";i:2;s:25:"Wait for and perform jobs";i:3;s:40:"public bool GearmanWorker::work ( void )";}
a:4:{i:0;s:13:"mqseries_back";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:15:"MQSeries MQBACK";i:3;s:80:"void mqseries_back ( resource $hconn , resource &$compCode , resource &$reason )";}
a:4:{i:0;s:14:"mqseries_begin";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:16:"MQseries MQBEGIN";i:3;s:103:"void mqseries_begin ( resource $hconn , array $beginOptions , resource &$compCode , resource &$reason )";}
a:4:{i:0;s:14:"mqseries_close";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:16:"MQSeries MQCLOSE";i:3;s:113:"void mqseries_close ( resource $hconn , resource $hobj , int $options , resource &$compCode , resource &$reason )";}
a:4:{i:0;s:13:"mqseries_cmit";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:15:"MQSeries MQCMIT";i:3;s:80:"void mqseries_cmit ( resource $hconn , resource &$compCode , resource &$reason )";}
a:4:{i:0;s:13:"mqseries_conn";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:15:"MQSeries MQCONN";i:3;s:104:"void mqseries_conn ( string $qManagerName , resource &$hconn , resource &$compCode , resource &$reason )";}
a:4:{i:0;s:14:"mqseries_connx";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:16:"MQSeries MQCONNX";i:3;s:127:"void mqseries_connx ( string $qManagerName , array &$connOptions , resource &$hconn , resource &$compCode , resource &$reason )";}
a:4:{i:0;s:13:"mqseries_disc";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:15:"MQSeries MQDISC";i:3;s:80:"void mqseries_disc ( resource $hconn , resource &$compCode , resource &$reason )";}
a:4:{i:0;s:12:"mqseries_get";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:14:"MQSeries MQGET";i:3;s:179:"void mqseries_get ( resource $hConn , resource $hObj , array &$md , array &$gmo , int &$bufferLength , string &$msg , int &$data_length , resource &$compCode , resource &$reason )";}
a:4:{i:0;s:12:"mqseries_inq";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:14:"MQSeries MQINQ";i:3;s:221:"void mqseries_inq ( resource $hconn , resource $hobj , int $selectorCount , array $selectors , int $intAttrCount , resource &$intAttr , int $charAttrLength , resource &$charAttr , resource &$compCode , resource &$reason )";}
a:4:{i:0;s:13:"mqseries_open";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:15:"MQSeries MQOPEN";i:3;s:130:"void mqseries_open ( resource $hconn , array &$objDesc , int $option , resource &$hobj , resource &$compCode , resource &$reason )";}
a:4:{i:0;s:13:"mqseries_put1";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:15:"MQSeries MQPUT1";i:3;s:141:"void mqseries_put ( resource $hConn , resource $hObj , array &$md , array &$pmo , string $message , resource &$compCode , resource &$reason )";}
a:4:{i:0;s:12:"mqseries_set";i:1;s:23:"PECL mqseries >= 0.10.0";i:2;s:14:"MQSeries MQSET";i:3;s:40:"string mqseries_strerror ( int $reason )";}
a:4:{i:0;s:15:"gopher_parsedir";i:1;s:22:"PECL net_gopher >= 0.1";i:2;s:71:"Translate a gopher formatted directory entry into an associative array.";i:3;s:40:"array gopher_parsedir ( string $dirent )";}
a:4:{i:0;s:10:"checkdnsrr";i:1;s:12:"PHP 4, PHP 5";i:2;s:75:"Check DNS records corresponding to a given Internet host name or IP address";i:3;s:37:"void define_syslog_variables ( void )";}
a:4:{i:0;s:14:"dns_get_record";i:1;s:5:"PHP 5";i:2;s:53:"Fetch DNS Resource Records associated with a hostname";i:3;s:103:"array dns_get_record ( string $hostname [, int $type = DNS_ANY [, array &$authns [, array &$addtl ]]] )";}
a:4:{i:0;s:9:"fsockopen";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Open Internet or Unix domain socket connection";i:3;s:150:"resource fsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") ]]]] )";}
a:4:{i:0;s:13:"gethostbyaddr";i:1;s:12:"PHP 4, PHP 5";i:2;s:64:" Get the Internet host name corresponding to a given IP address ";i:3;s:43:"string gethostbyaddr ( string $ip_address )";}
a:4:{i:0;s:13:"gethostbyname";i:1;s:12:"PHP 4, PHP 5";i:2;s:66:" Get the IPv4 address corresponding to a given Internet host name ";i:3;s:41:"string gethostbyname ( string $hostname )";}
a:4:{i:0;s:14:"gethostbynamel";i:1;s:12:"PHP 4, PHP 5";i:2;s:74:" Get a list of IPv4 addresses corresponding to a given Internet host name ";i:3;s:41:"array gethostbynamel ( string $hostname )";}
a:4:{i:0;s:11:"gethostname";i:1;s:12:"PHP >= 5.3.0";i:2;s:18:"Gets the host name";i:3;s:27:"string gethostname ( void )";}
a:4:{i:0;s:7:"getmxrr";i:1;s:12:"PHP 4, PHP 5";i:2;s:58:"Get MX records corresponding to a given Internet host name";i:3;s:35:"int getprotobyname ( string $name )";}
a:4:{i:0;s:16:"getprotobynumber";i:1;s:12:"PHP 4, PHP 5";i:2;s:49:"Get protocol name associated with protocol number";i:3;s:56:"int getservbyname ( string $service , string $protocol )";}
a:4:{i:0;s:13:"getservbyport";i:1;s:12:"PHP 4, PHP 5";i:2;s:59:"Get Internet service which corresponds to port and protocol";i:3;s:38:"void header_remove ([ string $name ] )";}
a:4:{i:0;s:6:"header";i:1;s:12:"PHP 4, PHP 5";i:2;s:22:"Send a raw HTTP header";i:3;s:84:"void header ( string $string [, bool $replace = true [, int $http_response_code ]] )";}
a:4:{i:0;s:12:"headers_sent";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Checks if or where headers have been sent";i:3;s:53:"bool headers_sent ([ string &$file [, int &$line ]] )";}
a:4:{i:0;s:9:"inet_ntop";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:69:"Converts a packed internet address to a human readable representation";i:3;s:36:"string inet_ntop ( string $in_addr )";}
a:4:{i:0;s:9:"inet_pton";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:73:"Converts a human readable IP address to its packed in_addr representation";i:3;s:36:"string inet_pton ( string $address )";}
a:4:{i:0;s:7:"openlog";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Open connection to system logger";i:3;s:60:"bool openlog ( string $ident , int $option , int $facility )";}
a:4:{i:0;s:10:"pfsockopen";i:1;s:12:"PHP 4, PHP 5";i:2;s:57:"Open persistent Internet or Unix domain socket connection";i:3;s:158:"bool setcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]] )";}
a:4:{i:0;s:12:"setrawcookie";i:1;s:5:"PHP 5";i:2;s:50:"Send a cookie without urlencoding the cookie value";i:3;s:47:"bool syslog ( int $priority , string $message )";}
a:4:{i:0;s:23:"SAMConnection::setDebug";i:1;s:17:"PECL sam >= 1.1.0";i:2;s:45:" Turn on or off additional debugging output. ";i:3;s:45:"void SAMConnection::setDebug ( bool $switch )";}
a:4:{i:0;s:23:"snmp_get_valueretrieval";i:1;s:21:"PHP 4 >= 4.3.3, PHP 5";i:2;s:56:" Return the method how the SNMP values will be returned ";i:3;s:47:"void snmp_set_quick_print ( bool $quick_print )";}
a:4:{i:0;s:23:"snmp_set_valueretrieval";i:1;s:21:"PHP 4 >= 4.3.3, PHP 5";i:2;s:57:" Specify the method how the SNMP values will be returned ";i:3;s:110:"string snmpget ( string $hostname , string $community , string $object_id [, int $timeout [, int $retries ]] )";}
a:4:{i:0;s:11:"snmpgetnext";i:1;s:5:"PHP 5";i:2;s:21:" Fetch a SNMP object ";i:3;s:110:"array snmpwalk ( string $hostname , string $community , string $object_id [, int $timeout [, int $retries ]] )";}
a:4:{i:0;s:11:"snmpwalkoid";i:1;s:12:"PHP 4, PHP 5";i:2;s:55:"Query for a tree of information about a network entity ";i:3;s:113:"array snmpwalkoid ( string $hostname , string $community , string $object_id [, int $timeout [, int $retries ]] )";}
a:4:{i:0;s:13:"socket_accept";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:32:"Accepts a connection on a socket";i:3;s:74:"bool socket_bind ( resource $socket , string $address [, int $port = 0 ] )";}
a:4:{i:0;s:18:"socket_clear_error";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:53:"Clears the error on the socket or the last error code";i:3;s:80:"bool socket_create_pair ( int $domain , int $type , int $protocol , array &$fd )";}
a:4:{i:0;s:17:"socket_get_option";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:35:"Gets socket options for the socket ";i:3;s:72:"mixed socket_get_option ( resource $socket , int $level , int $optname )";}
a:4:{i:0;s:17:"socket_last_error";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:37:"Returns the last error on the socket ";i:3;s:45:"int socket_last_error ([ resource $socket ] )";}
a:4:{i:0;s:13:"socket_listen";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:36:"Listens for a connection on a socket";i:3;s:86:"string socket_read ( resource $socket , int $length [, int $type = PHP_BINARY_READ ] )";}
a:4:{i:0;s:11:"socket_recv";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:38:"Receives data from a connected socket ";i:3;s:75:"int socket_recv ( resource $socket , string &$buf , int $len , int $flags )";}
a:4:{i:0;s:11:"socket_send";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:32:"Sends data to a connected socket";i:3;s:74:"int socket_send ( resource $socket , string $buf , int $len , int $flags )";}
a:4:{i:0;s:16:"socket_set_block";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:39:"Sets blocking mode on a socket resource";i:3;s:42:"bool socket_set_block ( resource $socket )";}
a:4:{i:0;s:19:"socket_set_nonblock";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:45:"Sets nonblocking mode for file descriptor fd ";i:3;s:45:"bool socket_set_nonblock ( resource $socket )";}
a:4:{i:0;s:17:"socket_set_option";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:34:"Sets socket options for the socket";i:3;s:87:"bool socket_set_option ( resource $socket , int $level , int $optname , mixed $optval )";}
a:4:{i:0;s:15:"socket_strerror";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:41:"Return a string describing a socket error";i:3;s:37:"string socket_strerror ( int $errno )";}
a:4:{i:0;s:12:"socket_write";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:17:"Write to a socket";i:3;s:75:"int socket_write ( resource $socket , string $buffer [, int $length = 0 ] )";}
a:4:{i:0;s:24:"ssh2_auth_hostbased_file";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:35:"Authenticate using a public hostkey";i:3;s:183:"bool ssh2_auth_hostbased_file ( resource $session , string $username , string $hostname , string $pubkeyfile , string $privkeyfile [, string $passphrase [, string $local_username ]] )";}
a:4:{i:0;s:18:"ssh2_auth_password";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:44:"Authenticate over SSH using a plain password";i:3;s:83:"bool ssh2_auth_password ( resource $session , string $username , string $password )";}
a:4:{i:0;s:21:"ssh2_auth_pubkey_file";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:31:"Authenticate using a public key";i:3;s:134:"bool ssh2_auth_pubkey_file ( resource $session , string $username , string $pubkeyfile , string $privkeyfile [, string $passphrase ] )";}
a:4:{i:0;s:12:"ssh2_connect";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:24:"Connect to an SSH server";i:3;s:98:"resource ssh2_connect ( string $host [, int $port = 22 [, array $methods [, array $callbacks ]]] )";}
a:4:{i:0;s:9:"ssh2_exec";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:36:"Execute a command on a remote server";i:3;s:181:"resource ssh2_exec ( resource $session , string $command [, string $pty [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]] )";}
a:4:{i:0;s:17:"ssh2_fetch_stream";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:29:"Fetch an extended data stream";i:3;s:64:"resource ssh2_fetch_stream ( resource $channel , int $streamid )";}
a:4:{i:0;s:16:"ssh2_fingerprint";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:37:"Retrieve fingerprint of remote server";i:3;s:0:"";}
a:4:{i:0;s:23:"ssh2_methods_negotiated";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:33:"Return list of negotiated methods";i:3;s:51:"array ssh2_methods_negotiated ( resource $session )";}
a:4:{i:0;s:18:"ssh2_publickey_add";i:1;s:17:"PECL ssh2 >= 0.10";i:2;s:29:" Add an authorized publickey ";i:3;s:127:"bool ssh2_publickey_add ( resource $pkey , string $algoname , string $blob [, bool $overwrite = false [, array $attributes ]] )";}
a:4:{i:0;s:19:"ssh2_publickey_init";i:1;s:17:"PECL ssh2 >= 0.10";i:2;s:32:" Initialize Publickey subsystem ";i:3;s:50:"resource ssh2_publickey_init ( resource $session )";}
a:4:{i:0;s:19:"ssh2_publickey_list";i:1;s:17:"PECL ssh2 >= 0.10";i:2;s:38:" List currently authorized publickeys ";i:3;s:44:"array ssh2_publickey_list ( resource $pkey )";}
a:4:{i:0;s:21:"ssh2_publickey_remove";i:1;s:17:"PECL ssh2 >= 0.10";i:2;s:32:" Remove an authorized publickey ";i:3;s:83:"bool ssh2_scp_recv ( resource $session , string $remote_file , string $local_file )";}
a:4:{i:0;s:13:"ssh2_scp_send";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:19:"Send a file via SCP";i:3;s:112:"bool ssh2_scp_send ( resource $session , string $local_file , string $remote_file [, int $create_mode = 0644 ] )";}
a:4:{i:0;s:15:"ssh2_sftp_lstat";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:20:"Stat a symbolic link";i:3;s:55:"array ssh2_sftp_lstat ( resource $sftp , string $path )";}
a:4:{i:0;s:15:"ssh2_sftp_mkdir";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:18:"Create a directory";i:3;s:107:"bool ssh2_sftp_mkdir ( resource $sftp , string $dirname [, int $mode = 0777 [, bool $recursive = false ]] )";}
a:4:{i:0;s:18:"ssh2_sftp_readlink";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:36:"Return the target of a symbolic link";i:3;s:59:"string ssh2_sftp_readlink ( resource $sftp , string $link )";}
a:4:{i:0;s:18:"ssh2_sftp_realpath";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:46:"Resolve the realpath of a provided path string";i:3;s:63:"string ssh2_sftp_realpath ( resource $sftp , string $filename )";}
a:4:{i:0;s:16:"ssh2_sftp_rename";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:20:"Rename a remote file";i:3;s:68:"bool ssh2_sftp_rename ( resource $sftp , string $from , string $to )";}
a:4:{i:0;s:15:"ssh2_sftp_rmdir";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:18:"Remove a directory";i:3;s:57:"bool ssh2_sftp_rmdir ( resource $sftp , string $dirname )";}
a:4:{i:0;s:14:"ssh2_sftp_stat";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:34:"Stat a file on a remote filesystem";i:3;s:54:"array ssh2_sftp_stat ( resource $sftp , string $path )";}
a:4:{i:0;s:17:"ssh2_sftp_symlink";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:16:"Create a symlink";i:3;s:73:"bool ssh2_sftp_symlink ( resource $sftp , string $target , string $link )";}
a:4:{i:0;s:16:"ssh2_sftp_unlink";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:13:"Delete a file";i:3;s:59:"bool ssh2_sftp_unlink ( resource $sftp , string $filename )";}
a:4:{i:0;s:9:"ssh2_sftp";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:25:"Initialize SFTP subsystem";i:3;s:40:"resource ssh2_sftp ( resource $session )";}
a:4:{i:0;s:10:"ssh2_shell";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:28:"Request an interactive shell";i:3;s:182:"resource ssh2_shell ( resource $session [, string $term_type = "vanilla" [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]] )";}
a:4:{i:0;s:11:"ssh2_tunnel";i:1;s:18:"PECL ssh2 >= 0.9.0";i:2;s:37:"Open a tunnel through a remote server";i:3;s:69:"resource ssh2_tunnel ( resource $session , string $host , int $port )";}
a:4:{i:0;s:19:"stomp_connect_error";i:1;s:19:"PECL stomp >= 0.3.0";i:2;s:54:"Returns a string description of the last connect error";i:3;s:35:"string stomp_connect_error ( void )";}
a:4:{i:0;s:13:"stomp_version";i:1;s:19:"PECL stomp >= 0.1.0";i:2;s:40:"Gets the current stomp extension version";i:3;s:29:"string stomp_version ( void )";}
a:4:{i:0;s:23:"StompFrame::__construct";i:1;s:19:"PECL stomp >= 0.1.0";i:2;s:11:"Constructor";i:3;s:82:"StompFrame::__construct ([ string $command [, array $headers [, string $body ]]] )";}
a:4:{i:0;s:26:"StompException::getDetails";i:1;s:54:"No version information available, might only be in SVN";i:2;s:21:"Get exception details";i:3;s:49:"public string StompException::getDetails ( void )";}
a:4:{i:0;s:7:"svn_add";i:1;s:17:"PECL svn >= 0.1.0";i:2;s:56:"Schedules the addition of an item in a working directory";i:3;s:81:"bool svn_add ( string $path [, bool $recursive = true [, bool $force = false ]] )";}
a:4:{i:0;s:22:"svn_auth_get_parameter";i:1;s:17:"PECL svn >= 0.1.0";i:2;s:34:"Retrieves authentication parameter";i:3;s:59:"void svn_auth_set_parameter ( string $key , string $value )";}
a:4:{i:0;s:9:"svn_blame";i:1;s:17:"PECL svn >= 0.3.0";i:2;s:28:"Get the SVN blame for a file";i:3;s:84:"array svn_blame ( string $repository_url [, int $revision_no = SVN_REVISION_HEAD ] )";}
a:4:{i:0;s:7:"svn_cat";i:1;s:17:"PECL svn >= 0.1.0";i:2;s:46:"Returns the contents of a file in a repository";i:3;s:58:"string svn_cat ( string $repos_url [, int $revision_no ] )";}
a:4:{i:0;s:12:"svn_checkout";i:1;s:17:"PECL svn >= 0.1.0";i:2;s:45:"Checks out a working copy from the repository";i:3;s:94:"bool svn_checkout ( string $repos , string $targetpath [, int $revision [, int $flags = 0 ]] )";}
a:4:{i:0;s:18:"svn_client_version";i:1;s:17:"PECL svn >= 0.1.0";i:2;s:47:"Returns the version of the SVN client libraries";i:3;s:34:"string svn_client_version ( void )";}
a:4:{i:0;s:10:"svn_commit";i:1;s:17:"PECL svn >= 0.1.0";i:2;s:59:"Sends changes from the local working copy to the repository";i:3;s:72:"array svn_commit ( string $log , array $targets [, bool $dontrecurse ] )";}
a:4:{i:0;s:10:"svn_delete";i:1;s:17:"PECL svn >= 0.4.0";i:2;s:47:"Delete items from a working copy or repository.";i:3;s:72:"array svn_diff ( string $path1 , int $rev1 , string $path2 , int $rev2 )";}
a:4:{i:0;s:10:"svn_export";i:1;s:17:"PECL svn >= 0.3.0";i:2;s:38:"Export the contents of a SVN directory";i:3;s:84:"bool svn_export ( string $frompath , string $topath [, bool $working_copy = true ] )";}
a:4:{i:0;s:17:"svn_fs_apply_text";i:1;s:17:"PECL svn >= 0.2.0";i:2;s:57:"Creates and returns a stream that will be used to replace";i:3;s:67:"bool svn_import ( string $path , string $url , bool $nonrecursive )";}
a:4:{i:0;s:7:"svn_log";i:1;s:17:"PECL svn >= 0.1.0";i:2;s:51:"Returns the commit log messages of a repository URL";i:3;s:0:"";}
a:4:{i:0;s:9:"svn_mkdir";i:1;s:17:"PECL svn >= 0.4.0";i:2;s:51:"Creates a directory in a working copy or repository";i:3;s:53:"array svn_status ( string $path [, int $flags = 0 ] )";}
a:4:{i:0;s:10:"svn_update";i:1;s:17:"PECL svn >= 0.1.0";i:2;s:19:"Update working copy";i:3;s:92:"int svn_update ( string $path [, int $revno = SVN_REVISION_HEAD [, bool $recurse = true ]] )";}
a:4:{i:0;s:13:"tcpwrap_check";i:1;s:21:"PECL tcpwrap >= 0.1.0";i:2;s:24:"Performs a tcpwrap check";i:3;s:97:"bool tcpwrap_check ( string $daemon , string $address [, string $user [, bool $nodns = false ]] )";}
a:4:{i:0;s:11:"yaz_addinfo";i:1;s:33:"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0";i:2;s:36:"Returns additional error information";i:3;s:50:"void yaz_ccl_conf ( resource $id , array $config )";}
a:4:{i:0;s:13:"yaz_ccl_parse";i:1;s:33:"PHP 4 >= 4.0.5, PECL yaz >= 0.9.0";i:2;s:17:"Invoke CCL Parser";i:3;s:68:"bool yaz_ccl_parse ( resource $id , string $query , array &$result )";}
a:4:{i:0;s:9:"yaz_close";i:1;s:33:"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0";i:2;s:20:"Close YAZ connection";i:3;s:54:"bool yaz_database ( resource $id , string $databases )";}
a:4:{i:0;s:9:"yaz_errno";i:1;s:33:"PHP 4 >= 4.0.1, PECL yaz >= 0.9.0";i:2;s:20:"Returns error number";i:3;s:57:"void yaz_es ( resource $id , string $type , array $args )";}
a:4:{i:0;s:14:"yaz_get_option";i:1;s:17:"PECL yaz >= 0.9.0";i:2;s:38:"Returns value of option for connection";i:3;s:60:"string yaz_record ( resource $id , int $pos , string $type )";}
a:4:{i:0;s:15:"yaz_scan_result";i:1;s:33:"PHP 4 >= 4.0.5, PECL yaz >= 0.9.0";i:2;s:28:"Returns Scan Response result";i:3;s:83:"void yaz_scan ( resource $id , string $type , string $startterm [, array $flags ] )";}
a:4:{i:0;s:10:"yaz_schema";i:1;s:33:"PHP 4 >= 4.2.0, PECL yaz >= 0.9.0";i:2;s:32:" Specifies schema for retrieval ";i:3;s:63:"bool yaz_search ( resource $id , string $type , string $query )";}
a:4:{i:0;s:14:"yaz_set_option";i:1;s:17:"PECL yaz >= 0.9.0";i:2;s:39:"Sets one or more options for connection";i:3;s:37:"mixed yaz_wait ([ array &$options ] )";}
a:4:{i:0;s:6:"yp_all";i:1;s:30:"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5";i:2;s:50:"Traverse the map and call a function on each entry";i:3;s:39:"string yp_err_string ( int $errorcode )";}
a:4:{i:0;s:8:"yp_errno";i:1;s:30:"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5";i:2;s:48:"Returns the error code of the previous operation";i:3;s:47:"array yp_first ( string $domain , string $map )";}
a:4:{i:0;s:9:"yp_master";i:1;s:21:"PHP 4, PHP 5 <= 5.0.5";i:2;s:59:"Returns the machine name of the master NIS server for a map";i:3;s:49:"string yp_master ( string $domain , string $map )";}
a:4:{i:0;s:8:"yp_match";i:1;s:21:"PHP 4, PHP 5 <= 5.0.5";i:2;s:24:"Returns the matched line";i:3;s:62:"string yp_match ( string $domain , string $map , string $key )";}
a:4:{i:0;s:8:"yp_order";i:1;s:21:"PHP 4, PHP 5 <= 5.0.5";i:2;s:34:"Returns the order number for a map";i:3;s:45:"int yp_order ( string $domain , string $map )";}
a:4:{i:0;s:20:"udm_add_search_limit";i:1;s:57:"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0";i:2;s:25:"Add various search limits";i:3;s:70:"bool udm_add_search_limit ( resource $agent , int $var , string $val )";}
a:4:{i:0;s:21:"udm_alloc_agent_array";i:1;s:57:"PHP 4 >= 4.3.3, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0";i:2;s:28:"Allocate mnoGoSearch session";i:3;s:63:"resource udm_alloc_agent ( string $dbaddr [, string $dbmode ] )";}
a:4:{i:0;s:15:"udm_api_version";i:1;s:57:"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0";i:2;s:27:"Get mnoGoSearch API version";i:3;s:28:"int udm_api_version ( void )";}
a:4:{i:0;s:12:"udm_cat_list";i:1;s:57:"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0";i:2;s:61:"Get all the categories on the same level with the current one";i:3;s:57:"array udm_cat_list ( resource $agent , string $category )";}
a:4:{i:0;s:12:"udm_cat_path";i:1;s:57:"PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0";i:2;s:36:"Get the path to the current category";i:3;s:57:"array udm_cat_path ( resource $agent , string $category )";}
a:4:{i:0;s:17:"udm_check_charset";i:1;s:57:"PHP 4 >= 4.2.0, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0";i:2;s:50:"Check if the given charset is known to mnogosearch";i:3;s:53:"resource udm_find ( resource $agent , string $query )";}
a:4:{i:0;s:14:"udm_free_agent";i:1;s:57:"PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0";i:2;s:24:"Free mnoGoSearch session";i:3;s:98:"bool udm_load_ispell_data ( resource $agent , int $var , string $val1 , string $val2 , int $flag )";}
a:4:{i:0;s:15:"udm_open_stored";i:1;s:14:"PHP 4 >= 4.2.0";i:2;s:25:"Open connection to stored";i:3;s:69:"bool udm_set_agent_param ( resource $agent , int $var , string $val )";}
a:4:{i:0;s:27:"SphinxClient::buildExcerpts";i:1;s:20:"PECL sphinx >= 0.1.0";i:2;s:19:"Build text snippets";i:3;s:0:"";}
a:4:{i:0;s:26:"SphinxClient::resetFilters";i:1;s:20:"PECL sphinx >= 0.1.0";i:2;s:17:"Clear all filters";i:3;s:114:"public bool SphinxClient::setGeoAnchor ( string $attrlat , string $attrlong , float $latitude , float $longitude )";}
a:4:{i:0;s:24:"SphinxClient::setGroupBy";i:1;s:20:"PECL sphinx >= 0.1.0";i:2;s:22:"Set grouping attribute";i:3;s:0:"";}
a:4:{i:0;s:24:"SphinxClient::setIDRange";i:1;s:20:"PECL sphinx >= 0.1.0";i:2;s:36:"Set a range of accepted document IDs";i:3;s:95:"public int SphinxClient::updateAttributes ( string $index , array $attributes , array $values )";}
a:4:{i:0;s:18:"Swish::__construct";i:1;s:19:"PECL swish >= 0.1.0";i:2;s:24:"Construct a Swish object";i:3;s:47:"void Swish::__construct ( string $index_names )";}
a:4:{i:0;s:16:"solr_get_version";i:1;s:18:"PECL solr >= 0.9.1";i:2;s:56:"Returns the current version of the Apache Solr extension";i:3;s:32:"string solr_get_version ( void )";}
a:4:{i:0;s:28:"SolrUtils::digestXmlResponse";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:47:"Parses an response XML string into a SolrObject";i:3;s:64:"public static string SolrUtils::escapeQueryChars ( string $str )";}
a:4:{i:0;s:25:"SolrUtils::getSolrVersion";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:49:"Returns the current version of the Solr extension";i:3;s:59:"public static string SolrUtils::queryPhrase ( string $str )";}
a:4:{i:0;s:27:"SolrInputDocument::addField";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:28:"Adds a field to the document";i:3;s:110:"public bool SolrInputDocument::sort ( int $sortOrderBy [, int $sortDirection = SolrInputDocument::SORT_ASC ] )";}
a:4:{i:0;s:26:"SolrInputDocument::toArray";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:53:"Returns an array representation of the input document";i:3;s:48:"public array SolrInputDocument::toArray ( void )";}
a:4:{i:0;s:22:"SolrDocument::addField";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:28:"Adds a field to the document";i:3;s:100:"public bool SolrDocument::sort ( int $sortOrderBy [, int $sortDirection = SolrDocument::SORT_ASC ] )";}
a:4:{i:0;s:21:"SolrDocument::toArray";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:47:"Returns an array representation of the document";i:3;s:43:"public array SolrDocument::toArray ( void )";}
a:4:{i:0;s:25:"SolrDocument::unserialize";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:44:"Custom serialization of SolrDocument objects";i:3;s:40:"public bool SolrDocument::valid ( void )";}
a:4:{i:0;s:30:"SolrDocumentField::__construct";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:11:"Constructor";i:3;s:50:"public void SolrDocumentField::__destruct ( void )";}
a:4:{i:0;s:23:"SolrObject::__construct";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:19:"Creates Solr object";i:3;s:32:"SolrObject::__construct ( void )";}
a:4:{i:0;s:22:"SolrObject::__destruct";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:10:"Destructor";i:3;s:61:"public void SolrObject::offsetUnset ( string $property_name )";}
a:4:{i:0;s:23:"SolrClient::addDocument";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:28:"Adds a document to the index";i:3;s:131:"public SolrUpdateResponse SolrClient::addDocument ( SolrInputDocument $doc [, bool $allowDups = false [, int $commitWithin = 0 ]] )";}
a:4:{i:0;s:24:"SolrClient::addDocuments";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:61:"Adds a collection of SolrInputDocument instances to the index";i:3;s:107:"public void SolrClient::addDocuments ( array $docs [, bool $allowDups = false [, int $commitWithin = 0 ]] )";}
a:4:{i:0;s:23:"SolrClient::__construct";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:37:"Constructor for the SolrClient object";i:3;s:55:"public SolrClient::__construct ( array $clientOptions )";}
a:4:{i:0;s:22:"SolrClient::deleteById";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:12:"Delete by Id";i:3;s:49:"public SolrPingResponse SolrClient::ping ( void )";}
a:4:{i:0;s:17:"SolrClient::query";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:27:"Sends a query to the server";i:3;s:64:"public SolrQueryResponse SolrClient::query ( SolrParams $query )";}
a:4:{i:0;s:19:"SolrClient::request";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:26:"Sends a raw update request";i:3;s:55:"public void SolrClient::request ( string $raw_request )";}
a:4:{i:0;s:29:"SolrClient::setResponseWriter";i:1;s:19:"PECL solr >= 0.9.11";i:2;s:63:"Sets the response writer used to prepare the response from Solr";i:3;s:68:"public void SolrClient::setResponseWriter ( string $responseWriter )";}
a:4:{i:0;s:22:"SolrClient::setServlet";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:49:"Changes the specified servlet type to a new value";i:3;s:40:"public void SolrClient::threads ( void )";}
a:4:{i:0;s:33:"SolrResponse::getDigestedResponse";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:47:"Returns the XML response as serialized PHP data";i:3;s:42:"public bool SolrResponse::success ( void )";}
a:4:{i:0;s:30:"SolrQueryResponse::__construct";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:11:"Constructor";i:3;s:50:"public void SolrQueryResponse::__destruct ( void )";}
a:4:{i:0;s:31:"SolrUpdateResponse::__construct";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:11:"Constructor";i:3;s:51:"public void SolrUpdateResponse::__destruct ( void )";}
a:4:{i:0;s:29:"SolrPingResponse::__construct";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:11:"Constructor";i:3;s:52:"public string SolrPingResponse::getResponse ( void )";}
a:4:{i:0;s:32:"SolrGenericResponse::__construct";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:11:"Constructor";i:3;s:52:"public void SolrGenericResponse::__destruct ( void )";}
a:4:{i:0;s:20:"SolrParams::addParam";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:30:"Adds a parameter to the object";i:3;s:71:"public SolrParams SolrParams::setParam ( string $name , string $value )";}
a:4:{i:0;s:23:"SolrParams::unserialize";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:29:"Used for custom serialization";i:3;s:64:"final public void SolrParams::unserialize ( string $serialized )";}
a:4:{i:0;s:33:"SolrModifiableParams::__construct";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:11:"Constructor";i:3;s:53:"public void SolrModifiableParams::__destruct ( void )";}
a:4:{i:0;s:28:"SolrQuery::addFacetDateField";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:18:"Maps to facet.date";i:3;s:62:"publicSolrQuery SolrQuery::setTimeAllowed ( int $timeAllowed )";}
a:4:{i:0;s:30:"SolrException::getInternalInfo";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:59:"Returns internal information where the Exception was thrown";i:3;s:52:"public array SolrException::getInternalInfo ( void )";}
a:4:{i:0;s:36:"SolrClientException::getInternalInfo";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:59:"Returns internal information where the Exception was thrown";i:3;s:58:"public array SolrClientException::getInternalInfo ( void )";}
a:4:{i:0;s:45:"SolrIllegalArgumentException::getInternalInfo";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:59:"Returns internal information where the Exception was thrown";i:3;s:67:"public array SolrIllegalArgumentException::getInternalInfo ( void )";}
a:4:{i:0;s:46:"SolrIllegalOperationException::getInternalInfo";i:1;s:18:"PECL solr >= 0.9.2";i:2;s:59:"Returns internal information where the Exception was thrown";i:3;s:68:"public array SolrIllegalOperationException::getInternalInfo ( void )";}
a:4:{i:0;s:22:"apache_child_terminate";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:43:"Terminate apache process after this request";i:3;s:33:"array apache_get_modules ( void )";}
a:4:{i:0;s:18:"apache_get_version";i:1;s:21:"PHP 4 >= 4.3.2, PHP 5";i:2;s:20:"Fetch Apache version";i:3;s:34:"string apache_get_version ( void )";}
a:4:{i:0;s:13:"apache_getenv";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:37:"Get an Apache subprocess_env variable";i:3;s:64:"string apache_getenv ( string $variable [, bool $walk_to_top ] )";}
a:4:{i:0;s:17:"apache_lookup_uri";i:1;s:12:"PHP 4, PHP 5";i:2;s:76:"Perform a partial request for the specified URI and return all info about it";i:3;s:45:"object apache_lookup_uri ( string $filename )";}
a:4:{i:0;s:11:"apache_note";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Get and set apache request notes";i:3;s:64:"string apache_note ( string $note_name [, string $note_value ] )";}
a:4:{i:0;s:22:"apache_request_headers";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:30:"Fetch all HTTP request headers";i:3;s:37:"array apache_request_headers ( void )";}
a:4:{i:0;s:20:"apache_reset_timeout";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:28:"Reset the Apache write timer";i:3;s:38:"array apache_response_headers ( void )";}
a:4:{i:0;s:13:"apache_setenv";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:37:"Set an Apache subprocess_env variable";i:3;s:86:"bool apache_setenv ( string $variable , string $value [, bool $walk_to_top = false ] )";}
a:4:{i:0;s:13:"getallheaders";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Fetch all HTTP request headers";i:3;s:28:"array getallheaders ( void )";}
a:4:{i:0;s:14:"iis_add_server";i:1;s:16:"PECL iisfunc SVN";i:2;s:32:"Creates a new virtual web server";i:3;s:43:"int iis_stop_service ( string $service_id )";}
a:4:{i:0;s:21:"nsapi_request_headers";i:1;s:21:"PHP 4 >= 4.3.3, PHP 5";i:2;s:30:"Fetch all HTTP request headers";i:3;s:36:"array nsapi_request_headers ( void )";}
a:4:{i:0;s:22:"nsapi_response_headers";i:1;s:21:"PHP 4 >= 4.3.3, PHP 5";i:2;s:33:" Fetch all HTTP response headers ";i:3;s:34:"bool nsapi_virtual ( string $uri )";}
a:4:{i:0;s:16:"msession_connect";i:1;s:30:"PHP 4 >= 4.2.0, PHP 5 <= 5.1.2";i:2;s:26:"Connect to msession server";i:3;s:50:"int msession_unlock ( string $session , int $key )";}
a:4:{i:0;s:20:"session_cache_expire";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:27:"Return current cache expire";i:3;s:56:"int session_cache_expire ([ string $new_cache_expire ] )";}
a:4:{i:0;s:14:"session_decode";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Decodes session data from a string";i:3;s:29:"bool session_destroy ( void )";}
a:4:{i:0;s:14:"session_encode";i:1;s:12:"PHP 4, PHP 5";i:2;s:44:"Encodes the current session data as a string";i:3;s:35:"string session_id ([ string $id ] )";}
a:4:{i:0;s:21:"session_is_registered";i:1;s:12:"PHP 4, PHP 5";i:2;s:61:"Find out whether a global variable is registered in a session";i:3;s:39:"string session_name ([ string $name ] )";}
a:4:{i:0;s:21:"session_regenerate_id";i:1;s:21:"PHP 4 >= 4.3.2, PHP 5";i:2;s:58:" Update the current session id with a newly generated one ";i:3;s:66:"bool session_regenerate_id ([ bool $delete_old_session = false ] )";}
a:4:{i:0;s:16:"session_register";i:1;s:12:"PHP 4, PHP 5";i:2;s:62:"Register one or more global variables with the current session";i:3;s:53:"bool session_register ( mixed $name [, mixed $... ] )";}
a:4:{i:0;s:25:"session_set_cookie_params";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Set the session cookie parameters";i:3;s:136:"bool session_set_save_handler ( callback $open , callback $close , callback $read , callback $write , callback $destroy , callback $gc )";}
a:4:{i:0;s:13:"session_start";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Initialize session data";i:3;s:27:"bool session_start ( void )";}
a:4:{i:0;s:18:"session_unregister";i:1;s:12:"PHP 4, PHP 5";i:2;s:53:"Unregister a global variable from the current session";i:3;s:33:"void session_write_close ( void )";}
a:4:{i:0;s:23:"session_pgsql_add_error";i:1;s:22:"PECL session_pgsql SVN";i:2;s:51:"Increments error counts and sets last error message";i:3;s:35:"array session_pgsql_status ( void )";}
a:4:{i:0;s:18:"bbcode_add_element";i:1;s:20:"PECL bbcode >= 0.9.0";i:2;s:21:"Adds a bbcode element";i:3;s:91:"bool bbcode_add_smiley ( resource $bbcode_container , string $smiley , string $replace_by )";}
a:4:{i:0;s:13:"bbcode_create";i:1;s:20:"PECL bbcode >= 0.9.0";i:2;s:24:"Create a BBCode Resource";i:3;s:56:"resource bbcode_create ([ array $bbcode_initial_tags ] )";}
a:4:{i:0;s:14:"bbcode_destroy";i:1;s:20:"PECL bbcode >= 0.9.0";i:2;s:31:"Close BBCode_container resource";i:3;s:87:"bool bbcode_set_arg_parser ( resource $bbcode_container , resource $bbcode_arg_parser )";}
a:4:{i:0;s:16:"bbcode_set_flags";i:1;s:21:"PECL bbcode >= 0.10.2";i:2;s:27:"Set or alter parser options";i:3;s:103:"bool bbcode_set_flags ( resource $bbcode_container , int $flags [, int $mode = BBCODE_SET_FLAGS_SET ] )";}
a:4:{i:0;s:11:"preg_filter";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:47:"Perform a regular expression search and replace";i:3;s:111:"mixed preg_filter ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] )";}
a:4:{i:0;s:9:"preg_grep";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:"Return array entries that match the pattern";i:3;s:70:"array preg_grep ( string $pattern , array $input [, int $flags = 0 ] )";}
a:4:{i:0;s:15:"preg_last_error";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:55:"Returns the error code of the last PCRE regex execution";i:3;s:28:"int preg_last_error ( void )";}
a:4:{i:0;s:14:"preg_match_all";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Perform a global regular expression match";i:3;s:131:"int preg_match_all ( string $pattern , string $subject , array &$matches [, int $flags = PREG_PATTERN_ORDER [, int $offset = 0 ]] )";}
a:4:{i:0;s:10:"preg_match";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Perform a regular expression match";i:3;s:112:"int preg_match ( string $pattern , string $subject [, array &$matches [, int $flags = 0 [, int $offset = 0 ]]] )";}
a:4:{i:0;s:10:"preg_quote";i:1;s:12:"PHP 4, PHP 5";i:2;s:35:"Quote regular expression characters";i:3;s:63:"string preg_quote ( string $str [, string $delimiter = NULL ] )";}
a:4:{i:0;s:21:"preg_replace_callback";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:64:"Perform a regular expression search and replace using a callback";i:3;s:121:"mixed preg_replace_callback ( mixed $pattern , callback $callback , mixed $subject [, int $limit = -1 [, int &$count ]] )";}
a:4:{i:0;s:12:"preg_replace";i:1;s:12:"PHP 4, PHP 5";i:2;s:47:"Perform a regular expression search and replace";i:3;s:112:"mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] )";}
a:4:{i:0;s:10:"preg_split";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Split string by a regular expression";i:3;s:94:"array preg_split ( string $pattern , string $subject [, int $limit = -1 [, int $flags = 0 ]] )";}
a:4:{i:0;s:12:"ereg_replace";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Replace regular expression";i:3;s:78:"string ereg_replace ( string $pattern , string $replacement , string $string )";}
a:4:{i:0;s:4:"ereg";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Regular expression match";i:3;s:63:"int ereg ( string $pattern , string $string [, array &$regs ] )";}
a:4:{i:0;s:13:"eregi_replace";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:"Replace regular expression case insensitive";i:3;s:79:"string eregi_replace ( string $pattern , string $replacement , string $string )";}
a:4:{i:0;s:5:"eregi";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Case insensitive regular expression match";i:3;s:64:"int eregi ( string $pattern , string $string [, array &$regs ] )";}
a:4:{i:0;s:5:"split";i:1;s:12:"PHP 4, PHP 5";i:2;s:45:"Split string into array by regular expression";i:3;s:64:"array split ( string $pattern , string $string [, int $limit ] )";}
a:4:{i:0;s:6:"spliti";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:62:"Split string into array by regular expression case insensitive";i:3;s:65:"array spliti ( string $pattern , string $string [, int $limit ] )";}
a:4:{i:0;s:11:"sql_regcase";i:1;s:12:"PHP 4, PHP 5";i:2;s:50:"Make regular expression for case insensitive match";i:3;s:37:"string sql_regcase ( string $string )";}
a:4:{i:0;s:20:"ssdeep_fuzzy_compare";i:1;s:20:"PECL ssdeep >= 1.0.0";i:2;s:60:"Calculates the match score between two fuzzy hash signatures";i:3;s:44:"string ssdeep_fuzzy_hash ( string $to_hash )";}
a:4:{i:0;s:11:"addcslashes";i:1;s:12:"PHP 4, PHP 5";i:2;s:38:"Quote string with slashes in a C style";i:3;s:53:"string addcslashes ( string $str , string $charlist )";}
a:4:{i:0;s:10:"addslashes";i:1;s:12:"PHP 4, PHP 5";i:2;s:25:"Quote string with slashes";i:3;s:33:"string addslashes ( string $str )";}
a:4:{i:0;s:7:"bin2hex";i:1;s:12:"PHP 4, PHP 5";i:2;s:51:"Convert binary data into hexadecimal representation";i:3;s:25:"string chr ( int $ascii )";}
a:4:{i:0;s:11:"chunk_split";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Split a string into smaller chunks";i:3;s:0:"";}
a:4:{i:0;s:18:"convert_cyr_string";i:1;s:12:"PHP 4, PHP 5";i:2;s:50:"Convert from one Cyrillic character set to another";i:3;s:40:"string convert_uudecode ( string $data )";}
a:4:{i:0;s:16:"convert_uuencode";i:1;s:5:"PHP 5";i:2;s:17:"Uuencode a string";i:3;s:40:"string convert_uuencode ( string $data )";}
a:4:{i:0;s:11:"count_chars";i:1;s:12:"PHP 4, PHP 5";i:2;s:52:"Return information about characters used in a string";i:3;s:55:"mixed count_chars ( string $string [, int $mode = 0 ] )";}
a:4:{i:0;s:5:"crc32";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:43:"Calculates the crc32 polynomial of a string";i:3;s:25:"int crc32 ( string $str )";}
a:4:{i:0;s:4:"echo";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Output one or more strings";i:3;s:43:"void echo ( string $arg1 [, string $... ] )";}
a:4:{i:0;s:7:"explode";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Split a string by string";i:3;s:68:"array explode ( string $delimiter , string $string [, int $limit ] )";}
a:4:{i:0;s:7:"fprintf";i:1;s:5:"PHP 5";i:2;s:36:"Write a formatted string to a stream";i:3;s:81:"int fprintf ( resource $handle , string $format [, mixed $args [, mixed $... ]] )";}
a:4:{i:0;s:6:"hebrev";i:1;s:12:"PHP 4, PHP 5";i:2;s:42:"Convert logical Hebrew text to visual text";i:3;s:71:"string hebrevc ( string $hebrew_text [, int $max_chars_per_line = 0 ] )";}
a:4:{i:0;s:18:"html_entity_decode";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:56:"Convert all HTML entities to their applicable characters";i:3;s:99:"string html_entity_decode ( string $string [, int $quote_style = ENT_COMPAT [, string $charset ]] )";}
a:4:{i:0;s:12:"htmlentities";i:1;s:12:"PHP 4, PHP 5";i:2;s:50:"Convert all applicable characters to HTML entities";i:3;s:118:"string htmlentities ( string $string [, int $flags = ENT_COMPAT [, string $charset [, bool $double_encode = true ]]] )";}
a:4:{i:0;s:23:"htmlspecialchars_decode";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:50:" Convert special HTML entities back to characters ";i:3;s:84:"string htmlspecialchars_decode ( string $string [, int $quote_style = ENT_COMPAT ] )";}
a:4:{i:0;s:16:"htmlspecialchars";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:"Convert special characters to HTML entities";i:3;s:122:"string htmlspecialchars ( string $string [, int $flags = ENT_COMPAT [, string $charset [, bool $double_encode = true ]]] )";}
a:4:{i:0;s:7:"implode";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Join array elements with a string";i:3;s:32:"string implode ( array $pieces )";}
a:4:{i:0;s:11:"levenshtein";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:50:"Calculate Levenshtein distance between two strings";i:3;s:95:"int levenshtein ( string $str1 , string $str2 , int $cost_ins , int $cost_rep , int $cost_del )";}
a:4:{i:0;s:10:"localeconv";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:34:"Get numeric formatting information";i:3;s:25:"array localeconv ( void )";}
a:4:{i:0;s:8:"md5_file";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:39:"Calculates the md5 hash of a given file";i:3;s:66:"string md5_file ( string $filename [, bool $raw_output = false ] )";}
a:4:{i:0;s:3:"md5";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Calculate the md5 hash of a string";i:3;s:56:"string md5 ( string $str [, bool $raw_output = false ] )";}
a:4:{i:0;s:9:"metaphone";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Calculate the metaphone key of a string";i:3;s:55:"string metaphone ( string $str [, int $phonemes = 0 ] )";}
a:4:{i:0;s:12:"money_format";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:37:"Formats a number as a currency string";i:3;s:54:"string money_format ( string $format , float $number )";}
a:4:{i:0;s:11:"nl_langinfo";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:37:"Query language and locale information";i:3;s:58:"string nl2br ( string $string [, bool $is_xhtml = true ] )";}
a:4:{i:0;s:13:"number_format";i:1;s:12:"PHP 4, PHP 5";i:2;s:38:"Format a number with grouped thousands";i:3;s:134:"string number_format ( float $number , int $decimals = 0 , string $dec_point = &#039;.&#039; , string $thousands_sep = &#039;,&#039; )";}
a:4:{i:0;s:3:"ord";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"Return ASCII value of character";i:3;s:26:"int ord ( string $string )";}
a:4:{i:0;s:9:"parse_str";i:1;s:12:"PHP 4, PHP 5";i:2;s:32:"Parses the string into variables";i:3;s:47:"void parse_str ( string $str [, array &$arr ] )";}
a:4:{i:0;s:5:"print";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Output a string";i:3;s:25:"int print ( string $arg )";}
a:4:{i:0;s:6:"printf";i:1;s:12:"PHP 4, PHP 5";i:2;s:25:"Output a formatted string";i:3;s:32:"string quotemeta ( string $str )";}
a:4:{i:0;s:9:"setlocale";i:1;s:12:"PHP 4, PHP 5";i:2;s:22:"Set locale information";i:3;s:50:"string setlocale ( int $category , array $locale )";}
a:4:{i:0;s:9:"sha1_file";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:33:"Calculate the sha1 hash of a file";i:3;s:67:"string sha1_file ( string $filename [, bool $raw_output = false ] )";}
a:4:{i:0;s:4:"sha1";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:35:"Calculate the sha1 hash of a string";i:3;s:57:"string sha1 ( string $str [, bool $raw_output = false ] )";}
a:4:{i:0;s:12:"similar_text";i:1;s:12:"PHP 4, PHP 5";i:2;s:44:"Calculate the similarity between two strings";i:3;s:72:"int similar_text ( string $first , string $second [, float &$percent ] )";}
a:4:{i:0;s:7:"soundex";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Calculate the soundex key of a string";i:3;s:30:"string soundex ( string $str )";}
a:4:{i:0;s:7:"sprintf";i:1;s:12:"PHP 4, PHP 5";i:2;s:25:"Return a formatted string";i:3;s:65:"string sprintf ( string $format [, mixed $args [, mixed $... ]] )";}
a:4:{i:0;s:6:"sscanf";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:48:"Parses input from a string according to a format";i:3;s:62:"mixed sscanf ( string $str , string $format [, mixed &$... ] )";}
a:4:{i:0;s:10:"str_getcsv";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:34:" Parse a CSV string into an array ";i:3;s:0:"";}
a:4:{i:0;s:7:"str_pad";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:52:"Pad a string to a certain length with another string";i:3;s:114:"string str_pad ( string $input , int $pad_length [, string $pad_string = " " [, int $pad_type = STR_PAD_RIGHT ]] )";}
a:4:{i:0;s:10:"str_repeat";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Repeat a string";i:3;s:53:"string str_repeat ( string $input , int $multiplier )";}
a:4:{i:0;s:11:"str_replace";i:1;s:12:"PHP 4, PHP 5";i:2;s:72:"Replace all occurrences of the search string with the replacement string";i:3;s:86:"mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] )";}
a:4:{i:0;s:9:"str_rot13";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:39:"Perform the rot13 transform on a string";i:3;s:32:"string str_rot13 ( string $str )";}
a:4:{i:0;s:11:"str_shuffle";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:26:"Randomly shuffles a string";i:3;s:34:"string str_shuffle ( string $str )";}
a:4:{i:0;s:9:"str_split";i:1;s:5:"PHP 5";i:2;s:28:"Convert a string to an array";i:3;s:61:"array str_split ( string $string [, int $split_length = 1 ] )";}
a:4:{i:0;s:14:"str_word_count";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:49:" Return information about words used in a string ";i:3;s:81:"mixed str_word_count ( string $string [, int $format = 0 [, string $charlist ]] )";}
a:4:{i:0;s:6:"strcmp";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Binary safe string comparison";i:3;s:75:"int strcspn ( string $str1 , string $str2 [, int $start [, int $length ]] )";}
a:4:{i:0;s:10:"strip_tags";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Strip HTML and PHP tags from a string";i:3;s:61:"string strip_tags ( string $str [, string $allowable_tags ] )";}
a:4:{i:0;s:6:"strlen";i:1;s:12:"PHP 4, PHP 5";i:2;s:17:"Get string length";i:3;s:29:"int strlen ( string $string )";}
a:4:{i:0;s:7:"strncmp";i:1;s:12:"PHP 4, PHP 5";i:2;s:55:"Binary safe string comparison of the first n characters";i:3;s:55:"string strpbrk ( string $haystack , string $char_list )";}
a:4:{i:0;s:6:"strpos";i:1;s:12:"PHP 4, PHP 5";i:2;s:45:"Find position of first occurrence of a string";i:3;s:68:"int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )";}
a:4:{i:0;s:7:"strrchr";i:1;s:12:"PHP 4, PHP 5";i:2;s:51:"Find the last occurrence of a character in a string";i:3;s:51:"string strrchr ( string $haystack , mixed $needle )";}
a:4:{i:0;s:6:"strrev";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Reverse a string";i:3;s:32:"string strrev ( string $string )";}
a:4:{i:0;s:7:"strrpos";i:1;s:12:"PHP 4, PHP 5";i:2;s:67:"Find the position of the last occurrence of a substring in a string";i:3;s:70:"int strrpos ( string $haystack , string $needle [, int $offset = 0 ] )";}
a:4:{i:0;s:6:"strspn";i:1;s:12:"PHP 4, PHP 5";i:2;s:116:" Finds the length of the first segment of a string consisting entirely of characters contained within a given mask. ";i:3;s:77:"int strspn ( string $subject , string $mask [, int $start [, int $length ]] )";}
a:4:{i:0;s:6:"strstr";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Find first occurrence of a string";i:3;s:83:"string strstr ( string $haystack , mixed $needle [, bool $before_needle = false ] )";}
a:4:{i:0;s:6:"strtok";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Tokenize string";i:3;s:31:"string strtok ( string $token )";}
a:4:{i:0;s:10:"strtolower";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Make a string lowercase";i:3;s:33:"string strtolower ( string $str )";}
a:4:{i:0;s:10:"strtoupper";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Make a string uppercase";i:3;s:36:"string strtoupper ( string $string )";}
a:4:{i:0;s:5:"strtr";i:1;s:12:"PHP 4, PHP 5";i:2;s:42:"Translate characters or replace substrings";i:3;s:51:"string strtr ( string $str , array $replace_pairs )";}
a:4:{i:0;s:12:"substr_count";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Count the number of substring occurrences";i:3;s:91:"int substr_count ( string $haystack , string $needle [, int $offset = 0 [, int $length ]] )";}
a:4:{i:0;s:14:"substr_replace";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Replace text within a portion of a string";i:3;s:90:"mixed substr_replace ( mixed $string , string $replacement , int $start [, int $length ] )";}
a:4:{i:0;s:6:"substr";i:1;s:12:"PHP 4, PHP 5";i:2;s:23:"Return part of a string";i:3;s:62:"string substr ( string $string , int $start [, int $length ] )";}
a:4:{i:0;s:7:"ucwords";i:1;s:12:"PHP 4, PHP 5";i:2;s:54:"Uppercase the first character of each word in a string";i:3;s:30:"string ucwords ( string $str )";}
a:4:{i:0;s:8:"vfprintf";i:1;s:5:"PHP 5";i:2;s:36:"Write a formatted string to a stream";i:3;s:64:"int vfprintf ( resource $handle , string $format , array $args )";}
a:4:{i:0;s:7:"vprintf";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:25:"Output a formatted string";i:3;s:44:"int vprintf ( string $format , array $args )";}
a:4:{i:0;s:8:"vsprintf";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:25:"Return a formatted string";i:3;s:48:"string vsprintf ( string $format , array $args )";}
a:4:{i:0;s:8:"wordwrap";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:46:"Wraps a string to a given number of characters";i:3;s:0:"";}
a:4:{i:0;s:21:"array_change_key_case";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:28:"Changes all keys in an array";i:3;s:72:"array array_change_key_case ( array $input [, int $case = CASE_LOWER ] )";}
a:4:{i:0;s:11:"array_chunk";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:26:"Split an array into chunks";i:3;s:79:"array array_chunk ( array $input , int $size [, bool $preserve_keys = false ] )";}
a:4:{i:0;s:13:"array_combine";i:1;s:5:"PHP 5";i:2;s:71:"Creates an array by using one array for keys and another for its values";i:3;s:51:"array array_combine ( array $keys , array $values )";}
a:4:{i:0;s:18:"array_count_values";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Counts all the values of an array";i:3;s:41:"array array_count_values ( array $input )";}
a:4:{i:0;s:16:"array_diff_assoc";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:61:"Computes the difference of arrays with additional index check";i:3;s:72:"array array_diff_assoc ( array $array1 , array $array2 [, array $... ] )";}
a:4:{i:0;s:14:"array_diff_key";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:59:"Computes the difference of arrays using keys for comparison";i:3;s:70:"array array_diff_key ( array $array1 , array $array2 [, array $... ] )";}
a:4:{i:0;s:17:"array_diff_uassoc";i:1;s:5:"PHP 5";i:2;s:117:"Computes the difference of arrays with additional index check which is performed by a user supplied callback function";i:3;s:101:"array array_diff_uassoc ( array $array1 , array $array2 [, array $... ], callback $key_compare_func )";}
a:4:{i:0;s:15:"array_diff_ukey";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:86:"Computes the difference of arrays using a callback function on the keys for comparison";i:3;s:100:"array array_diff_ukey ( array $array1 , array $array2 [, array $ ... ], callback $key_compare_func )";}
a:4:{i:0;s:10:"array_diff";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:33:"Computes the difference of arrays";i:3;s:67:"array array_diff ( array $array1 , array $array2 [, array $ ... ] )";}
a:4:{i:0;s:10:"array_fill";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:25:"Fill an array with values";i:3;s:63:"array array_fill ( int $start_index , int $num , mixed $value )";}
a:4:{i:0;s:12:"array_filter";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:54:"Filters elements of an array using a callback function";i:3;s:59:"array array_filter ( array $input [, callback $callback ] )";}
a:4:{i:0;s:10:"array_flip";i:1;s:12:"PHP 4, PHP 5";i:2;s:59:"Exchanges all keys with their associated values in an array";i:3;s:33:"array array_flip ( array $trans )";}
a:4:{i:0;s:21:"array_intersect_assoc";i:1;s:21:"PHP 4 >= 4.3.0, PHP 5";i:2;s:63:"Computes the intersection of arrays with additional index check";i:3;s:78:"array array_intersect_assoc ( array $array1 , array $array2 [, array $ ... ] )";}
a:4:{i:0;s:19:"array_intersect_key";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:61:"Computes the intersection of arrays using keys for comparison";i:3;s:76:"array array_intersect_key ( array $array1 , array $array2 [, array $ ... ] )";}
a:4:{i:0;s:20:"array_intersect_ukey";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:88:"Computes the intersection of arrays using a callback function on the keys for comparison";i:3;s:104:"array array_intersect_ukey ( array $array1 , array $array2 [, array $... ], callback $key_compare_func )";}
a:4:{i:0;s:15:"array_intersect";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:35:"Computes the intersection of arrays";i:3;s:72:"array array_intersect ( array $array1 , array $array2 [, array $ ... ] )";}
a:4:{i:0;s:16:"array_key_exists";i:1;s:21:"PHP 4 >= 4.0.7, PHP 5";i:2;s:52:"Checks if the given key or index exists in the array";i:3;s:52:"bool array_key_exists ( mixed $key , array $search )";}
a:4:{i:0;s:10:"array_keys";i:1;s:12:"PHP 4, PHP 5";i:2;s:55:"Return all the keys or a subset of the keys of an array";i:3;s:83:"array array_keys ( array $input [, mixed $search_value [, bool $strict = false ]] )";}
a:4:{i:0;s:9:"array_map";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:56:"Applies the callback to the elements of the given arrays";i:3;s:68:"array array_map ( callback $callback , array $arr1 [, array $... ] )";}
a:4:{i:0;s:21:"array_merge_recursive";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:36:"Merge two or more arrays recursively";i:3;s:61:"array array_merge_recursive ( array $array1 [, array $... ] )";}
a:4:{i:0;s:11:"array_merge";i:1;s:12:"PHP 4, PHP 5";i:2;s:24:"Merge one or more arrays";i:3;s:69:"array array_merge ( array $array1 [, array $array2 [, array $... ]] )";}
a:4:{i:0;s:9:"array_pad";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Pad array to the specified length with a value";i:3;s:67:"array array_pad ( array $input , int $pad_size , mixed $pad_value )";}
a:4:{i:0;s:9:"array_pop";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Pop the element off the end of array";i:3;s:33:"mixed array_pop ( array &$array )";}
a:4:{i:0;s:13:"array_product";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:43:"Calculate the product of values in an array";i:3;s:37:"number array_product ( array $array )";}
a:4:{i:0;s:10:"array_push";i:1;s:12:"PHP 4, PHP 5";i:2;s:47:"Push one or more elements onto the end of array";i:3;s:61:"int array_push ( array &$array , mixed $var [, mixed $... ] )";}
a:4:{i:0;s:10:"array_rand";i:1;s:12:"PHP 4, PHP 5";i:2;s:47:"Pick one or more random entries out of an array";i:3;s:55:"mixed array_rand ( array $input [, int $num_req = 1 ] )";}
a:4:{i:0;s:12:"array_reduce";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:72:"Iteratively reduce the array to a single value using a callback function";i:3;s:83:"mixed array_reduce ( array $input , callback $function [, mixed $initial = NULL ] )";}
a:4:{i:0;s:23:"array_replace_recursive";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:69:"Replaces elements from passed arrays into the first array recursively";i:3;s:100:"array array_replace_recursive ( array &$array , array &$array1 [, array &$array2 [, array &$... ]] )";}
a:4:{i:0;s:13:"array_replace";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:57:"Replaces elements from passed arrays into the first array";i:3;s:90:"array array_replace ( array &$array , array &$array1 [, array &$array2 [, array &$... ]] )";}
a:4:{i:0;s:13:"array_reverse";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Return an array with elements in reverse order";i:3;s:69:"array array_reverse ( array $array [, bool $preserve_keys = false ] )";}
a:4:{i:0;s:12:"array_search";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:84:"Searches the array for a given value and returns the corresponding key if successful";i:3;s:72:"mixed array_search ( mixed $needle , array $haystack [, bool $strict ] )";}
a:4:{i:0;s:11:"array_shift";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:"Shift an element off the beginning of array";i:3;s:35:"mixed array_shift ( array &$array )";}
a:4:{i:0;s:11:"array_slice";i:1;s:12:"PHP 4, PHP 5";i:2;s:28:"Extract a slice of the array";i:3;s:97:"array array_slice ( array $array , int $offset [, int $length [, bool $preserve_keys = false ]] )";}
a:4:{i:0;s:12:"array_splice";i:1;s:12:"PHP 4, PHP 5";i:2;s:64:"Remove a portion of the array and replace it with something else";i:3;s:94:"array array_splice ( array &$input , int $offset [, int $length = 0 [, mixed $replacement ]] )";}
a:4:{i:0;s:9:"array_sum";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:39:"Calculate the sum of values in an array";i:3;s:33:"number array_sum ( array $array )";}
a:4:{i:0;s:11:"array_udiff";i:1;s:5:"PHP 5";i:2;s:82:"Computes the difference of arrays by using a callback function for data comparison";i:3;s:97:"array array_udiff ( array $array1 , array $array2 [, array $ ... ], callback $data_compare_func )";}
a:4:{i:0;s:12:"array_unique";i:1;s:21:"PHP 4 >= 4.0.1, PHP 5";i:2;s:38:"Removes duplicate values from an array";i:3;s:70:"array array_unique ( array $array [, int $sort_flags = SORT_STRING ] )";}
a:4:{i:0;s:13:"array_unshift";i:1;s:12:"PHP 4, PHP 5";i:2;s:57:"Prepend one or more elements to the beginning of an array";i:3;s:64:"int array_unshift ( array &$array , mixed $var [, mixed $... ] )";}
a:4:{i:0;s:12:"array_values";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Return all the values of an array";i:3;s:35:"array array_values ( array $input )";}
a:4:{i:0;s:20:"array_walk_recursive";i:1;s:5:"PHP 5";i:2;s:61:"Apply a user function recursively to every member of an array";i:3;s:85:"bool array_walk_recursive ( array &$input , callback $funcname [, mixed $userdata ] )";}
a:4:{i:0;s:10:"array_walk";i:1;s:12:"PHP 4, PHP 5";i:2;s:49:"Apply a user function to every member of an array";i:3;s:75:"bool array_walk ( array &$array , callback $funcname [, mixed $userdata ] )";}
a:4:{i:0;s:5:"array";i:1;s:12:"PHP 4, PHP 5";i:2;s:15:"Create an array";i:3;s:29:"array array ([ mixed $... ] )";}
a:4:{i:0;s:6:"arsort";i:1;s:12:"PHP 4, PHP 5";i:2;s:61:"Sort an array in reverse order and maintain index association";i:3;s:65:"bool arsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )";}
a:4:{i:0;s:5:"asort";i:1;s:12:"PHP 4, PHP 5";i:2;s:44:"Sort an array and maintain index association";i:3;s:64:"bool asort ( array &$array [, int $sort_flags = SORT_REGULAR ] )";}
a:4:{i:0;s:7:"compact";i:1;s:12:"PHP 4, PHP 5";i:2;s:50:"Create array containing variables and their values";i:3;s:48:"array compact ( mixed $varname [, mixed $... ] )";}
a:4:{i:0;s:7:"current";i:1;s:12:"PHP 4, PHP 5";i:2;s:38:"Return the current element in an array";i:3;s:31:"mixed current ( array &$array )";}
a:4:{i:0;s:4:"each";i:1;s:12:"PHP 4, PHP 5";i:2;s:80:"Return the current key and value pair from an array and advance the array cursor";i:3;s:28:"array each ( array &$array )";}
a:4:{i:0;s:3:"end";i:1;s:12:"PHP 4, PHP 5";i:2;s:56:"Set the internal pointer of an array to its last element";i:3;s:27:"mixed end ( array &$array )";}
a:4:{i:0;s:7:"extract";i:1;s:12:"PHP 4, PHP 5";i:2;s:60:"Import variables into the current symbol table from an array";i:3;s:91:"int extract ( array $var_array [, int $extract_type = EXTR_OVERWRITE [, string $prefix ]] )";}
a:4:{i:0;s:8:"in_array";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Checks if a value exists in an array";i:3;s:67:"bool in_array ( mixed $needle , array $haystack [, bool $strict ] )";}
a:4:{i:0;s:3:"key";i:1;s:12:"PHP 4, PHP 5";i:2;s:25:"Fetch a key from an array";i:3;s:27:"mixed key ( array &$array )";}
a:4:{i:0;s:6:"krsort";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Sort an array by key in reverse order";i:3;s:65:"bool krsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )";}
a:4:{i:0;s:5:"ksort";i:1;s:12:"PHP 4, PHP 5";i:2;s:20:"Sort an array by key";i:3;s:64:"bool ksort ( array &$array [, int $sort_flags = SORT_REGULAR ] )";}
a:4:{i:0;s:4:"list";i:1;s:12:"PHP 4, PHP 5";i:2;s:41:"Assign variables as if they were an array";i:3;s:45:"array list ( mixed $varname [, mixed $... ] )";}
a:4:{i:0;s:4:"next";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Advance the internal array pointer of an array";i:3;s:28:"mixed next ( array &$array )";}
a:4:{i:0;s:4:"prev";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Rewind the internal array pointer";i:3;s:28:"mixed prev ( array &$array )";}
a:4:{i:0;s:5:"range";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Create an array containing a range of elements";i:3;s:58:"array range ( mixed $low , mixed $high [, number $step ] )";}
a:4:{i:0;s:5:"reset";i:1;s:12:"PHP 4, PHP 5";i:2;s:57:"Set the internal pointer of an array to its first element";i:3;s:29:"mixed reset ( array &$array )";}
a:4:{i:0;s:5:"rsort";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Sort an array in reverse order";i:3;s:64:"bool rsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )";}
a:4:{i:0;s:7:"shuffle";i:1;s:12:"PHP 4, PHP 5";i:2;s:16:"Shuffle an array";i:3;s:30:"bool shuffle ( array &$array )";}
a:4:{i:0;s:4:"sort";i:1;s:12:"PHP 4, PHP 5";i:2;s:13:"Sort an array";i:3;s:63:"bool sort ( array &$array [, int $sort_flags = SORT_REGULAR ] )";}
a:4:{i:0;s:11:"class_alias";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:28:"Creates an alias for a class";i:3;s:61:"boolean class_alias ([ string $original [, string $alias ]] )";}
a:4:{i:0;s:12:"class_exists";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Checks if the class has been defined";i:3;s:67:"bool class_exists ( string $class_name [, bool $autoload = true ] )";}
a:4:{i:0;s:14:"get_class_vars";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Get the default properties of the class";i:3;s:43:"array get_class_vars ( string $class_name )";}
a:4:{i:0;s:9:"get_class";i:1;s:12:"PHP 4, PHP 5";i:2;s:42:"Returns the name of the class of an object";i:3;s:45:"string get_class ([ object $object = NULL ] )";}
a:4:{i:0;s:20:"get_declared_classes";i:1;s:12:"PHP 4, PHP 5";i:2;s:53:"Returns an array with the name of the defined classes";i:3;s:35:"array get_declared_classes ( void )";}
a:4:{i:0;s:23:"get_declared_interfaces";i:1;s:5:"PHP 5";i:2;s:43:"Returns an array of all declared interfaces";i:3;s:38:"array get_declared_interfaces ( void )";}
a:4:{i:0;s:15:"get_object_vars";i:1;s:12:"PHP 4, PHP 5";i:2;s:39:"Gets the properties of the given object";i:3;s:40:"array get_object_vars ( object $object )";}
a:4:{i:0;s:16:"get_parent_class";i:1;s:12:"PHP 4, PHP 5";i:2;s:51:"Retrieves the parent class name for object or class";i:3;s:44:"string get_parent_class ([ mixed $object ] )";}
a:4:{i:0;s:16:"interface_exists";i:1;s:14:"PHP 5 >= 5.0.2";i:2;s:40:"Checks if the interface has been defined";i:3;s:75:"bool interface_exists ( string $interface_name [, bool $autoload = true ] )";}
a:4:{i:0;s:4:"is_a";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:77:"Checks if the object is of this class or has this class as one of its parents";i:3;s:49:"bool is_a ( object $object , string $class_name )";}
a:4:{i:0;s:14:"is_subclass_of";i:1;s:12:"PHP 4, PHP 5";i:2;s:57:"Checks if the object has this class as one of its parents";i:3;s:58:"bool is_subclass_of ( mixed $object , string $class_name )";}
a:4:{i:0;s:13:"method_exists";i:1;s:12:"PHP 4, PHP 5";i:2;s:33:"Checks if the class method exists";i:3;s:58:"bool method_exists ( mixed $object , string $method_name )";}
a:4:{i:0;s:15:"property_exists";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:46:" Checks if the object or class has a property ";i:3;s:56:"bool property_exists ( mixed $class , string $property )";}
a:4:{i:0;s:15:"classkit_import";i:1;s:20:"PECL classkit >= 0.3";i:2;s:47:"Import new class method definitions from a file";i:3;s:42:"array classkit_import ( string $filename )";}
a:4:{i:0;s:19:"classkit_method_add";i:1;s:20:"PECL classkit >= 0.1";i:2;s:46:"Dynamically adds a new method to a given class";i:3;s:135:"bool classkit_method_add ( string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ] )";}
a:4:{i:0;s:20:"classkit_method_copy";i:1;s:20:"PECL classkit >= 0.2";i:2;s:37:"Copies a method from class to another";i:3;s:100:"bool classkit_method_copy ( string $dClass , string $dMethod , string $sClass [, string $sMethod ] )";}
a:4:{i:0;s:24:"classkit_method_redefine";i:1;s:20:"PECL classkit >= 0.1";i:2;s:48:"Dynamically changes the code of the given method";i:3;s:140:"bool classkit_method_redefine ( string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ] )";}
a:4:{i:0;s:22:"classkit_method_remove";i:1;s:20:"PECL classkit >= 0.1";i:2;s:36:"Dynamically removes the given method";i:3;s:70:"bool classkit_method_remove ( string $classname , string $methodname )";}
a:4:{i:0;s:22:"classkit_method_rename";i:1;s:20:"PECL classkit >= 0.1";i:2;s:48:"Dynamically changes the name of the given method";i:3;s:88:"bool classkit_method_rename ( string $classname , string $methodname , string $newname )";}
a:4:{i:0;s:11:"ctype_punct";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:88:" Check for any printable character which is not whitespace or an alphanumeric character ";i:3;s:33:"bool ctype_punct ( string $text )";}
a:4:{i:0;s:14:"filter_has_var";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:43:"Checks if variable of specified type exists";i:3;s:61:"mixed filter_input_array ( int $type [, mixed $definition ] )";}
a:4:{i:0;s:12:"filter_input";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:67:"Gets a specific external variable by name and optionally filters it";i:3;s:109:"mixed filter_input ( int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]] )";}
a:4:{i:0;s:11:"filter_list";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:39:"Returns a list of all supported filters";i:3;s:26:"array filter_list ( void )";}
a:4:{i:0;s:16:"filter_var_array";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:51:"Gets multiple variables and optionally filters them";i:3;s:61:"mixed filter_var_array ( array $data [, mixed $definition ] )";}
a:4:{i:0;s:10:"filter_var";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:42:"Filters a variable with a specified filter";i:3;s:89:"mixed filter_var ( mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options ]] )";}
a:4:{i:0;s:20:"call_user_func_array";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:54:"Call a user function given with an array of parameters";i:3;s:68:"mixed call_user_func_array ( callback $function , array $param_arr )";}
a:4:{i:0;s:14:"call_user_func";i:1;s:12:"PHP 4, PHP 5";i:2;s:49:"Call a user function given by the first parameter";i:3;s:80:"mixed call_user_func ( callback $function [, mixed $parameter [, mixed $... ]] )";}
a:4:{i:0;s:25:"forward_static_call_array";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:52:"Call a static method and pass the arguments as array";i:3;s:77:"mixed forward_static_call_array ( callback $function [, array $parameters ] )";}
a:4:{i:0;s:19:"forward_static_call";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:20:"Call a static method";i:3;s:85:"mixed forward_static_call ( callback $function [, mixed $parameter [, mixed $... ]] )";}
a:4:{i:0;s:12:"func_get_arg";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Return an item from the argument list";i:3;s:35:"mixed func_get_arg ( int $arg_num )";}
a:4:{i:0;s:13:"func_num_args";i:1;s:12:"PHP 4, PHP 5";i:2;s:54:"Returns the number of arguments passed to the function";i:3;s:26:"int func_num_args ( void )";}
a:4:{i:0;s:21:"get_defined_functions";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:41:"Returns an array of all defined functions";i:3;s:36:"array get_defined_functions ( void )";}
a:4:{i:0;s:26:"register_shutdown_function";i:1;s:12:"PHP 4, PHP 5";i:2;s:45:"Register a function for execution on shutdown";i:3;s:91:"void register_shutdown_function ( callback $function [, mixed $parameter [, mixed $... ]] )";}
a:4:{i:0;s:22:"register_tick_function";i:1;s:21:"PHP 4 >= 4.0.3, PHP 5";i:2;s:46:"Register a function for execution on each tick";i:3;s:81:"bool register_tick_function ( callback $function [, mixed $arg [, mixed $... ]] )";}
a:4:{i:0;s:14:"aggregate_info";i:1;s:14:"PHP 4 >= 4.3.0";i:2;s:49:" Gets aggregation information for a given object ";i:3;s:39:"array aggregate_info ( object $object )";}
a:4:{i:0;s:25:"aggregate_methods_by_list";i:1;s:14:"PHP 4 >= 4.2.0";i:2;s:58:" Selective dynamic class methods aggregation to an object ";i:3;s:59:"void deaggregate ( object $object [, string $class_name ] )";}
a:4:{i:0;s:18:"Reflection::export";i:1;s:5:"PHP 5";i:2;s:7:"Exports";i:3;s:67:"public static array Reflection::getModifierNames ( int $modifiers )";}
a:4:{i:0;s:24:"ReflectionClass::__clone";i:1;s:5:"PHP 5";i:2;s:13:"Clones object";i:3;s:49:"ReflectionClass::__construct ( string $argument )";}
a:4:{i:0;s:23:"ReflectionClass::export";i:1;s:5:"PHP 5";i:2;s:15:"Exports a class";i:3;s:53:"public string ReflectionClass::getDocComment ( void )";}
a:4:{i:0;s:27:"ReflectionClass::getEndLine";i:1;s:5:"PHP 5";i:2;s:13:"Gets end line";i:3;s:47:"public int ReflectionClass::getEndLine ( void )";}
a:4:{i:0;s:29:"ReflectionClass::getExtension";i:1;s:5:"PHP 5";i:2;s:19:"Gets extension info";i:3;s:56:"public array ReflectionClass::getInterfaceNames ( void )";}
a:4:{i:0;s:30:"ReflectionClass::getInterfaces";i:1;s:5:"PHP 5";i:2;s:19:"Gets the interfaces";i:3;s:52:"public array ReflectionClass::getInterfaces ( void )";}
a:4:{i:0;s:26:"ReflectionClass::getMethod";i:1;s:5:"PHP 5";i:2;s:23:"Gets a ReflectionMethod";i:3;s:47:"public string ReflectionClass::getName ( void )";}
a:4:{i:0;s:33:"ReflectionClass::getNamespaceName";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:19:"Gets namespace name";i:3;s:56:"public string ReflectionClass::getNamespaceName ( void )";}
a:4:{i:0;s:31:"ReflectionClass::getParentClass";i:1;s:5:"PHP 5";i:2;s:17:"Gets parent class";i:3;s:62:"public array ReflectionClass::getProperties ([ int $filter ] )";}
a:4:{i:0;s:28:"ReflectionClass::getProperty";i:1;s:5:"PHP 5";i:2;s:13:"Gets property";i:3;s:52:"public string ReflectionClass::getShortName ( void )";}
a:4:{i:0;s:29:"ReflectionClass::getStartLine";i:1;s:5:"PHP 5";i:2;s:25:"Gets starting line number";i:3;s:57:"public bool ReflectionClass::hasConstant ( string $name )";}
a:4:{i:0;s:26:"ReflectionClass::hasMethod";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:27:"Checks if method is defined";i:3;s:55:"public bool ReflectionClass::hasMethod ( string $name )";}
a:4:{i:0;s:28:"ReflectionClass::hasProperty";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:29:"Checks if property is defined";i:3;s:57:"public bool ReflectionClass::hasProperty ( string $name )";}
a:4:{i:0;s:36:"ReflectionClass::implementsInterface";i:1;s:5:"PHP 5";i:2;s:20:"Implements interface";i:3;s:49:"public bool ReflectionClass::inNamespace ( void )";}
a:4:{i:0;s:27:"ReflectionClass::isAbstract";i:1;s:5:"PHP 5";i:2;s:27:"Checks if class is abstract";i:3;s:48:"public bool ReflectionClass::isAbstract ( void )";}
a:4:{i:0;s:24:"ReflectionClass::isFinal";i:1;s:5:"PHP 5";i:2;s:24:"Checks if class is final";i:3;s:45:"public bool ReflectionClass::isFinal ( void )";}
a:4:{i:0;s:27:"ReflectionClass::isInstance";i:1;s:5:"PHP 5";i:2;s:25:"Checks class for instance";i:3;s:58:"public bool ReflectionClass::isInstance ( object $object )";}
a:4:{i:0;s:31:"ReflectionClass::isInstantiable";i:1;s:5:"PHP 5";i:2;s:22:"Checks if instantiable";i:3;s:52:"public bool ReflectionClass::isInstantiable ( void )";}
a:4:{i:0;s:28:"ReflectionClass::isInterface";i:1;s:5:"PHP 5";i:2;s:19:"Checks if interface";i:3;s:51:"public bool ReflectionClass::isIterateable ( void )";}
a:4:{i:0;s:29:"ReflectionClass::isSubclassOf";i:1;s:5:"PHP 5";i:2;s:20:"Checks if a subclass";i:3;s:50:"public string ReflectionClass::__toString ( void )";}
a:4:{i:0;s:28:"ReflectionExtension::__clone";i:1;s:5:"PHP 5";i:2;s:6:"Clones";i:3;s:49:"ReflectionExtension::__construct ( string $name )";}
a:4:{i:0;s:27:"ReflectionExtension::export";i:1;s:5:"PHP 5";i:2;s:6:"Export";i:3;s:53:"public array ReflectionExtension::getClasses ( void )";}
a:4:{i:0;s:34:"ReflectionExtension::getClassNames";i:1;s:5:"PHP 5";i:2;s:16:"Gets class names";i:3;s:56:"public array ReflectionExtension::getClassNames ( void )";}
a:4:{i:0;s:33:"ReflectionExtension::getConstants";i:1;s:5:"PHP 5";i:2;s:14:"Gets constants";i:3;s:55:"public array ReflectionExtension::getConstants ( void )";}
a:4:{i:0;s:36:"ReflectionExtension::getDependencies";i:1;s:5:"PHP 5";i:2;s:17:"Gets dependencies";i:3;s:58:"public array ReflectionExtension::getDependencies ( void )";}
a:4:{i:0;s:33:"ReflectionExtension::getFunctions";i:1;s:5:"PHP 5";i:2;s:24:"Gets extension functions";i:3;s:55:"public array ReflectionExtension::getFunctions ( void )";}
a:4:{i:0;s:34:"ReflectionExtension::getINIEntries";i:1;s:5:"PHP 5";i:2;s:26:"Gets extension ini entries";i:3;s:56:"public array ReflectionExtension::getINIEntries ( void )";}
a:4:{i:0;s:28:"ReflectionExtension::getName";i:1;s:5:"PHP 5";i:2;s:19:"Gets extension name";i:3;s:51:"public string ReflectionExtension::getName ( void )";}
a:4:{i:0;s:31:"ReflectionExtension::getVersion";i:1;s:5:"PHP 5";i:2;s:22:"Gets extension version";i:3;s:54:"public string ReflectionExtension::getVersion ( void )";}
a:4:{i:0;s:25:"ReflectionExtension::info";i:1;s:5:"PHP 5";i:2;s:19:"Gets extension info";i:3;s:48:"public string ReflectionExtension::info ( void )";}
a:4:{i:0;s:31:"ReflectionExtension::__toString";i:1;s:5:"PHP 5";i:2;s:9:"To string";i:3;s:54:"public string ReflectionExtension::__toString ( void )";}
a:4:{i:0;s:31:"ReflectionFunction::__construct";i:1;s:5:"PHP 5";i:2;s:38:"Constructs a ReflectionFunction object";i:3;s:47:"ReflectionFunction::__construct ( mixed $name )";}
a:4:{i:0;s:26:"ReflectionFunction::export";i:1;s:5:"PHP 5";i:2;s:16:"Exports function";i:3;s:78:"public mixed ReflectionFunction::invoke ([ mixed $parameter [, mixed $... ]] )";}
a:4:{i:0;s:30:"ReflectionFunction::invokeArgs";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:21:"Invokes function args";i:3;s:59:"public mixed ReflectionFunction::invokeArgs ( array $args )";}
a:4:{i:0;s:30:"ReflectionFunction::isDisabled";i:1;s:5:"PHP 5";i:2;s:30:"Checks if function is disabled";i:3;s:53:"public string ReflectionFunction::__toString ( void )";}
a:4:{i:0;s:35:"ReflectionFunctionAbstract::__clone";i:1;s:5:"PHP 5";i:2;s:15:"Clones function";i:3;s:68:"abstract public void ReflectionFunctionAbstract::__toString ( void )";}
a:4:{i:0;s:29:"ReflectionMethod::__construct";i:1;s:5:"PHP 5";i:2;s:29:"Constructs a ReflectionMethod";i:3;s:61:"ReflectionMethod::__construct ( mixed $class , string $name )";}
a:4:{i:0;s:24:"ReflectionMethod::export";i:1;s:5:"PHP 5";i:2;s:27:"Export a reflection method.";i:3;s:67:"public ReflectionClass ReflectionMethod::getDeclaringClass ( void )";}
a:4:{i:0;s:30:"ReflectionMethod::getModifiers";i:1;s:5:"PHP 5";i:2;s:25:"Gets the method modifiers";i:3;s:50:"public int ReflectionMethod::getModifiers ( void )";}
a:4:{i:0;s:24:"ReflectionMethod::invoke";i:1;s:5:"PHP 5";i:2;s:6:"Invoke";i:3;s:93:"public mixed ReflectionMethod::invoke ( object $object [, mixed $parameter [, mixed $... ]] )";}
a:4:{i:0;s:28:"ReflectionMethod::invokeArgs";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:11:"Invoke args";i:3;s:74:"public mixed ReflectionMethod::invokeArgs ( object $object , array $args )";}
a:4:{i:0;s:28:"ReflectionMethod::isAbstract";i:1;s:5:"PHP 5";i:2;s:28:"Checks if method is abstract";i:3;s:51:"public string ReflectionMethod::__toString ( void )";}
a:4:{i:0;s:29:"ReflectionObject::__construct";i:1;s:5:"PHP 5";i:2;s:29:"Constructs a ReflectionObject";i:3;s:84:"public static string ReflectionObject::export ( string $argument [, bool $return ] )";}
a:4:{i:0;s:31:"ReflectionParameter::allowsNull";i:1;s:5:"PHP 5";i:2;s:25:"Checks if null is allowed";i:3;s:73:"ReflectionParameter::__construct ( string $function , string $parameter )";}
a:4:{i:0;s:27:"ReflectionParameter::export";i:1;s:5:"PHP 5";i:2;s:7:"Exports";i:3;s:58:"public mixed ReflectionParameter::getDefaultValue ( void )";}
a:4:{i:0;s:28:"ReflectionParameter::getName";i:1;s:5:"PHP 5";i:2;s:19:"Gets parameter name";i:3;s:54:"public string ReflectionParameter::__toString ( void )";}
a:4:{i:0;s:27:"ReflectionProperty::__clone";i:1;s:5:"PHP 5";i:2;s:5:"Clone";i:3;s:63:"ReflectionProperty::__construct ( mixed $class , string $name )";}
a:4:{i:0;s:26:"ReflectionProperty::export";i:1;s:5:"PHP 5";i:2;s:6:"Export";i:3;s:53:"public string ReflectionProperty::__toString ( void )";}
a:4:{i:0;s:17:"Reflector::export";i:1;s:5:"PHP 5";i:2;s:7:"Exports";i:3;s:53:"abstract public string Reflector::__toString ( void )";}
a:4:{i:0;s:15:"debug_zval_dump";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:65:"Dumps a string representation of an internal zend value to output";i:3;s:40:"void debug_zval_dump ( mixed $variable )";}
a:4:{i:0;s:5:"empty";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Determine whether a variable is empty";i:3;s:25:"bool empty ( mixed $var )";}
a:4:{i:0;s:8:"floatval";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:29:"Get float value of a variable";i:3;s:29:"float floatval ( mixed $var )";}
a:4:{i:0;s:16:"get_defined_vars";i:1;s:21:"PHP 4 >= 4.0.4, PHP 5";i:2;s:43:" Returns an array of all defined variables ";i:3;s:31:"array get_defined_vars ( void )";}
a:4:{i:0;s:17:"get_resource_type";i:1;s:21:"PHP 4 >= 4.0.2, PHP 5";i:2;s:27:" Returns the resource type ";i:3;s:45:"string get_resource_type ( resource $handle )";}
a:4:{i:0;s:7:"gettype";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Get the type of a variable";i:3;s:29:"string gettype ( mixed $var )";}
a:4:{i:0;s:6:"intval";i:1;s:12:"PHP 4, PHP 5";i:2;s:35:"Get the integer value of a variable";i:3;s:45:"int intval ( mixed $var [, int $base = 10 ] )";}
a:4:{i:0;s:8:"is_array";i:1;s:12:"PHP 4, PHP 5";i:2;s:36:"Finds whether a variable is an array";i:3;s:28:"bool is_array ( mixed $var )";}
a:4:{i:0;s:7:"is_bool";i:1;s:12:"PHP 4, PHP 5";i:2;s:43:" Finds out whether a variable is a boolean ";i:3;s:27:"bool is_bool ( mixed $var )";}
a:4:{i:0;s:11:"is_callable";i:1;s:21:"PHP 4 >= 4.0.6, PHP 5";i:2;s:68:" Verify that the contents of a variable can be called as a function ";i:3;s:93:"bool is_callable ( callback $name [, bool $syntax_only = false [, string &$callable_name ]] )";}
a:4:{i:0;s:8:"is_float";i:1;s:12:"PHP 4, PHP 5";i:2;s:45:"Finds whether the type of a variable is float";i:3;s:28:"bool is_float ( mixed $var )";}
a:4:{i:0;s:6:"is_int";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Find whether the type of a variable is integer";i:3;s:26:"bool is_int ( mixed $var )";}
a:4:{i:0;s:10:"is_numeric";i:1;s:12:"PHP 4, PHP 5";i:2;s:58:" Finds whether a variable is a number or a numeric string ";i:3;s:30:"bool is_numeric ( mixed $var )";}
a:4:{i:0;s:9:"is_object";i:1;s:12:"PHP 4, PHP 5";i:2;s:37:"Finds whether a variable is an object";i:3;s:29:"bool is_object ( mixed $var )";}
a:4:{i:0;s:11:"is_resource";i:1;s:12:"PHP 4, PHP 5";i:2;s:40:" Finds whether a variable is a resource ";i:3;s:31:"bool is_resource ( mixed $var )";}
a:4:{i:0;s:9:"is_scalar";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:38:" Finds whether a variable is a scalar ";i:3;s:29:"bool is_scalar ( mixed $var )";}
a:4:{i:0;s:9:"is_string";i:1;s:12:"PHP 4, PHP 5";i:2;s:45:"Find whether the type of a variable is string";i:3;s:29:"bool is_string ( mixed $var )";}
a:4:{i:0;s:9:"serialize";i:1;s:12:"PHP 4, PHP 5";i:2;s:46:"Generates a storable representation of a value";i:3;s:33:"string serialize ( mixed $value )";}
a:4:{i:0;s:7:"settype";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Set the type of a variable";i:3;s:43:"bool settype ( mixed &$var , string $type )";}
a:4:{i:0;s:6:"strval";i:1;s:12:"PHP 4, PHP 5";i:2;s:30:"Get string value of a variable";i:3;s:28:"string strval ( mixed $var )";}
a:4:{i:0;s:11:"unserialize";i:1;s:12:"PHP 4, PHP 5";i:2;s:50:" Creates a PHP value from a stored representation ";i:3;s:33:"mixed unserialize ( string $str )";}
a:4:{i:0;s:5:"unset";i:1;s:12:"PHP 4, PHP 5";i:2;s:22:"Unset a given variable";i:3;s:56:"void unset ( mixed $var [, mixed $var [, mixed $... ]] )";}
a:4:{i:0;s:8:"var_dump";i:1;s:12:"PHP 4, PHP 5";i:2;s:34:"Dumps information about a variable";i:3;s:67:"void var_dump ( mixed $expression [, mixed $expression [, $... ]] )";}
a:4:{i:0;s:10:"var_export";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:65:"Outputs or returns a parsable string representation of a variable";i:3;s:64:"mixed var_export ( mixed $expression [, bool $return = false ] )";}
a:4:{i:0;s:13:"oauth_get_sbs";i:1;s:19:"PECL OAuth >=0.99.7";i:2;s:32:"Generate a Signature Base String";i:3;s:38:"string oauth_urlencode ( string $uri )";}
a:4:{i:0;s:18:"OAuth::__construct";i:1;s:20:"PECL OAuth >= 0.99.1";i:2;s:25:"Create a new OAuth object";i:3;s:137:"public mixed OAuth::fetch ( string $protected_resource_url [, array $extra_parameters [, string $http_method [, array $http_headers ]]] )";}
a:4:{i:0;s:21:"OAuth::getAccessToken";i:1;s:20:"PECL OAuth >= 0.99.1";i:2;s:21:"Fetch an access token";i:3;s:123:"public array OAuth::getAccessToken ( string $access_token_url [, string $auth_session_handle [, string $verifier_token ]] )";}
a:4:{i:0;s:16:"OAuth::getCAPath";i:1;s:20:"PECL OAuth >= 0.99.8";i:2;s:19:"Gets CA information";i:3;s:91:"public array OAuth::getRequestToken ( string $request_token_url [, string $callback_url ] )";}
a:4:{i:0;s:18:"OAuth::setAuthType";i:1;s:20:"PECL OAuth >= 0.99.1";i:2;s:22:"Set authorization type";i:3;s:57:"public void OAuth::setRequestEngine ( string $reqengine )";}
a:4:{i:0;s:24:"OAuth::setRSACertificate";i:1;s:19:"PECL OAuth >= 1.0.0";i:2;s:23:"Set the RSA certificate";i:3;s:54:"public mixed OAuth::setRSACertificate ( string $cert )";}
a:4:{i:0;s:19:"OAuth::setTimestamp";i:1;s:19:"PECL OAuth >= 1.0.0";i:2;s:17:"Set the timestamp";i:3;s:68:"public bool OAuth::setToken ( string $token , string $token_secret )";}
a:4:{i:0;s:17:"OAuth::setVersion";i:1;s:20:"PECL OAuth >= 0.99.1";i:2;s:21:"Set the OAuth version";i:3;s:49:"public bool OAuth::setVersion ( string $version )";}
a:4:{i:0;s:35:"OAuthProvider::addRequiredParameter";i:1;s:19:"PECL OAuth >= 1.0.0";i:2;s:23:"Add required parameters";i:3;s:82:"public void OAuthProvider::checkOAuthRequest ([ string $uri [, string $method ]] )";}
a:4:{i:0;s:26:"OAuthProvider::__construct";i:1;s:19:"PECL OAuth >= 1.0.0";i:2;s:37:"Constructs a new OAuthProvider object";i:3;s:53:"OAuthProvider::__construct ([ array $params_array ] )";}
a:4:{i:0;s:30:"OAuthProvider::consumerHandler";i:1;s:19:"PECL OAuth >= 1.0.0";i:2;s:40:"Set the consumerHandler handler callback";i:3;s:74:"public void OAuthProvider::consumerHandler ( callback $callback_function )";}
a:4:{i:0;s:28:"OAuthProvider::generateToken";i:1;s:19:"PECL OAuth >= 1.0.0";i:2;s:23:"Generate a random token";i:3;s:95:"final public static string OAuthProvider::generateToken ( int $size [, bool $strong = false ] )";}
a:4:{i:0;s:32:"OAuthProvider::is2LeggedEndpoint";i:1;s:19:"PECL OAuth >= 1.0.0";i:2;s:17:"is2LeggedEndpoint";i:3;s:68:"public void OAuthProvider::is2LeggedEndpoint ( mixed $params_array )";}
a:4:{i:0;s:37:"OAuthProvider::isRequestTokenEndpoint";i:1;s:19:"PECL OAuth >= 1.0.0";i:2;s:27:"Sets isRequestTokenEndpoint";i:3;s:80:"public void OAuthProvider::timestampNonceHandler ( callback $callback_function )";}
a:4:{i:0;s:27:"OAuthProvider::tokenHandler";i:1;s:19:"PECL OAuth >= 1.0.0";i:2;s:37:"Set the tokenHandler handler callback";i:3;s:71:"public void OAuthProvider::tokenHandler ( callback $callback_function )";}
a:4:{i:0;s:32:"SCA_LocalProxy::createDataObject";i:1;s:17:"PECL SDO >= 0.5.0";i:2;s:15:" create an SDO ";i:3;s:98:"SDO_DataObject SCA_LocalProxy::createDataObject ( string $type_namespace_uri , string $type_name )";}
a:4:{i:0;s:31:"SCA_SoapProxy::createDataObject";i:1;s:17:"PECL SDO >= 0.5.0";i:2;s:15:" create an SDO ";i:3;s:97:"SDO_DataObject SCA_SoapProxy::createDataObject ( string $type_namespace_uri , string $type_name )";}
a:4:{i:0;s:21:"SCA::createDataObject";i:1;s:17:"PECL SDO >= 0.5.0";i:2;s:15:" create an SDO ";i:3;s:87:"SDO_DataObject SCA::createDataObject ( string $type_namespace_uri , string $type_name )";}
a:4:{i:0;s:15:"SCA::getService";i:1;s:17:"PECL SDO >= 0.5.0";i:2;s:30:" Obtain a proxy for a service ";i:3;s:79:"mixed SCA::getService ( string $target [, string $binding [, array $config ]] )";}
a:4:{i:0;s:13:"is_soap_fault";i:1;s:7:"Unknown";i:2;s:32:"Checks if a SOAP call has failed";i:3;s:36:"bool is_soap_fault ( mixed $object )";}
a:4:{i:0;s:22:"use_soap_error_handler";i:1;s:7:"Unknown";i:2;s:41:"Set whether to use the SOAP error handler";i:3;s:48:"bool use_soap_error_handler ([ bool $handler ] )";}
a:4:{i:0;s:23:"SoapClient::__construct";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:22:"SoapClient constructor";i:3;s:130:"public string SoapClient::__doRequest ( string $request , string $location , string $action , int $version [, int $one_way = 0 ] )";}
a:4:{i:0;s:26:"SoapClient::__getFunctions";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:40:"Returns list of available SOAP functions";i:3;s:48:"public array SoapClient::__getFunctions ( void )";}
a:4:{i:0;s:28:"SoapClient::__getLastRequest";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:25:"Returns last SOAP request";i:3;s:51:"public string SoapClient::__getLastRequest ( void )";}
a:4:{i:0;s:35:"SoapClient::__getLastRequestHeaders";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:46:"Returns the SOAP headers from the last request";i:3;s:58:"public string SoapClient::__getLastRequestHeaders ( void )";}
a:4:{i:0;s:29:"SoapClient::__getLastResponse";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:26:"Returns last SOAP response";i:3;s:52:"public string SoapClient::__getLastResponse ( void )";}
a:4:{i:0;s:36:"SoapClient::__getLastResponseHeaders";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:47:"Returns the SOAP headers from the last response";i:3;s:59:"public string SoapClient::__getLastResponseHeaders ( void )";}
a:4:{i:0;s:22:"SoapClient::__getTypes";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:28:"Returns a list of SOAP types";i:3;s:44:"public array SoapClient::__getTypes ( void )";}
a:4:{i:0;s:23:"SoapClient::__setCookie";i:1;s:14:"PHP 5 >= 5.0.4";i:2;s:23:"The __setCookie purpose";i:3;s:67:"public string SoapClient::__setLocation ([ string $new_location ] )";}
a:4:{i:0;s:28:"SoapClient::__setSoapHeaders";i:1;s:14:"PHP 5 >= 5.0.5";i:2;s:38:"Sets SOAP headers for subsequent calls";i:3;s:66:"public bool SoapClient::__setSoapHeaders ([ mixed $soapheaders ] )";}
a:4:{i:0;s:22:"SoapClient::__soapCall";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:21:"Calls a SOAP function";i:3;s:152:"public mixed SoapClient::__soapCall ( string $function_name , array $arguments [, array $options [, mixed $input_headers [, array &$output_headers ]]] )";}
a:4:{i:0;s:22:"SoapClient::SoapClient";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:22:"SoapClient constructor";i:3;s:58:"SoapClient::SoapClient ( mixed $wsdl [, array $options ] )";}
a:4:{i:0;s:23:"SoapServer::addFunction";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:50:"Adds one or more functions to handle SOAP requests";i:3;s:56:"public void SoapServer::addFunction ( mixed $functions )";}
a:4:{i:0;s:25:"SoapServer::addSoapHeader";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:33:"Add a SOAP header to the response";i:3;s:46:"public array SoapServer::getFunctions ( void )";}
a:4:{i:0;s:18:"SoapServer::handle";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:22:"Handles a SOAP request";i:3;s:58:"public void SoapServer::handle ([ string $soap_request ] )";}
a:4:{i:0;s:20:"SoapServer::setClass";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:42:"Sets the class which handles SOAP requests";i:3;s:58:"SoapServer::SoapServer ( mixed $wsdl [, array $options ] )";}
a:4:{i:0;s:22:"SoapFault::__construct";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:21:"SoapFault constructor";i:3;s:153:"SoapFault::SoapFault ( string $faultcode , string $faultstring [, string $faultactor [, string $detail [, string $faultname [, string $headerfault ]]]] )";}
a:4:{i:0;s:21:"SoapFault::__toString";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:45:"Obtain a string representation of a SoapFault";i:3;s:44:"public string SoapFault::__toString ( void )";}
a:4:{i:0;s:23:"SoapHeader::__construct";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:22:"SoapHeader constructor";i:3;s:119:"SoapHeader::SoapHeader ( string $namespace , string $name [, mixed $data [, bool $mustunderstand [, string $actor ]]] )";}
a:4:{i:0;s:22:"SoapParam::__construct";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:21:"SoapParam constructor";i:3;s:51:"SoapParam::SoapParam ( mixed $data , string $name )";}
a:4:{i:0;s:20:"SoapVar::__construct";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:19:"SoapVar constructor";i:3;s:151:"SoapVar::SoapVar ( string $data , string $encoding [, string $type_name [, string $type_namespace [, string $node_name [, string $node_namespace ]]]] )";}
a:4:{i:0;s:21:"xmlrpc_decode_request";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:33:"Decodes XML into native PHP types";i:3;s:90:"string xmlrpc_encode_request ( string $method , mixed $params [, array $output_options ] )";}
a:4:{i:0;s:13:"xmlrpc_encode";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:29:"Generates XML for a PHP value";i:3;s:54:"bool xmlrpc_set_type ( string &$value , string $type )";}
a:4:{i:0;s:11:"dotnet_load";i:1;s:5:"PHP 4";i:2;s:21:"Loads a DOTNET module";i:3;s:86:"int dotnet_load ( string $assembly_name [, string $datatype_name [, int $codepage ]] )";}
a:4:{i:0;s:3:"COM";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:9:"COM class";i:3;s:98:"com COM::COM ( string $module_name [, mixed $server_name [, int $codepage [, string $typelib ]]] )";}
a:4:{i:0;s:6:"DOTNET";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:12:"DOTNET class";i:3;s:87:"string DOTNET::DOTNET ( string $assembly_name , string $class_name [, int $codepage ] )";}
a:4:{i:0;s:7:"VARIANT";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:13:"VARIANT class";i:3;s:75:"object VARIANT::VARIANT ([ mixed $value [, int $type [, int $codepage ]]] )";}
a:4:{i:0;s:14:"com_event_sink";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:48:"Connect events from a COM object to a PHP object";i:3;s:89:"bool com_event_sink ( variant $comobject , object $sinkobject [, mixed $sinkinterface ] )";}
a:4:{i:0;s:21:"com_get_active_object";i:1;s:5:"PHP 5";i:2;s:63:"Returns a handle to an already running instance of a COM object";i:3;s:68:"variant com_get_active_object ( string $progid [, int $code_page ] )";}
a:4:{i:0;s:16:"com_load_typelib";i:1;s:21:"PHP 4 >= 4.1.0, PHP 5";i:2;s:15:"Loads a Typelib";i:3;s:74:"bool com_load_typelib ( string $typelib_name [, bool $case_insensitive ] )";}
a:4:{i:0;s:18:"com_print_typeinfo";i:1;s:21:"PHP 4 >= 4.2.0, PHP 5";i:2;s:61:"Print out a PHP class definition for a dispatchable interface";i:3;s:25:"void com_release ( void )";}
a:4:{i:0;s:11:"variant_abs";i:1;s:5:"PHP 5";i:2;s:39:"Returns the absolute value of a variant";i:3;s:48:"mixed variant_xor ( mixed $left , mixed $right )";}
a:4:{i:0;s:13:"printer_close";i:1;s:16:"PECL printer SVN";i:2;s:32:"Close an open printer connection";i:3;s:47:"void printer_close ( resource $printer_handle )";}
a:4:{i:0;s:20:"printer_create_brush";i:1;s:16:"PECL printer SVN";i:2;s:18:"Create a new brush";i:3;s:60:"resource printer_create_brush ( int $style , string $color )";}
a:4:{i:0;s:17:"printer_create_dc";i:1;s:16:"PECL printer SVN";i:2;s:27:"Create a new device context";i:3;s:51:"void printer_create_dc ( resource $printer_handle )";}
a:4:{i:0;s:19:"printer_create_font";i:1;s:16:"PECL printer SVN";i:2;s:17:"Create a new font";i:3;s:116:"bool printer_draw_bmp ( resource $printer_handle , string $filename , int $x , int $y [, int $width ], int $height )";}
a:4:{i:0;s:18:"printer_draw_chord";i:1;s:16:"PECL printer SVN";i:2;s:12:"Draw a chord";i:3;s:160:"void printer_draw_chord ( resource $printer_handle , int $rec_x , int $rec_y , int $rec_x1 , int $rec_y1 , int $rad_x , int $rad_y , int $rad_x1 , int $rad_y1 )";}
a:4:{i:0;s:19:"printer_draw_elipse";i:1;s:16:"PECL printer SVN";i:2;s:15:"Draw an ellipse";i:3;s:101:"void printer_draw_elipse ( resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y )";}
a:4:{i:0;s:17:"printer_draw_line";i:1;s:16:"PECL printer SVN";i:2;s:11:"Draw a line";i:3;s:103:"void printer_draw_line ( resource $printer_handle , int $from_x , int $from_y , int $to_x , int $to_y )";}
a:4:{i:0;s:16:"printer_draw_pie";i:1;s:16:"PECL printer SVN";i:2;s:10:"Draw a pie";i:3;s:160:"void printer_draw_pie ( resource $printer_handle , int $rec_x , int $rec_y , int $rec_x1 , int $rec_y1 , int $rad1_x , int $rad1_y , int $rad2_x , int $rad2_y )";}
a:4:{i:0;s:22:"printer_draw_rectangle";i:1;s:16:"PECL printer SVN";i:2;s:16:"Draw a rectangle";i:3;s:104:"void printer_draw_rectangle ( resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y )";}
a:4:{i:0;s:22:"printer_draw_roundrect";i:1;s:16:"PECL printer SVN";i:2;s:37:"Draw a rectangle with rounded corners";i:3;s:131:"void printer_draw_roundrect ( resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y , int $width , int $height )";}
a:4:{i:0;s:17:"printer_draw_text";i:1;s:16:"PECL printer SVN";i:2;s:9:"Draw text";i:3;s:84:"void printer_draw_text ( resource $printer_handle , string $text , int $x , int $y )";}
a:4:{i:0;s:15:"printer_end_doc";i:1;s:16:"PECL printer SVN";i:2;s:14:"Close document";i:3;s:70:"mixed printer_get_option ( resource $printer_handle , string $option )";}
a:4:{i:0;s:12:"printer_list";i:1;s:16:"PECL printer SVN";i:2;s:50:"Return an array of printers attached to the server";i:3;s:69:"array printer_list ( int $enumtype [, string $name [, int $level ]] )";}
a:4:{i:0;s:26:"printer_logical_fontheight";i:1;s:16:"PECL printer SVN";i:2;s:23:"Get logical font height";i:3;s:73:"int printer_logical_fontheight ( resource $printer_handle , int $height )";}
a:4:{i:0;s:12:"printer_open";i:1;s:16:"PECL printer SVN";i:2;s:31:"Opens a connection to a printer";i:3;s:48:"resource printer_open ([ string $printername ] )";}
a:4:{i:0;s:20:"printer_select_brush";i:1;s:16:"PECL printer SVN";i:2;s:14:"Select a brush";i:3;s:79:"void printer_select_brush ( resource $printer_handle , resource $brush_handle )";}
a:4:{i:0;s:19:"printer_select_font";i:1;s:16:"PECL printer SVN";i:2;s:13:"Select a font";i:3;s:77:"void printer_select_font ( resource $printer_handle , resource $font_handle )";}
a:4:{i:0;s:18:"printer_select_pen";i:1;s:16:"PECL printer SVN";i:2;s:12:"Select a pen";i:3;s:75:"void printer_select_pen ( resource $printer_handle , resource $pen_handle )";}
a:4:{i:0;s:18:"printer_set_option";i:1;s:16:"PECL printer SVN";i:2;s:32:"Configure the printer connection";i:3;s:81:"bool printer_set_option ( resource $printer_handle , int $option , mixed $value )";}
a:4:{i:0;s:17:"printer_start_doc";i:1;s:16:"PECL printer SVN";i:2;s:20:"Start a new document";i:3;s:73:"bool printer_start_doc ( resource $printer_handle [, string $document ] )";}
a:4:{i:0;s:18:"printer_start_page";i:1;s:16:"PECL printer SVN";i:2;s:16:"Start a new page";i:3;s:65:"bool printer_write ( resource $printer_handle , string $content )";}
a:4:{i:0;s:14:"w32api_deftype";i:1;s:14:"PHP 4 >= 4.2.0";i:2;s:50:"Defines a type for use with other w32api_functions";i:3;s:119:"bool w32api_deftype ( string $typename , string $member1_type , string $member1_name [, string $... [, string $... ]] )";}
a:4:{i:0;s:17:"w32api_init_dtype";i:1;s:14:"PHP 4 >= 4.2.0";i:2;s:81:"Creates an instance of the data type typename and fills it with the values passed";i:3;s:43:"void w32api_set_call_method ( int $method )";}
a:4:{i:0;s:19:"win32_ps_list_procs";i:1;s:21:"PECL win32ps >= 1.0.1";i:2;s:22:"List running processes";i:3;s:32:"array win32_ps_stat_mem ( void )";}
a:4:{i:0;s:18:"win32_ps_stat_proc";i:1;s:21:"PECL win32ps >= 1.0.1";i:2;s:12:"Stat process";i:3;s:44:"array win32_ps_stat_proc ([ int $pid = 0 ] )";}
a:4:{i:0;s:22:"win32_continue_service";i:1;s:21:"PECL win32service SVN";i:2;s:24:"Resumes a paused service";i:3;s:66:"mixed win32_create_service ( array $details [, string $machine ] )";}
a:4:{i:0;s:20:"win32_delete_service";i:1;s:21:"PECL win32service SVN";i:2;s:45:"Deletes a service entry from the SCM database";i:3;s:71:"mixed win32_delete_service ( string $servicename [, string $machine ] )";}
a:4:{i:0;s:30:"win32_get_last_control_message";i:1;s:21:"PECL win32service SVN";i:2;s:62:"Returns the last control message that was sent to this service";i:3;s:77:"mixed win32_query_service_status ( string $servicename [, string $machine ] )";}
a:4:{i:0;s:24:"win32_set_service_status";i:1;s:21:"PECL win32service SVN";i:2;s:25:"Update the service status";i:3;s:58:"mixed win32_start_service_ctrl_dispatcher ( string $name )";}
a:4:{i:0;s:19:"win32_start_service";i:1;s:21:"PECL win32service SVN";i:2;s:16:"Starts a service";i:3;s:67:"int win32_stop_service ( string $servicename [, string $machine ] )";}
a:4:{i:0;s:13:"DOMAttr::isId";i:1;s:5:"PHP 5";i:2;s:37:" Checks if attribute is a defined ID ";i:3;s:27:"bool DOMAttr::isId ( void )";}
a:4:{i:0;s:28:"DOMCharacterData::appendData";i:1;s:5:"PHP 5";i:2;s:64:" Append the string to the end of the character data of the node ";i:3;s:67:"string DOMCharacterData::substringData ( int $offset , int $count )";}
a:4:{i:0;s:23:"DOMComment::__construct";i:1;s:5:"PHP 5";i:2;s:33:" Creates a new DOMComment object ";i:3;s:44:"DOMComment::__construct ([ string $value ] )";}
a:4:{i:0;s:24:"DOMDocument::__construct";i:1;s:5:"PHP 5";i:2;s:34:" Creates a new DOMDocument object ";i:3;s:68:"DOMDocument::__construct ([ string $version [, string $encoding ]] )";}
a:4:{i:0;s:28:"DOMDocument::createAttribute";i:1;s:5:"PHP 5";i:2;s:20:"Create new attribute";i:3;s:73:"DOMElement DOMDocument::createElement ( string $name [, string $value ] )";}
a:4:{i:0;s:28:"DOMDocument::createElementNS";i:1;s:5:"PHP 5";i:2;s:54:" Create new element node with an associated namespace ";i:3;s:107:"DOMElement DOMDocument::createElementNS ( string $namespaceURI , string $qualifiedName [, string $value ] )";}
a:4:{i:0;s:34:"DOMDocument::createEntityReference";i:1;s:5:"PHP 5";i:2;s:32:"Create new entity reference node";i:3;s:60:"DOMElement DOMDocument::getElementById ( string $elementId )";}
a:4:{i:0;s:33:"DOMDocument::getElementsByTagName";i:1;s:5:"PHP 5";i:2;s:45:"Searches for all elements with given tag name";i:3;s:62:"DOMNodeList DOMDocument::getElementsByTagName ( string $name )";}
a:4:{i:0;s:35:"DOMDocument::getElementsByTagNameNS";i:1;s:5:"PHP 5";i:2;s:70:" Searches for all elements with given tag name in specified namespace ";i:3;s:92:"DOMNodeList DOMDocument::getElementsByTagNameNS ( string $namespaceURI , string $localName )";}
a:4:{i:0;s:23:"DOMDocument::importNode";i:1;s:5:"PHP 5";i:2;s:33:"Import node into current document";i:3;s:73:"DOMNode DOMDocument::importNode ( DOMNode $importedNode [, bool $deep ] )";}
a:4:{i:0;s:17:"DOMDocument::load";i:1;s:5:"PHP 5";i:2;s:22:" Load XML from a file ";i:3;s:66:"mixed DOMDocument::load ( string $filename [, int $options = 0 ] )";}
a:4:{i:0;s:21:"DOMDocument::loadHTML";i:1;s:5:"PHP 5";i:2;s:25:" Load HTML from a string ";i:3;s:45:"bool DOMDocument::loadHTML ( string $source )";}
a:4:{i:0;s:25:"DOMDocument::loadHTMLFile";i:1;s:5:"PHP 5";i:2;s:23:" Load HTML from a file ";i:3;s:51:"bool DOMDocument::loadHTMLFile ( string $filename )";}
a:4:{i:0;s:20:"DOMDocument::loadXML";i:1;s:5:"PHP 5";i:2;s:24:" Load XML from a string ";i:3;s:67:"mixed DOMDocument::loadXML ( string $source [, int $options = 0 ] )";}
a:4:{i:0;s:30:"DOMDocument::normalizeDocument";i:1;s:5:"PHP 5";i:2;s:23:"Normalizes the document";i:3;s:81:"bool DOMDocument::registerNodeClass ( string $baseclass , string $extendedclass )";}
a:4:{i:0;s:28:"DOMDocument::relaxNGValidate";i:1;s:5:"PHP 5";i:2;s:45:" Performs relaxNG validation on the document ";i:3;s:60:"int DOMDocument::save ( string $filename [, int $options ] )";}
a:4:{i:0;s:21:"DOMDocument::saveHTML";i:1;s:5:"PHP 5";i:2;s:65:" Dumps the internal document into a string using HTML formatting ";i:3;s:37:"string DOMDocument::saveHTML ( void )";}
a:4:{i:0;s:25:"DOMDocument::saveHTMLFile";i:1;s:5:"PHP 5";i:2;s:63:" Dumps the internal document into a file using HTML formatting ";i:3;s:50:"int DOMDocument::saveHTMLFile ( string $filename )";}
a:4:{i:0;s:20:"DOMDocument::saveXML";i:1;s:5:"PHP 5";i:2;s:48:" Dumps the internal XML tree back into a string ";i:3;s:65:"string DOMDocument::saveXML ([ DOMNode $node [, int $options ]] )";}
a:4:{i:0;s:27:"DOMDocument::schemaValidate";i:1;s:5:"PHP 5";i:2;s:40:" Validates a document based on a schema ";i:3;s:35:"bool DOMDocument::validate ( void )";}
a:4:{i:0;s:21:"DOMDocument::xinclude";i:1;s:5:"PHP 5";i:2;s:47:" Substitutes XIncludes in a DOMDocument Object ";i:3;s:45:"int DOMDocument::xinclude ([ int $options ] )";}
a:4:{i:0;s:30:"DOMDocumentFragment::appendXML";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:19:"Append raw XML data";i:3;s:52:"bool DOMDocumentFragment::appendXML ( string $data )";}
a:4:{i:0;s:23:"DOMElement::__construct";i:1;s:5:"PHP 5";i:2;s:33:" Creates a new DOMElement object ";i:3;s:84:"DOMElement::__construct ( string $name [, string $value [, string $namespaceURI ]] )";}
a:4:{i:0;s:24:"DOMElement::getAttribute";i:1;s:5:"PHP 5";i:2;s:26:"Returns value of attribute";i:3;s:61:"DOMNodeList DOMElement::getElementsByTagName ( string $name )";}
a:4:{i:0;s:34:"DOMElement::getElementsByTagNameNS";i:1;s:5:"PHP 5";i:2;s:42:"Get elements by namespaceURI and localName";i:3;s:91:"DOMNodeList DOMElement::getElementsByTagNameNS ( string $namespaceURI , string $localName )";}
a:4:{i:0;s:24:"DOMElement::hasAttribute";i:1;s:5:"PHP 5";i:2;s:33:"Checks to see if attribute exists";i:3;s:65:"DOMAttr DOMElement::setAttribute ( string $name , string $value )";}
a:4:{i:0;s:28:"DOMElement::setAttributeNode";i:1;s:5:"PHP 5";i:2;s:34:"Adds new attribute node to element";i:3;s:91:"void DOMElement::setIdAttributeNS ( string $namespaceURI , string $localName , bool $isId )";}
a:4:{i:0;s:31:"DOMEntityReference::__construct";i:1;s:5:"PHP 5";i:2;s:41:" Creates a new DOMEntityReference object ";i:3;s:48:"DOMEntityReference::__construct ( string $name )";}
a:4:{i:0;s:30:"DOMImplementation::__construct";i:1;s:5:"PHP 5";i:2;s:40:" Creates a new DOMImplementation object ";i:3;s:145:"DOMDocumentType DOMImplementation::createDocumentType ([ string $qualifiedName = NULL [, string $publicId = NULL [, string $systemId = NULL ]]] )";}
a:4:{i:0;s:29:"DOMImplementation::hasFeature";i:1;s:5:"PHP 5";i:2;s:62:" Test if the DOM implementation implements a specific feature ";i:3;s:72:"bool DOMImplementation::hasFeature ( string $feature , string $version )";}
a:4:{i:0;s:29:"DOMNamedNodeMap::getNamedItem";i:1;s:5:"PHP 5";i:2;s:36:" Retrieves a node specified by name ";i:3;s:44:"DOMNode DOMNamedNodeMap::item ( int $index )";}
a:4:{i:0;s:20:"DOMNode::appendChild";i:1;s:5:"PHP 5";i:2;s:43:" Adds new child at the end of the children ";i:3;s:49:"DOMNode DOMNode::appendChild ( DOMNode $newnode )";}
a:4:{i:0;s:18:"DOMNode::cloneNode";i:1;s:5:"PHP 5";i:2;s:15:" Clones a node ";i:3;s:38:"public int DOMNode::getLineNo ( void )";}
a:4:{i:0;s:22:"DOMNode::hasAttributes";i:1;s:5:"PHP 5";i:2;s:31:" Checks if node has attributes ";i:3;s:49:"DOMNode DOMNode::removeChild ( DOMNode $oldnode )";}
a:4:{i:0;s:21:"DOMNode::replaceChild";i:1;s:5:"PHP 5";i:2;s:18:" Replaces a child ";i:3;s:69:"DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )";}
a:4:{i:0;s:17:"DOMNodelist::item";i:1;s:5:"PHP 5";i:2;s:37:" Retrieves a node specified by index ";i:3;s:40:"DOMNode DOMNodelist::item ( int $index )";}
a:4:{i:0;s:37:"DOMText::isWhitespaceInElementContent";i:1;s:5:"PHP 5";i:2;s:54:" Indicates whether this text node contains whitespace ";i:3;s:42:"DOMText DOMText::splitText ( int $offset )";}
a:4:{i:0;s:18:"DOMXPath::evaluate";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:78:" Evaluates the given XPath expression and returns a typed result if possible. ";i:3;s:108:"mixed DOMXPath::evaluate ( string $expression [, DOMNode $contextnode [, boolean $registerNodeNS = true ]] )";}
a:4:{i:0;s:15:"DOMXPath::query";i:1;s:5:"PHP 5";i:2;s:38:" Evaluates the given XPath expression ";i:3;s:111:"DOMNodeList DOMXPath::query ( string $expression [, DOMNode $contextnode [, boolean $registerNodeNS = true ]] )";}
a:4:{i:0;s:30:"DOMXPath::registerPhpFunctions";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:41:"Register PHP functions as XPath functions";i:3;s:65:"public void DOMXPath::registerPhpFunctions ([ mixed $restrict ] )";}
a:4:{i:0;s:14:"domxml_new_doc";i:1;s:14:"PHP 4 >= 4.2.0";i:2;s:32:" Creates new empty XML document ";i:3;s:82:"DomDocument domxml_open_file ( string $filename [, int $mode [, array &$error ]] )";}
a:4:{i:0;s:15:"domxml_open_mem";i:1;s:14:"PHP 4 >= 4.2.0";i:2;s:39:"Creates a DOM object of an XML document";i:3;s:76:"DomDocument domxml_open_mem ( string $str [, int $mode [, array &$error ]] )";}
a:4:{i:0;s:14:"domxml_version";i:1;s:14:"PHP 4 >= 4.1.0";i:2;s:30:" Gets the XML library version ";i:3;s:30:"string domxml_version ( void )";}
a:4:{i:0;s:14:"domxml_xmltree";i:1;s:14:"PHP 4 >= 4.2.0";i:2;s:52:" Creates a tree of PHP objects from an XML document ";i:3;s:32:"int domxml_xslt_version ( void )";}
a:4:{i:0;s:21:"xpath_eval_expression";i:1;s:5:"PHP 4";i:2;s:55:" Evaluates the XPath Location Path in the given string ";i:3;s:112:"XPathObject xpath_eval_expression ( XPathContext $xpath_context , string $expression [, domnode $contextnode ] )";}
a:4:{i:0;s:10:"xpath_eval";i:1;s:5:"PHP 4";i:2;s:55:" Evaluates the XPath Location Path in the given string ";i:3;s:38:"XPathContext xptr_new_context ( void )";}
a:4:{i:0;s:19:"libxml_clear_errors";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:27:" Clear libxml error buffer ";i:3;s:32:"array libxml_get_errors ( void )";}
a:4:{i:0;s:21:"libxml_get_last_error";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:33:" Retrieve last error from libxml ";i:3;s:61:"void libxml_set_streams_context ( resource $streams_context )";}
a:4:{i:0;s:26:"libxml_use_internal_errors";i:1;s:14:"PHP 5 >= 5.1.0";i:2;s:75:" Disable libxml errors and allow user to fetch error information as needed ";i:3;s:63:"bool libxml_use_internal_errors ([ bool $use_errors = false ] )";}
a:4:{i:0;s:10:"qdom_error";i:1;s:14:"PHP 4 >= 4.0.5";i:2;s:84:"Returns the error string from the last QDOM operation or FALSE if no errors occurred";i:3;s:38:"QDomDocument qdom_tree ( string $doc )";}
a:4:{i:0;s:30:"SimpleXMLElement::addAttribute";i:1;s:14:"PHP 5 >= 5.1.3";i:2;s:44:" Adds an attribute to the SimpleXML element ";i:3;s:98:"public void SimpleXMLElement::addAttribute ( string $name , string $value [, string $namespace ] )";}
a:4:{i:0;s:26:"SimpleXMLElement::addChild";i:1;s:14:"PHP 5 >= 5.1.3";i:2;s:38:" Adds a child element to the XML node ";i:3;s:108:"public SimpleXMLElement SimpleXMLElement::addChild ( string $name [, string $value [, string $namespace ]] )";}
a:4:{i:0;s:26:"SimpleXMLElement::children";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:28:"Finds children of given node";i:3;s:96:"public SimpleXMLElement SimpleXMLElement::children ([ string $ns [, bool $is_prefix = false ]] )";}
a:4:{i:0;s:29:"SimpleXMLElement::__construct";i:1;s:14:"PHP 5 >= 5.0.1";i:2;s:39:" Creates a new SimpleXMLElement object ";i:3;s:155:"public SimpleXMLElement::__construct() ( string $data [, int $options = 0 [, bool $data_is_url = false [, string $ns = "" [, bool $is_prefix = false ]]]] )";}
a:4:{i:0;s:23:"SimpleXMLElement::count";i:1;s:14:"PHP 5 >= 5.3.0";i:2;s:33:"Counts the children of an element";i:3;s:47:"public integer SimpleXMLElement::count ( void )";}
a:4:{i:0;s:34:"SimpleXMLElement::getDocNamespaces";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:41:" Returns namespaces declared in document ";i:3;s:78:"public array SimpleXMLElement::getDocNamespaces ([ bool $recursive = false ] )";}
a:4:{i:0;s:25:"SimpleXMLElement::getName";i:1;s:14:"PHP 5 >= 5.1.3";i:2;s:32:"Gets the name of the XML element";i:3;s:48:"public string SimpleXMLElement::getName ( void )";}
a:4:{i:0;s:31:"SimpleXMLElement::getNamespaces";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:37:" Returns namespaces used in document ";i:3;s:75:"public array SimpleXMLElement::getNamespaces ([ bool $recursive = false ] )";}
a:4:{i:0;s:23:"SimpleXMLElement::xpath";i:1;s:14:"PHP 5 >= 5.2.0";i:2;s:28:"Runs XPath query on XML data";i:3;s:53:"public array SimpleXMLElement::xpath ( string $path )";}
a:4:{i:0;s:19:"simplexml_load_file";i:1;s:5:"PHP 5";i:2;s:39:" Interprets an XML file into an object ";i:3;s:156:"object simplexml_load_file ( string $filename [, string $class_name = "SimpleXMLElement" [, int $options = 0 [, string $ns [, bool $is_prefix = false ]]]] )";}
a:4:{i:0;s:21:"simplexml_load_string";i:1;s:5:"PHP 5";i:2;s:43:" Interprets a string of XML into an object ";i:3;s:154:"object simplexml_load_string ( string $data [, string $class_name = "SimpleXMLElement" [, int $options = 0 [, string $ns [, bool $is_prefix = false ]]]] )";}
a:4:{i:0;s:13:"wddx_add_vars";i:1;s:12:"PHP 4, PHP 5";i:2;s:52:"Add variables to a WDDX packet with the specified ID";i:3;s:62:"string wddx_serialize_vars ( mixed $var_name [, mixed $... ] )";}
a:4:{i:0;s:16:"wddx_unserialize";i:1;s:12:"PHP 4, PHP 5";i:2;s:26:"Unserializes a WDDX packet";i:3;s:41:"mixed wddx_unserialize ( string $packet )";}
a:4:{i:0;s:16:"xml_error_string";i:1;s:12:"PHP 4, PHP 5";i:2;s:27:"Get XML parser error string";i:3;s:97:"int xml_parse_into_struct ( resource $parser , string $data , array &$values [, array &$index ] )";}
a:4:{i:0;s:9:"xml_parse";i:1;s:12:"PHP 4, PHP 5";i:2;s:29:"Start parsing an XML document";i:3;s:75:"bool xml_set_notation_decl_handler ( resource $parser , callback $handler )";}
a:4:{i:0;s:14:"xml_set_object";i:1;s:12:"PHP 4, PHP 5";i:2;s:31:"Use XML Parser within an object";i:3;s:58:"bool xml_set_object ( resource $parser , object &$object )";}
a:4:{i:0;s:36:"xml_set_start_namespace_decl_handler";i:1;s:21:"PHP 4 >= 4.0.5, PHP 5";i:2;s:44:" Set up start namespace declaration handler ";i:3;s:82:"bool xml_set_unparsed_entity_decl_handler ( resource $parser , callback $handler )";}
a:4:{i:0;s:16:"XMLReader::close";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:25:"Close the XMLReader input";i:3;s:32:"bool XMLReader::isValid ( void )";}
a:4:{i:0;s:26:"XMLReader::lookupNamespace";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:29:"Lookup namespace for a prefix";i:3;s:79:"bool XMLReader::open ( string $URI [, string $encoding [, int $options = 0 ]] )";}
a:4:{i:0;s:15:"XMLReader::read";i:1;s:14:"PHP 5 >= 5.1.2";i:2;s:29:"Move to next node in document";i:3;s:81:"bool XMLReader::xml ( string $source [, string $encoding [, int $options = 0 ]] )";}
a:4:{i:0;s:23:"XMLWriter::endAttribute";i:1;s:39:"PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0";i:2;s:13:"End attribute";i:3;s:66:"bool xmlwriter_write_raw ( resource $xmlwriter , string $content )";}
a:4:{i:0;s:26:"XSLTProcessor::__construct";i:1;s:5:"PHP 5";i:2;s:34:"Creates a new XSLTProcessor object";i:3;s:35:"XSLTProcessor::__construct ( void )";}
a:4:{i:0;s:27:"XSLTProcessor::getParameter";i:1;s:5:"PHP 5";i:2;s:24:"Get value of a parameter";i:3;s:44:"bool XSLTProcessor::hasExsltSupport ( void )";}
a:4:{i:0;s:31:"XSLTProcessor::importStylesheet";i:1;s:5:"PHP 5";i:2;s:17:"Import stylesheet";i:3;s:63:"void XSLTProcessor::registerPHPFunctions ([ mixed $restrict ] )";}
a:4:{i:0;s:30:"XSLTProcessor::removeParameter";i:1;s:5:"PHP 5";i:2;s:16:"Remove parameter";i:3;s:71:"bool XSLTProcessor::setParameter ( string $namespace , array $options )";}
a:4:{i:0;s:27:"XSLTProcessor::setProfiling";i:1;s:12:"PHP >= 5.3.0";i:2;s:26:"Sets profiling output file";i:3;s:53:"bool XSLTProcessor::setProfiling ( string $filename )";}
a:4:{i:0;s:29:"XSLTProcessor::transformToDoc";i:1;s:5:"PHP 5";i:2;s:26:"Transform to a DOMDocument";i:3;s:58:"DOMDocument XSLTProcessor::transformToDoc ( DOMNode $doc )";}
a:4:{i:0;s:29:"XSLTProcessor::transformToUri";i:1;s:5:"PHP 5";i:2;s:16:"Transform to URI";i:3;s:68:"int XSLTProcessor::transformToURI ( DOMDocument $doc , string $uri )";}
a:4:{i:0;s:29:"XSLTProcessor::transformToXML";i:1;s:5:"PHP 5";i:2;s:16:"Transform to XML";i:3;s:57:"string XSLTProcessor::transformToXML ( DOMDocument $doc )";}
a:4:{i:0;s:17:"xslt_backend_info";i:1;s:14:"PHP 4 >= 4.3.0";i:2;s:66:"Returns the information on the compilation settings of the backend";i:3;s:33:"string xslt_backend_name ( void )";}
a:4:{i:0;s:20:"xslt_backend_version";i:1;s:14:"PHP 4 >= 4.3.0";i:2;s:39:"Returns the version number of Sablotron";i:3;s:36:"string xslt_backend_version ( void )";}
a:4:{i:0;s:11:"xslt_create";i:1;s:14:"PHP 4 >= 4.0.3";i:2;s:27:"Create a new XSLT processor";i:3;s:29:"resource xslt_create ( void )";}
a:4:{i:0;s:10:"xslt_errno";i:1;s:14:"PHP 4 >= 4.0.3";i:2;s:23:"Returns an error number";i:3;s:34:"string xslt_error ( resource $xh )";}
a:4:{i:0;s:9:"xslt_free";i:1;s:14:"PHP 4 >= 4.0.3";i:2;s:19:"Free XSLT processor";i:3;s:153:"mixed xslt_process ( resource $xh , string $xmlcontainer , string $xslcontainer [, string $resultcontainer [, array $arguments [, array $parameters ]]] )";}
a:4:{i:0;s:12:"xslt_set_log";i:1;s:14:"PHP 4 >= 4.0.6";i:2;s:41:"Set the log file to write log messages to";i:3;s:50:"void xslt_set_log ( resource $xh [, mixed $log ] )";}
a:4:{i:0;s:15:"xslt_set_object";i:1;s:14:"PHP 4 >= 4.3.0";i:2;s:54:"Sets the object in which to resolve callback functions";i:3;s:59:"bool xslt_set_object ( resource $processor , object &$obj )";}
a:4:{i:0;s:20:"xslt_set_sax_handler";i:1;s:14:"PHP 4 >= 4.0.3";i:2;s:37:"Set SAX handlers for a XSLT processor";i:3;s:68:"void xslt_set_sax_handlers ( resource $processor , array $handlers )";}
a:4:{i:0;s:11:"xslt_setopt";i:1;s:14:"PHP 4 >= 4.3.0";i:2;s:36:"Set options on a given xsl processor";i:3;s:56:"mixed xslt_setopt ( resource $processor , int $newmask )";}
